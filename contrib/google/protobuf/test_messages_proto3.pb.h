// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/test_messages_proto3.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
namespace protobuf_test_messages {
namespace proto3 {
class EnumOnlyProto3;
struct EnumOnlyProto3DefaultTypeInternal;
extern EnumOnlyProto3DefaultTypeInternal _EnumOnlyProto3_default_instance_;
class ForeignMessage;
struct ForeignMessageDefaultTypeInternal;
extern ForeignMessageDefaultTypeInternal _ForeignMessage_default_instance_;
class NullHypothesisProto3;
struct NullHypothesisProto3DefaultTypeInternal;
extern NullHypothesisProto3DefaultTypeInternal _NullHypothesisProto3_default_instance_;
class TestAllTypesProto3;
struct TestAllTypesProto3DefaultTypeInternal;
extern TestAllTypesProto3DefaultTypeInternal _TestAllTypesProto3_default_instance_;
class TestAllTypesProto3_MapBoolBoolEntry_DoNotUse;
struct TestAllTypesProto3_MapBoolBoolEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapBoolBoolEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse;
struct TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse;
struct TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse;
struct TestAllTypesProto3_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt32FloatEntry_DoNotUse;
struct TestAllTypesProto3_MapInt32FloatEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapInt32FloatEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt32Int32Entry_DoNotUse;
struct TestAllTypesProto3_MapInt32Int32Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapInt32Int32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapInt64Int64Entry_DoNotUse;
struct TestAllTypesProto3_MapInt64Int64Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapInt64Int64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse;
struct TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse;
struct TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse;
struct TestAllTypesProto3_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse;
struct TestAllTypesProto3_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringBytesEntry_DoNotUse;
struct TestAllTypesProto3_MapStringBytesEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringBytesEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringBytesEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse;
struct TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse;
struct TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse;
struct TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse;
struct TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapStringStringEntry_DoNotUse;
struct TestAllTypesProto3_MapStringStringEntry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapStringStringEntry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse;
struct TestAllTypesProto3_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse;
struct TestAllTypesProto3_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal;
extern TestAllTypesProto3_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse_default_instance_;
class TestAllTypesProto3_NestedMessage;
struct TestAllTypesProto3_NestedMessageDefaultTypeInternal;
extern TestAllTypesProto3_NestedMessageDefaultTypeInternal _TestAllTypesProto3_NestedMessage_default_instance_;
}  // namespace proto3
}  // namespace protobuf_test_messages
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_test_messages::proto3::EnumOnlyProto3* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::EnumOnlyProto3>(Arena*);
template<> ::protobuf_test_messages::proto3::ForeignMessage* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::ForeignMessage>(Arena*);
template<> ::protobuf_test_messages::proto3::NullHypothesisProto3* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::NullHypothesisProto3>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapBoolBoolEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32FloatEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt32Int32Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapInt64Int64Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringBytesEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapStringStringEntry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse>(Arena*);
template<> ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* Arena::CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_test_messages {
namespace proto3 {

enum TestAllTypesProto3_NestedEnum : int {
  TestAllTypesProto3_NestedEnum_FOO = 0,
  TestAllTypesProto3_NestedEnum_BAR = 1,
  TestAllTypesProto3_NestedEnum_BAZ = 2,
  TestAllTypesProto3_NestedEnum_NEG = -1,
  TestAllTypesProto3_NestedEnum_TestAllTypesProto3_NestedEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  TestAllTypesProto3_NestedEnum_TestAllTypesProto3_NestedEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool TestAllTypesProto3_NestedEnum_IsValid(int value);
constexpr TestAllTypesProto3_NestedEnum TestAllTypesProto3_NestedEnum_NestedEnum_MIN = TestAllTypesProto3_NestedEnum_NEG;
constexpr TestAllTypesProto3_NestedEnum TestAllTypesProto3_NestedEnum_NestedEnum_MAX = TestAllTypesProto3_NestedEnum_BAZ;
constexpr int TestAllTypesProto3_NestedEnum_NestedEnum_ARRAYSIZE = TestAllTypesProto3_NestedEnum_NestedEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TestAllTypesProto3_NestedEnum_descriptor();
template<typename T>
inline const std::string& TestAllTypesProto3_NestedEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TestAllTypesProto3_NestedEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TestAllTypesProto3_NestedEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TestAllTypesProto3_NestedEnum_descriptor(), enum_t_value);
}
inline bool TestAllTypesProto3_NestedEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, TestAllTypesProto3_NestedEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TestAllTypesProto3_NestedEnum>(
    TestAllTypesProto3_NestedEnum_descriptor(), name, value);
}
enum TestAllTypesProto3_AliasedEnum : int {
  TestAllTypesProto3_AliasedEnum_ALIAS_FOO = 0,
  TestAllTypesProto3_AliasedEnum_ALIAS_BAR = 1,
  TestAllTypesProto3_AliasedEnum_ALIAS_BAZ = 2,
  TestAllTypesProto3_AliasedEnum_MOO = 2,
  TestAllTypesProto3_AliasedEnum_moo = 2,
  TestAllTypesProto3_AliasedEnum_bAz = 2,
  TestAllTypesProto3_AliasedEnum_TestAllTypesProto3_AliasedEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  TestAllTypesProto3_AliasedEnum_TestAllTypesProto3_AliasedEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool TestAllTypesProto3_AliasedEnum_IsValid(int value);
constexpr TestAllTypesProto3_AliasedEnum TestAllTypesProto3_AliasedEnum_AliasedEnum_MIN = TestAllTypesProto3_AliasedEnum_ALIAS_FOO;
constexpr TestAllTypesProto3_AliasedEnum TestAllTypesProto3_AliasedEnum_AliasedEnum_MAX = TestAllTypesProto3_AliasedEnum_ALIAS_BAZ;
constexpr int TestAllTypesProto3_AliasedEnum_AliasedEnum_ARRAYSIZE = TestAllTypesProto3_AliasedEnum_AliasedEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TestAllTypesProto3_AliasedEnum_descriptor();
template<typename T>
inline const std::string& TestAllTypesProto3_AliasedEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TestAllTypesProto3_AliasedEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TestAllTypesProto3_AliasedEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TestAllTypesProto3_AliasedEnum_descriptor(), enum_t_value);
}
inline bool TestAllTypesProto3_AliasedEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, TestAllTypesProto3_AliasedEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TestAllTypesProto3_AliasedEnum>(
    TestAllTypesProto3_AliasedEnum_descriptor(), name, value);
}
enum EnumOnlyProto3_Bool : int {
  EnumOnlyProto3_Bool_kFalse = 0,
  EnumOnlyProto3_Bool_kTrue = 1,
  EnumOnlyProto3_Bool_EnumOnlyProto3_Bool_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  EnumOnlyProto3_Bool_EnumOnlyProto3_Bool_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool EnumOnlyProto3_Bool_IsValid(int value);
constexpr EnumOnlyProto3_Bool EnumOnlyProto3_Bool_Bool_MIN = EnumOnlyProto3_Bool_kFalse;
constexpr EnumOnlyProto3_Bool EnumOnlyProto3_Bool_Bool_MAX = EnumOnlyProto3_Bool_kTrue;
constexpr int EnumOnlyProto3_Bool_Bool_ARRAYSIZE = EnumOnlyProto3_Bool_Bool_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnumOnlyProto3_Bool_descriptor();
template<typename T>
inline const std::string& EnumOnlyProto3_Bool_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnumOnlyProto3_Bool>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnumOnlyProto3_Bool_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnumOnlyProto3_Bool_descriptor(), enum_t_value);
}
inline bool EnumOnlyProto3_Bool_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EnumOnlyProto3_Bool* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnumOnlyProto3_Bool>(
    EnumOnlyProto3_Bool_descriptor(), name, value);
}
enum ForeignEnum : int {
  FOREIGN_FOO = 0,
  FOREIGN_BAR = 1,
  FOREIGN_BAZ = 2,
  ForeignEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  ForeignEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool ForeignEnum_IsValid(int value);
constexpr ForeignEnum ForeignEnum_MIN = FOREIGN_FOO;
constexpr ForeignEnum ForeignEnum_MAX = FOREIGN_BAZ;
constexpr int ForeignEnum_ARRAYSIZE = ForeignEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ForeignEnum_descriptor();
template<typename T>
inline const std::string& ForeignEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ForeignEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ForeignEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ForeignEnum_descriptor(), enum_t_value);
}
inline bool ForeignEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ForeignEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ForeignEnum>(
    ForeignEnum_descriptor(), name, value);
}
// ===================================================================

class TestAllTypesProto3_NestedMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage) */ {
 public:
  inline TestAllTypesProto3_NestedMessage() : TestAllTypesProto3_NestedMessage(nullptr) {}
  ~TestAllTypesProto3_NestedMessage() override;
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_NestedMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TestAllTypesProto3_NestedMessage(const TestAllTypesProto3_NestedMessage& from);
  TestAllTypesProto3_NestedMessage(TestAllTypesProto3_NestedMessage&& from) noexcept
    : TestAllTypesProto3_NestedMessage() {
    *this = ::std::move(from);
  }

  inline TestAllTypesProto3_NestedMessage& operator=(const TestAllTypesProto3_NestedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypesProto3_NestedMessage& operator=(TestAllTypesProto3_NestedMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypesProto3_NestedMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestAllTypesProto3_NestedMessage* internal_default_instance() {
    return reinterpret_cast<const TestAllTypesProto3_NestedMessage*>(
               &_TestAllTypesProto3_NestedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TestAllTypesProto3_NestedMessage& a, TestAllTypesProto3_NestedMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TestAllTypesProto3_NestedMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypesProto3_NestedMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypesProto3_NestedMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestAllTypesProto3_NestedMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TestAllTypesProto3_NestedMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TestAllTypesProto3_NestedMessage& from) {
    TestAllTypesProto3_NestedMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestAllTypesProto3_NestedMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage";
  }
  protected:
  explicit TestAllTypesProto3_NestedMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCorecursiveFieldNumber = 2,
    kAFieldNumber = 1,
  };
  // .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
  bool has_corecursive() const;
  private:
  bool _internal_has_corecursive() const;
  public:
  void clear_corecursive();
  const ::protobuf_test_messages::proto3::TestAllTypesProto3& corecursive() const;
  PROTOBUF_NODISCARD ::protobuf_test_messages::proto3::TestAllTypesProto3* release_corecursive();
  ::protobuf_test_messages::proto3::TestAllTypesProto3* mutable_corecursive();
  void set_allocated_corecursive(::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive);
  private:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3& _internal_corecursive() const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3* _internal_mutable_corecursive();
  public:
  void unsafe_arena_set_allocated_corecursive(
      ::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive);
  ::protobuf_test_messages::proto3::TestAllTypesProto3* unsafe_arena_release_corecursive();

  // int32 a = 1;
  void clear_a();
  int32_t a() const;
  void set_a(int32_t value);
  private:
  int32_t _internal_a() const;
  void _internal_set_a(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive_;
    int32_t a_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};
// -------------------------------------------------------------------

class TestAllTypesProto3_MapInt32Int32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32Int32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  TestAllTypesProto3_MapInt32Int32Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapInt32Int32Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapInt32Int32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapInt32Int32Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapInt32Int32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapInt32Int32Entry_DoNotUse*>(&_TestAllTypesProto3_MapInt32Int32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapInt64Int64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt64Int64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> SuperType;
  TestAllTypesProto3_MapInt64Int64Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapInt64Int64Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapInt64Int64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapInt64Int64Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapInt64Int64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapInt64Int64Entry_DoNotUse*>(&_TestAllTypesProto3_MapInt64Int64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> SuperType;
  TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse*>(&_TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, 
    uint64_t, uint64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse, 
    uint64_t, uint64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64> SuperType;
  TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse*>(&_TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse*>(&_TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64> SuperType;
  TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse*>(&_TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32> SuperType;
  TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse*>(&_TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, 
    uint64_t, uint64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse, 
    uint64_t, uint64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64> SuperType;
  TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse*>(&_TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse, 
    int32_t, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32> SuperType;
  TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse*>(&_TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse, 
    int64_t, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64> SuperType;
  TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse& other);
  static const TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse*>(&_TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapInt32FloatEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, 
    int32_t, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32FloatEntry_DoNotUse, 
    int32_t, float,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> SuperType;
  TestAllTypesProto3_MapInt32FloatEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapInt32FloatEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapInt32FloatEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapInt32FloatEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapInt32FloatEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapInt32FloatEntry_DoNotUse*>(&_TestAllTypesProto3_MapInt32FloatEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, 
    int32_t, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse, 
    int32_t, double,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> SuperType;
  TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse*>(&_TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapBoolBoolEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, 
    bool, bool,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapBoolBoolEntry_DoNotUse, 
    bool, bool,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL> SuperType;
  TestAllTypesProto3_MapBoolBoolEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapBoolBoolEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapBoolBoolEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapBoolBoolEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapBoolBoolEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapBoolBoolEntry_DoNotUse*>(&_TestAllTypesProto3_MapBoolBoolEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringStringEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringStringEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringStringEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  TestAllTypesProto3_MapStringStringEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringStringEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringStringEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringStringEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringStringEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringStringEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringStringEntry.value");
 }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringBytesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringBytesEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringBytesEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES> SuperType;
  TestAllTypesProto3_MapStringBytesEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringBytesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringBytesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringBytesEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringBytesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringBytesEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringBytesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringBytesEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedMessageEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::ForeignMessage,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::ForeignMessage,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignMessageEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> SuperType;
  TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringNestedEnumEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::ForeignEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse, 
    std::string, ::protobuf_test_messages::proto3::ForeignEnum,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> SuperType;
  TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse& other);
  static const TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse*>(&_TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_test_messages.proto3.TestAllTypesProto3.MapStringForeignEnumEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};

// -------------------------------------------------------------------

class TestAllTypesProto3 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test_messages.proto3.TestAllTypesProto3) */ {
 public:
  inline TestAllTypesProto3() : TestAllTypesProto3(nullptr) {}
  ~TestAllTypesProto3() override;
  explicit PROTOBUF_CONSTEXPR TestAllTypesProto3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TestAllTypesProto3(const TestAllTypesProto3& from);
  TestAllTypesProto3(TestAllTypesProto3&& from) noexcept
    : TestAllTypesProto3() {
    *this = ::std::move(from);
  }

  inline TestAllTypesProto3& operator=(const TestAllTypesProto3& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestAllTypesProto3& operator=(TestAllTypesProto3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestAllTypesProto3& default_instance() {
    return *internal_default_instance();
  }
  enum OneofFieldCase {
    kOneofUint32 = 111,
    kOneofNestedMessage = 112,
    kOneofString = 113,
    kOneofBytes = 114,
    kOneofBool = 115,
    kOneofUint64 = 116,
    kOneofFloat = 117,
    kOneofDouble = 118,
    kOneofEnum = 119,
    kOneofNullValue = 120,
    ONEOF_FIELD_NOT_SET = 0,
  };

  static inline const TestAllTypesProto3* internal_default_instance() {
    return reinterpret_cast<const TestAllTypesProto3*>(
               &_TestAllTypesProto3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TestAllTypesProto3& a, TestAllTypesProto3& b) {
    a.Swap(&b);
  }
  inline void Swap(TestAllTypesProto3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestAllTypesProto3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestAllTypesProto3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestAllTypesProto3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TestAllTypesProto3& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TestAllTypesProto3& from) {
    TestAllTypesProto3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TestAllTypesProto3* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test_messages.proto3.TestAllTypesProto3";
  }
  protected:
  explicit TestAllTypesProto3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TestAllTypesProto3_NestedMessage NestedMessage;

  typedef TestAllTypesProto3_NestedEnum NestedEnum;
  static constexpr NestedEnum FOO =
    TestAllTypesProto3_NestedEnum_FOO;
  static constexpr NestedEnum BAR =
    TestAllTypesProto3_NestedEnum_BAR;
  static constexpr NestedEnum BAZ =
    TestAllTypesProto3_NestedEnum_BAZ;
  static constexpr NestedEnum NEG =
    TestAllTypesProto3_NestedEnum_NEG;
  static inline bool NestedEnum_IsValid(int value) {
    return TestAllTypesProto3_NestedEnum_IsValid(value);
  }
  static constexpr NestedEnum NestedEnum_MIN =
    TestAllTypesProto3_NestedEnum_NestedEnum_MIN;
  static constexpr NestedEnum NestedEnum_MAX =
    TestAllTypesProto3_NestedEnum_NestedEnum_MAX;
  static constexpr int NestedEnum_ARRAYSIZE =
    TestAllTypesProto3_NestedEnum_NestedEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  NestedEnum_descriptor() {
    return TestAllTypesProto3_NestedEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& NestedEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, NestedEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function NestedEnum_Name.");
    return TestAllTypesProto3_NestedEnum_Name(enum_t_value);
  }
  static inline bool NestedEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      NestedEnum* value) {
    return TestAllTypesProto3_NestedEnum_Parse(name, value);
  }

  typedef TestAllTypesProto3_AliasedEnum AliasedEnum;
  static constexpr AliasedEnum ALIAS_FOO =
    TestAllTypesProto3_AliasedEnum_ALIAS_FOO;
  static constexpr AliasedEnum ALIAS_BAR =
    TestAllTypesProto3_AliasedEnum_ALIAS_BAR;
  static constexpr AliasedEnum ALIAS_BAZ =
    TestAllTypesProto3_AliasedEnum_ALIAS_BAZ;
  static constexpr AliasedEnum MOO =
    TestAllTypesProto3_AliasedEnum_MOO;
  static constexpr AliasedEnum moo =
    TestAllTypesProto3_AliasedEnum_moo;
  static constexpr AliasedEnum bAz =
    TestAllTypesProto3_AliasedEnum_bAz;
  static inline bool AliasedEnum_IsValid(int value) {
    return TestAllTypesProto3_AliasedEnum_IsValid(value);
  }
  static constexpr AliasedEnum AliasedEnum_MIN =
    TestAllTypesProto3_AliasedEnum_AliasedEnum_MIN;
  static constexpr AliasedEnum AliasedEnum_MAX =
    TestAllTypesProto3_AliasedEnum_AliasedEnum_MAX;
  static constexpr int AliasedEnum_ARRAYSIZE =
    TestAllTypesProto3_AliasedEnum_AliasedEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  AliasedEnum_descriptor() {
    return TestAllTypesProto3_AliasedEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& AliasedEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, AliasedEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function AliasedEnum_Name.");
    return TestAllTypesProto3_AliasedEnum_Name(enum_t_value);
  }
  static inline bool AliasedEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      AliasedEnum* value) {
    return TestAllTypesProto3_AliasedEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRepeatedInt32FieldNumber = 31,
    kRepeatedInt64FieldNumber = 32,
    kRepeatedUint32FieldNumber = 33,
    kRepeatedUint64FieldNumber = 34,
    kRepeatedSint32FieldNumber = 35,
    kRepeatedSint64FieldNumber = 36,
    kRepeatedFixed32FieldNumber = 37,
    kRepeatedFixed64FieldNumber = 38,
    kRepeatedSfixed32FieldNumber = 39,
    kRepeatedSfixed64FieldNumber = 40,
    kRepeatedFloatFieldNumber = 41,
    kRepeatedDoubleFieldNumber = 42,
    kRepeatedBoolFieldNumber = 43,
    kRepeatedStringFieldNumber = 44,
    kRepeatedBytesFieldNumber = 45,
    kRepeatedNestedMessageFieldNumber = 48,
    kRepeatedForeignMessageFieldNumber = 49,
    kRepeatedNestedEnumFieldNumber = 51,
    kRepeatedForeignEnumFieldNumber = 52,
    kRepeatedStringPieceFieldNumber = 54,
    kRepeatedCordFieldNumber = 55,
    kMapInt32Int32FieldNumber = 56,
    kMapInt64Int64FieldNumber = 57,
    kMapUint32Uint32FieldNumber = 58,
    kMapUint64Uint64FieldNumber = 59,
    kMapSint32Sint32FieldNumber = 60,
    kMapSint64Sint64FieldNumber = 61,
    kMapFixed32Fixed32FieldNumber = 62,
    kMapFixed64Fixed64FieldNumber = 63,
    kMapSfixed32Sfixed32FieldNumber = 64,
    kMapSfixed64Sfixed64FieldNumber = 65,
    kMapInt32FloatFieldNumber = 66,
    kMapInt32DoubleFieldNumber = 67,
    kMapBoolBoolFieldNumber = 68,
    kMapStringStringFieldNumber = 69,
    kMapStringBytesFieldNumber = 70,
    kMapStringNestedMessageFieldNumber = 71,
    kMapStringForeignMessageFieldNumber = 72,
    kMapStringNestedEnumFieldNumber = 73,
    kMapStringForeignEnumFieldNumber = 74,
    kPackedInt32FieldNumber = 75,
    kPackedInt64FieldNumber = 76,
    kPackedUint32FieldNumber = 77,
    kPackedUint64FieldNumber = 78,
    kPackedSint32FieldNumber = 79,
    kPackedSint64FieldNumber = 80,
    kPackedFixed32FieldNumber = 81,
    kPackedFixed64FieldNumber = 82,
    kPackedSfixed32FieldNumber = 83,
    kPackedSfixed64FieldNumber = 84,
    kPackedFloatFieldNumber = 85,
    kPackedDoubleFieldNumber = 86,
    kPackedBoolFieldNumber = 87,
    kPackedNestedEnumFieldNumber = 88,
    kUnpackedInt32FieldNumber = 89,
    kUnpackedInt64FieldNumber = 90,
    kUnpackedUint32FieldNumber = 91,
    kUnpackedUint64FieldNumber = 92,
    kUnpackedSint32FieldNumber = 93,
    kUnpackedSint64FieldNumber = 94,
    kUnpackedFixed32FieldNumber = 95,
    kUnpackedFixed64FieldNumber = 96,
    kUnpackedSfixed32FieldNumber = 97,
    kUnpackedSfixed64FieldNumber = 98,
    kUnpackedFloatFieldNumber = 99,
    kUnpackedDoubleFieldNumber = 100,
    kUnpackedBoolFieldNumber = 101,
    kUnpackedNestedEnumFieldNumber = 102,
    kRepeatedBoolWrapperFieldNumber = 211,
    kRepeatedInt32WrapperFieldNumber = 212,
    kRepeatedInt64WrapperFieldNumber = 213,
    kRepeatedUint32WrapperFieldNumber = 214,
    kRepeatedUint64WrapperFieldNumber = 215,
    kRepeatedFloatWrapperFieldNumber = 216,
    kRepeatedDoubleWrapperFieldNumber = 217,
    kRepeatedStringWrapperFieldNumber = 218,
    kRepeatedBytesWrapperFieldNumber = 219,
    kRepeatedDurationFieldNumber = 311,
    kRepeatedTimestampFieldNumber = 312,
    kRepeatedFieldmaskFieldNumber = 313,
    kRepeatedAnyFieldNumber = 315,
    kRepeatedValueFieldNumber = 316,
    kRepeatedListValueFieldNumber = 317,
    kRepeatedStructFieldNumber = 324,
    kOptionalStringFieldNumber = 14,
    kOptionalBytesFieldNumber = 15,
    kOptionalStringPieceFieldNumber = 24,
    kOptionalCordFieldNumber = 25,
    kOptionalNestedMessageFieldNumber = 18,
    kOptionalForeignMessageFieldNumber = 19,
    kRecursiveMessageFieldNumber = 27,
    kOptionalBoolWrapperFieldNumber = 201,
    kOptionalInt32WrapperFieldNumber = 202,
    kOptionalInt64WrapperFieldNumber = 203,
    kOptionalUint32WrapperFieldNumber = 204,
    kOptionalUint64WrapperFieldNumber = 205,
    kOptionalFloatWrapperFieldNumber = 206,
    kOptionalDoubleWrapperFieldNumber = 207,
    kOptionalStringWrapperFieldNumber = 208,
    kOptionalBytesWrapperFieldNumber = 209,
    kOptionalDurationFieldNumber = 301,
    kOptionalTimestampFieldNumber = 302,
    kOptionalFieldMaskFieldNumber = 303,
    kOptionalStructFieldNumber = 304,
    kOptionalAnyFieldNumber = 305,
    kOptionalValueFieldNumber = 306,
    kOptionalInt64FieldNumber = 2,
    kOptionalInt32FieldNumber = 1,
    kOptionalUint32FieldNumber = 3,
    kOptionalUint64FieldNumber = 4,
    kOptionalSint64FieldNumber = 6,
    kOptionalSint32FieldNumber = 5,
    kOptionalFixed32FieldNumber = 7,
    kOptionalFixed64FieldNumber = 8,
    kOptionalSfixed64FieldNumber = 10,
    kOptionalSfixed32FieldNumber = 9,
    kOptionalFloatFieldNumber = 11,
    kOptionalDoubleFieldNumber = 12,
    kOptionalBoolFieldNumber = 13,
    kOptionalNestedEnumFieldNumber = 21,
    kOptionalForeignEnumFieldNumber = 22,
    kOptionalAliasedEnumFieldNumber = 23,
    kOptionalNullValueFieldNumber = 307,
    kFieldname1FieldNumber = 401,
    kFieldName2FieldNumber = 402,
    kFieldName3FieldNumber = 403,
    kFieldName4FieldNumber = 404,
    kField0Name5FieldNumber = 405,
    kField0Name6FieldNumber = 406,
    kFieldName7FieldNumber = 407,
    kFieldName8FieldNumber = 408,
    kFieldName9FieldNumber = 409,
    kFieldName10FieldNumber = 410,
    kFIELDNAME11FieldNumber = 411,
    kFIELDName12FieldNumber = 412,
    kFieldName13FieldNumber = 413,
    kFieldName14FieldNumber = 414,
    kFieldName15FieldNumber = 415,
    kFieldName16FieldNumber = 416,
    kFieldName17FieldNumber = 417,
    kFieldName18FieldNumber = 418,
    kOneofUint32FieldNumber = 111,
    kOneofNestedMessageFieldNumber = 112,
    kOneofStringFieldNumber = 113,
    kOneofBytesFieldNumber = 114,
    kOneofBoolFieldNumber = 115,
    kOneofUint64FieldNumber = 116,
    kOneofFloatFieldNumber = 117,
    kOneofDoubleFieldNumber = 118,
    kOneofEnumFieldNumber = 119,
    kOneofNullValueFieldNumber = 120,
  };
  // repeated int32 repeated_int32 = 31;
  int repeated_int32_size() const;
  private:
  int _internal_repeated_int32_size() const;
  public:
  void clear_repeated_int32();
  private:
  int32_t _internal_repeated_int32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_repeated_int32() const;
  void _internal_add_repeated_int32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_repeated_int32();
  public:
  int32_t repeated_int32(int index) const;
  void set_repeated_int32(int index, int32_t value);
  void add_repeated_int32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      repeated_int32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_repeated_int32();

  // repeated int64 repeated_int64 = 32;
  int repeated_int64_size() const;
  private:
  int _internal_repeated_int64_size() const;
  public:
  void clear_repeated_int64();
  private:
  int64_t _internal_repeated_int64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_repeated_int64() const;
  void _internal_add_repeated_int64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_repeated_int64();
  public:
  int64_t repeated_int64(int index) const;
  void set_repeated_int64(int index, int64_t value);
  void add_repeated_int64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      repeated_int64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_repeated_int64();

  // repeated uint32 repeated_uint32 = 33;
  int repeated_uint32_size() const;
  private:
  int _internal_repeated_uint32_size() const;
  public:
  void clear_repeated_uint32();
  private:
  uint32_t _internal_repeated_uint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_repeated_uint32() const;
  void _internal_add_repeated_uint32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_repeated_uint32();
  public:
  uint32_t repeated_uint32(int index) const;
  void set_repeated_uint32(int index, uint32_t value);
  void add_repeated_uint32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      repeated_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_repeated_uint32();

  // repeated uint64 repeated_uint64 = 34;
  int repeated_uint64_size() const;
  private:
  int _internal_repeated_uint64_size() const;
  public:
  void clear_repeated_uint64();
  private:
  uint64_t _internal_repeated_uint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_repeated_uint64() const;
  void _internal_add_repeated_uint64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_repeated_uint64();
  public:
  uint64_t repeated_uint64(int index) const;
  void set_repeated_uint64(int index, uint64_t value);
  void add_repeated_uint64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      repeated_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_repeated_uint64();

  // repeated sint32 repeated_sint32 = 35;
  int repeated_sint32_size() const;
  private:
  int _internal_repeated_sint32_size() const;
  public:
  void clear_repeated_sint32();
  private:
  int32_t _internal_repeated_sint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_repeated_sint32() const;
  void _internal_add_repeated_sint32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_repeated_sint32();
  public:
  int32_t repeated_sint32(int index) const;
  void set_repeated_sint32(int index, int32_t value);
  void add_repeated_sint32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      repeated_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_repeated_sint32();

  // repeated sint64 repeated_sint64 = 36;
  int repeated_sint64_size() const;
  private:
  int _internal_repeated_sint64_size() const;
  public:
  void clear_repeated_sint64();
  private:
  int64_t _internal_repeated_sint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_repeated_sint64() const;
  void _internal_add_repeated_sint64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_repeated_sint64();
  public:
  int64_t repeated_sint64(int index) const;
  void set_repeated_sint64(int index, int64_t value);
  void add_repeated_sint64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      repeated_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_repeated_sint64();

  // repeated fixed32 repeated_fixed32 = 37;
  int repeated_fixed32_size() const;
  private:
  int _internal_repeated_fixed32_size() const;
  public:
  void clear_repeated_fixed32();
  private:
  uint32_t _internal_repeated_fixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_repeated_fixed32() const;
  void _internal_add_repeated_fixed32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_repeated_fixed32();
  public:
  uint32_t repeated_fixed32(int index) const;
  void set_repeated_fixed32(int index, uint32_t value);
  void add_repeated_fixed32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      repeated_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_repeated_fixed32();

  // repeated fixed64 repeated_fixed64 = 38;
  int repeated_fixed64_size() const;
  private:
  int _internal_repeated_fixed64_size() const;
  public:
  void clear_repeated_fixed64();
  private:
  uint64_t _internal_repeated_fixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_repeated_fixed64() const;
  void _internal_add_repeated_fixed64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_repeated_fixed64();
  public:
  uint64_t repeated_fixed64(int index) const;
  void set_repeated_fixed64(int index, uint64_t value);
  void add_repeated_fixed64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      repeated_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_repeated_fixed64();

  // repeated sfixed32 repeated_sfixed32 = 39;
  int repeated_sfixed32_size() const;
  private:
  int _internal_repeated_sfixed32_size() const;
  public:
  void clear_repeated_sfixed32();
  private:
  int32_t _internal_repeated_sfixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_repeated_sfixed32() const;
  void _internal_add_repeated_sfixed32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_repeated_sfixed32();
  public:
  int32_t repeated_sfixed32(int index) const;
  void set_repeated_sfixed32(int index, int32_t value);
  void add_repeated_sfixed32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      repeated_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_repeated_sfixed32();

  // repeated sfixed64 repeated_sfixed64 = 40;
  int repeated_sfixed64_size() const;
  private:
  int _internal_repeated_sfixed64_size() const;
  public:
  void clear_repeated_sfixed64();
  private:
  int64_t _internal_repeated_sfixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_repeated_sfixed64() const;
  void _internal_add_repeated_sfixed64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_repeated_sfixed64();
  public:
  int64_t repeated_sfixed64(int index) const;
  void set_repeated_sfixed64(int index, int64_t value);
  void add_repeated_sfixed64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      repeated_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_repeated_sfixed64();

  // repeated float repeated_float = 41;
  int repeated_float_size() const;
  private:
  int _internal_repeated_float_size() const;
  public:
  void clear_repeated_float();
  private:
  float _internal_repeated_float(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_repeated_float() const;
  void _internal_add_repeated_float(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_repeated_float();
  public:
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      repeated_float() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_repeated_float();

  // repeated double repeated_double = 42;
  int repeated_double_size() const;
  private:
  int _internal_repeated_double_size() const;
  public:
  void clear_repeated_double();
  private:
  double _internal_repeated_double(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_repeated_double() const;
  void _internal_add_repeated_double(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_repeated_double();
  public:
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      repeated_double() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_repeated_double();

  // repeated bool repeated_bool = 43;
  int repeated_bool_size() const;
  private:
  int _internal_repeated_bool_size() const;
  public:
  void clear_repeated_bool();
  private:
  bool _internal_repeated_bool(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_repeated_bool() const;
  void _internal_add_repeated_bool(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_repeated_bool();
  public:
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      repeated_bool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_repeated_bool();

  // repeated string repeated_string = 44;
  int repeated_string_size() const;
  private:
  int _internal_repeated_string_size() const;
  public:
  void clear_repeated_string();
  const std::string& repeated_string(int index) const;
  std::string* mutable_repeated_string(int index);
  void set_repeated_string(int index, const std::string& value);
  void set_repeated_string(int index, std::string&& value);
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, const char* value, size_t size);
  std::string* add_repeated_string();
  void add_repeated_string(const std::string& value);
  void add_repeated_string(std::string&& value);
  void add_repeated_string(const char* value);
  void add_repeated_string(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_string() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_string();
  private:
  const std::string& _internal_repeated_string(int index) const;
  std::string* _internal_add_repeated_string();
  public:

  // repeated bytes repeated_bytes = 45;
  int repeated_bytes_size() const;
  private:
  int _internal_repeated_bytes_size() const;
  public:
  void clear_repeated_bytes();
  const std::string& repeated_bytes(int index) const;
  std::string* mutable_repeated_bytes(int index);
  void set_repeated_bytes(int index, const std::string& value);
  void set_repeated_bytes(int index, std::string&& value);
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, const void* value, size_t size);
  std::string* add_repeated_bytes();
  void add_repeated_bytes(const std::string& value);
  void add_repeated_bytes(std::string&& value);
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_bytes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_bytes();
  private:
  const std::string& _internal_repeated_bytes(int index) const;
  std::string* _internal_add_repeated_bytes();
  public:

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
  int repeated_nested_message_size() const;
  private:
  int _internal_repeated_nested_message_size() const;
  public:
  void clear_repeated_nested_message();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* mutable_repeated_nested_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
      mutable_repeated_nested_message();
  private:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& _internal_repeated_nested_message(int index) const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _internal_add_repeated_nested_message();
  public:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& repeated_nested_message(int index) const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* add_repeated_nested_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
      repeated_nested_message() const;

  // repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
  int repeated_foreign_message_size() const;
  private:
  int _internal_repeated_foreign_message_size() const;
  public:
  void clear_repeated_foreign_message();
  ::protobuf_test_messages::proto3::ForeignMessage* mutable_repeated_foreign_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::ForeignMessage >*
      mutable_repeated_foreign_message();
  private:
  const ::protobuf_test_messages::proto3::ForeignMessage& _internal_repeated_foreign_message(int index) const;
  ::protobuf_test_messages::proto3::ForeignMessage* _internal_add_repeated_foreign_message();
  public:
  const ::protobuf_test_messages::proto3::ForeignMessage& repeated_foreign_message(int index) const;
  ::protobuf_test_messages::proto3::ForeignMessage* add_repeated_foreign_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::ForeignMessage >&
      repeated_foreign_message() const;

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
  int repeated_nested_enum_size() const;
  private:
  int _internal_repeated_nested_enum_size() const;
  public:
  void clear_repeated_nested_enum();
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum _internal_repeated_nested_enum(int index) const;
  void _internal_add_repeated_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_repeated_nested_enum();
  public:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum repeated_nested_enum(int index) const;
  void set_repeated_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  void add_repeated_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& repeated_nested_enum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_repeated_nested_enum();

  // repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
  int repeated_foreign_enum_size() const;
  private:
  int _internal_repeated_foreign_enum_size() const;
  public:
  void clear_repeated_foreign_enum();
  private:
  ::protobuf_test_messages::proto3::ForeignEnum _internal_repeated_foreign_enum(int index) const;
  void _internal_add_repeated_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_repeated_foreign_enum();
  public:
  ::protobuf_test_messages::proto3::ForeignEnum repeated_foreign_enum(int index) const;
  void set_repeated_foreign_enum(int index, ::protobuf_test_messages::proto3::ForeignEnum value);
  void add_repeated_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& repeated_foreign_enum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_repeated_foreign_enum();

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  int repeated_string_piece_size() const;
  private:
  int _internal_repeated_string_piece_size() const;
  public:
  void clear_repeated_string_piece();
 private:
  // Hidden due to unknown ctype option.
  const std::string& repeated_string_piece(int index) const;
  std::string* mutable_repeated_string_piece(int index);
  void set_repeated_string_piece(int index, const std::string& value);
  void set_repeated_string_piece(int index, std::string&& value);
  void set_repeated_string_piece(int index, const char* value);
  void set_repeated_string_piece(int index, const char* value, size_t size);
  std::string* add_repeated_string_piece();
  void add_repeated_string_piece(const std::string& value);
  void add_repeated_string_piece(std::string&& value);
  void add_repeated_string_piece(const char* value);
  void add_repeated_string_piece(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_string_piece() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_string_piece();
  private:
  const std::string& _internal_repeated_string_piece(int index) const;
  std::string* _internal_add_repeated_string_piece();
  public:
 public:

  // repeated string repeated_cord = 55 [ctype = CORD];
  int repeated_cord_size() const;
  private:
  int _internal_repeated_cord_size() const;
  public:
  void clear_repeated_cord();
 private:
  // Hidden due to unknown ctype option.
  const std::string& repeated_cord(int index) const;
  std::string* mutable_repeated_cord(int index);
  void set_repeated_cord(int index, const std::string& value);
  void set_repeated_cord(int index, std::string&& value);
  void set_repeated_cord(int index, const char* value);
  void set_repeated_cord(int index, const char* value, size_t size);
  std::string* add_repeated_cord();
  void add_repeated_cord(const std::string& value);
  void add_repeated_cord(std::string&& value);
  void add_repeated_cord(const char* value);
  void add_repeated_cord(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_cord() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_cord();
  private:
  const std::string& _internal_repeated_cord(int index) const;
  std::string* _internal_add_repeated_cord();
  public:
 public:

  // map<int32, int32> map_int32_int32 = 56;
  int map_int32_int32_size() const;
  private:
  int _internal_map_int32_int32_size() const;
  public:
  void clear_map_int32_int32();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      _internal_map_int32_int32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      _internal_mutable_map_int32_int32();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      map_int32_int32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      mutable_map_int32_int32();

  // map<int64, int64> map_int64_int64 = 57;
  int map_int64_int64_size() const;
  private:
  int _internal_map_int64_int64_size() const;
  public:
  void clear_map_int64_int64();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      _internal_map_int64_int64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      _internal_mutable_map_int64_int64();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      map_int64_int64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      mutable_map_int64_int64();

  // map<uint32, uint32> map_uint32_uint32 = 58;
  int map_uint32_uint32_size() const;
  private:
  int _internal_map_uint32_uint32_size() const;
  public:
  void clear_map_uint32_uint32();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      _internal_map_uint32_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      _internal_mutable_map_uint32_uint32();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      map_uint32_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      mutable_map_uint32_uint32();

  // map<uint64, uint64> map_uint64_uint64 = 59;
  int map_uint64_uint64_size() const;
  private:
  int _internal_map_uint64_uint64_size() const;
  public:
  void clear_map_uint64_uint64();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
      _internal_map_uint64_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
      _internal_mutable_map_uint64_uint64();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
      map_uint64_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
      mutable_map_uint64_uint64();

  // map<sint32, sint32> map_sint32_sint32 = 60;
  int map_sint32_sint32_size() const;
  private:
  int _internal_map_sint32_sint32_size() const;
  public:
  void clear_map_sint32_sint32();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      _internal_map_sint32_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      _internal_mutable_map_sint32_sint32();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      map_sint32_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      mutable_map_sint32_sint32();

  // map<sint64, sint64> map_sint64_sint64 = 61;
  int map_sint64_sint64_size() const;
  private:
  int _internal_map_sint64_sint64_size() const;
  public:
  void clear_map_sint64_sint64();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      _internal_map_sint64_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      _internal_mutable_map_sint64_sint64();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      map_sint64_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      mutable_map_sint64_sint64();

  // map<fixed32, fixed32> map_fixed32_fixed32 = 62;
  int map_fixed32_fixed32_size() const;
  private:
  int _internal_map_fixed32_fixed32_size() const;
  public:
  void clear_map_fixed32_fixed32();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      _internal_map_fixed32_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      _internal_mutable_map_fixed32_fixed32();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      map_fixed32_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      mutable_map_fixed32_fixed32();

  // map<fixed64, fixed64> map_fixed64_fixed64 = 63;
  int map_fixed64_fixed64_size() const;
  private:
  int _internal_map_fixed64_fixed64_size() const;
  public:
  void clear_map_fixed64_fixed64();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
      _internal_map_fixed64_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
      _internal_mutable_map_fixed64_fixed64();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
      map_fixed64_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
      mutable_map_fixed64_fixed64();

  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
  int map_sfixed32_sfixed32_size() const;
  private:
  int _internal_map_sfixed32_sfixed32_size() const;
  public:
  void clear_map_sfixed32_sfixed32();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      _internal_map_sfixed32_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      _internal_mutable_map_sfixed32_sfixed32();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
      map_sfixed32_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
      mutable_map_sfixed32_sfixed32();

  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
  int map_sfixed64_sfixed64_size() const;
  private:
  int _internal_map_sfixed64_sfixed64_size() const;
  public:
  void clear_map_sfixed64_sfixed64();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      _internal_map_sfixed64_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      _internal_mutable_map_sfixed64_sfixed64();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
      map_sfixed64_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
      mutable_map_sfixed64_sfixed64();

  // map<int32, float> map_int32_float = 66;
  int map_int32_float_size() const;
  private:
  int _internal_map_int32_float_size() const;
  public:
  void clear_map_int32_float();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >&
      _internal_map_int32_float() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >*
      _internal_mutable_map_int32_float();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >&
      map_int32_float() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >*
      mutable_map_int32_float();

  // map<int32, double> map_int32_double = 67;
  int map_int32_double_size() const;
  private:
  int _internal_map_int32_double_size() const;
  public:
  void clear_map_int32_double();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >&
      _internal_map_int32_double() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >*
      _internal_mutable_map_int32_double();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >&
      map_int32_double() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >*
      mutable_map_int32_double();

  // map<bool, bool> map_bool_bool = 68;
  int map_bool_bool_size() const;
  private:
  int _internal_map_bool_bool_size() const;
  public:
  void clear_map_bool_bool();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >&
      _internal_map_bool_bool() const;
  ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >*
      _internal_mutable_map_bool_bool();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >&
      map_bool_bool() const;
  ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >*
      mutable_map_bool_bool();

  // map<string, string> map_string_string = 69;
  int map_string_string_size() const;
  private:
  int _internal_map_string_string_size() const;
  public:
  void clear_map_string_string();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_map_string_string() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_map_string_string();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      map_string_string() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_map_string_string();

  // map<string, bytes> map_string_bytes = 70;
  int map_string_bytes_size() const;
  private:
  int _internal_map_string_bytes_size() const;
  public:
  void clear_map_string_bytes();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_map_string_bytes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_map_string_bytes();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      map_string_bytes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_map_string_bytes();

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
  int map_string_nested_message_size() const;
  private:
  int _internal_map_string_nested_message_size() const;
  public:
  void clear_map_string_nested_message();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
      _internal_map_string_nested_message() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
      _internal_mutable_map_string_nested_message();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
      map_string_nested_message() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
      mutable_map_string_nested_message();

  // map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
  int map_string_foreign_message_size() const;
  private:
  int _internal_map_string_foreign_message_size() const;
  public:
  void clear_map_string_foreign_message();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >&
      _internal_map_string_foreign_message() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >*
      _internal_mutable_map_string_foreign_message();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >&
      map_string_foreign_message() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >*
      mutable_map_string_foreign_message();

  // map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
  int map_string_nested_enum_size() const;
  private:
  int _internal_map_string_nested_enum_size() const;
  public:
  void clear_map_string_nested_enum();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >&
      _internal_map_string_nested_enum() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >*
      _internal_mutable_map_string_nested_enum();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >&
      map_string_nested_enum() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >*
      mutable_map_string_nested_enum();

  // map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
  int map_string_foreign_enum_size() const;
  private:
  int _internal_map_string_foreign_enum_size() const;
  public:
  void clear_map_string_foreign_enum();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >&
      _internal_map_string_foreign_enum() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >*
      _internal_mutable_map_string_foreign_enum();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >&
      map_string_foreign_enum() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >*
      mutable_map_string_foreign_enum();

  // repeated int32 packed_int32 = 75 [packed = true];
  int packed_int32_size() const;
  private:
  int _internal_packed_int32_size() const;
  public:
  void clear_packed_int32();
  private:
  int32_t _internal_packed_int32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_packed_int32() const;
  void _internal_add_packed_int32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_packed_int32();
  public:
  int32_t packed_int32(int index) const;
  void set_packed_int32(int index, int32_t value);
  void add_packed_int32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      packed_int32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_packed_int32();

  // repeated int64 packed_int64 = 76 [packed = true];
  int packed_int64_size() const;
  private:
  int _internal_packed_int64_size() const;
  public:
  void clear_packed_int64();
  private:
  int64_t _internal_packed_int64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_packed_int64() const;
  void _internal_add_packed_int64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_packed_int64();
  public:
  int64_t packed_int64(int index) const;
  void set_packed_int64(int index, int64_t value);
  void add_packed_int64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      packed_int64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_packed_int64();

  // repeated uint32 packed_uint32 = 77 [packed = true];
  int packed_uint32_size() const;
  private:
  int _internal_packed_uint32_size() const;
  public:
  void clear_packed_uint32();
  private:
  uint32_t _internal_packed_uint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_packed_uint32() const;
  void _internal_add_packed_uint32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_packed_uint32();
  public:
  uint32_t packed_uint32(int index) const;
  void set_packed_uint32(int index, uint32_t value);
  void add_packed_uint32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      packed_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_packed_uint32();

  // repeated uint64 packed_uint64 = 78 [packed = true];
  int packed_uint64_size() const;
  private:
  int _internal_packed_uint64_size() const;
  public:
  void clear_packed_uint64();
  private:
  uint64_t _internal_packed_uint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_packed_uint64() const;
  void _internal_add_packed_uint64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_packed_uint64();
  public:
  uint64_t packed_uint64(int index) const;
  void set_packed_uint64(int index, uint64_t value);
  void add_packed_uint64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      packed_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_packed_uint64();

  // repeated sint32 packed_sint32 = 79 [packed = true];
  int packed_sint32_size() const;
  private:
  int _internal_packed_sint32_size() const;
  public:
  void clear_packed_sint32();
  private:
  int32_t _internal_packed_sint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_packed_sint32() const;
  void _internal_add_packed_sint32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_packed_sint32();
  public:
  int32_t packed_sint32(int index) const;
  void set_packed_sint32(int index, int32_t value);
  void add_packed_sint32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      packed_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_packed_sint32();

  // repeated sint64 packed_sint64 = 80 [packed = true];
  int packed_sint64_size() const;
  private:
  int _internal_packed_sint64_size() const;
  public:
  void clear_packed_sint64();
  private:
  int64_t _internal_packed_sint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_packed_sint64() const;
  void _internal_add_packed_sint64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_packed_sint64();
  public:
  int64_t packed_sint64(int index) const;
  void set_packed_sint64(int index, int64_t value);
  void add_packed_sint64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      packed_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_packed_sint64();

  // repeated fixed32 packed_fixed32 = 81 [packed = true];
  int packed_fixed32_size() const;
  private:
  int _internal_packed_fixed32_size() const;
  public:
  void clear_packed_fixed32();
  private:
  uint32_t _internal_packed_fixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_packed_fixed32() const;
  void _internal_add_packed_fixed32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_packed_fixed32();
  public:
  uint32_t packed_fixed32(int index) const;
  void set_packed_fixed32(int index, uint32_t value);
  void add_packed_fixed32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      packed_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_packed_fixed32();

  // repeated fixed64 packed_fixed64 = 82 [packed = true];
  int packed_fixed64_size() const;
  private:
  int _internal_packed_fixed64_size() const;
  public:
  void clear_packed_fixed64();
  private:
  uint64_t _internal_packed_fixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_packed_fixed64() const;
  void _internal_add_packed_fixed64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_packed_fixed64();
  public:
  uint64_t packed_fixed64(int index) const;
  void set_packed_fixed64(int index, uint64_t value);
  void add_packed_fixed64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      packed_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_packed_fixed64();

  // repeated sfixed32 packed_sfixed32 = 83 [packed = true];
  int packed_sfixed32_size() const;
  private:
  int _internal_packed_sfixed32_size() const;
  public:
  void clear_packed_sfixed32();
  private:
  int32_t _internal_packed_sfixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_packed_sfixed32() const;
  void _internal_add_packed_sfixed32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_packed_sfixed32();
  public:
  int32_t packed_sfixed32(int index) const;
  void set_packed_sfixed32(int index, int32_t value);
  void add_packed_sfixed32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      packed_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_packed_sfixed32();

  // repeated sfixed64 packed_sfixed64 = 84 [packed = true];
  int packed_sfixed64_size() const;
  private:
  int _internal_packed_sfixed64_size() const;
  public:
  void clear_packed_sfixed64();
  private:
  int64_t _internal_packed_sfixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_packed_sfixed64() const;
  void _internal_add_packed_sfixed64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_packed_sfixed64();
  public:
  int64_t packed_sfixed64(int index) const;
  void set_packed_sfixed64(int index, int64_t value);
  void add_packed_sfixed64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      packed_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_packed_sfixed64();

  // repeated float packed_float = 85 [packed = true];
  int packed_float_size() const;
  private:
  int _internal_packed_float_size() const;
  public:
  void clear_packed_float();
  private:
  float _internal_packed_float(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_packed_float() const;
  void _internal_add_packed_float(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_packed_float();
  public:
  float packed_float(int index) const;
  void set_packed_float(int index, float value);
  void add_packed_float(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      packed_float() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_packed_float();

  // repeated double packed_double = 86 [packed = true];
  int packed_double_size() const;
  private:
  int _internal_packed_double_size() const;
  public:
  void clear_packed_double();
  private:
  double _internal_packed_double(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_packed_double() const;
  void _internal_add_packed_double(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_packed_double();
  public:
  double packed_double(int index) const;
  void set_packed_double(int index, double value);
  void add_packed_double(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      packed_double() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_packed_double();

  // repeated bool packed_bool = 87 [packed = true];
  int packed_bool_size() const;
  private:
  int _internal_packed_bool_size() const;
  public:
  void clear_packed_bool();
  private:
  bool _internal_packed_bool(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_packed_bool() const;
  void _internal_add_packed_bool(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_packed_bool();
  public:
  bool packed_bool(int index) const;
  void set_packed_bool(int index, bool value);
  void add_packed_bool(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      packed_bool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_packed_bool();

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum packed_nested_enum = 88 [packed = true];
  int packed_nested_enum_size() const;
  private:
  int _internal_packed_nested_enum_size() const;
  public:
  void clear_packed_nested_enum();
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum _internal_packed_nested_enum(int index) const;
  void _internal_add_packed_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_packed_nested_enum();
  public:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum packed_nested_enum(int index) const;
  void set_packed_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  void add_packed_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& packed_nested_enum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_packed_nested_enum();

  // repeated int32 unpacked_int32 = 89 [packed = false];
  int unpacked_int32_size() const;
  private:
  int _internal_unpacked_int32_size() const;
  public:
  void clear_unpacked_int32();
  private:
  int32_t _internal_unpacked_int32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_unpacked_int32() const;
  void _internal_add_unpacked_int32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_unpacked_int32();
  public:
  int32_t unpacked_int32(int index) const;
  void set_unpacked_int32(int index, int32_t value);
  void add_unpacked_int32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      unpacked_int32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_unpacked_int32();

  // repeated int64 unpacked_int64 = 90 [packed = false];
  int unpacked_int64_size() const;
  private:
  int _internal_unpacked_int64_size() const;
  public:
  void clear_unpacked_int64();
  private:
  int64_t _internal_unpacked_int64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_unpacked_int64() const;
  void _internal_add_unpacked_int64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_unpacked_int64();
  public:
  int64_t unpacked_int64(int index) const;
  void set_unpacked_int64(int index, int64_t value);
  void add_unpacked_int64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      unpacked_int64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_unpacked_int64();

  // repeated uint32 unpacked_uint32 = 91 [packed = false];
  int unpacked_uint32_size() const;
  private:
  int _internal_unpacked_uint32_size() const;
  public:
  void clear_unpacked_uint32();
  private:
  uint32_t _internal_unpacked_uint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_unpacked_uint32() const;
  void _internal_add_unpacked_uint32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_unpacked_uint32();
  public:
  uint32_t unpacked_uint32(int index) const;
  void set_unpacked_uint32(int index, uint32_t value);
  void add_unpacked_uint32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      unpacked_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_unpacked_uint32();

  // repeated uint64 unpacked_uint64 = 92 [packed = false];
  int unpacked_uint64_size() const;
  private:
  int _internal_unpacked_uint64_size() const;
  public:
  void clear_unpacked_uint64();
  private:
  uint64_t _internal_unpacked_uint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_unpacked_uint64() const;
  void _internal_add_unpacked_uint64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_unpacked_uint64();
  public:
  uint64_t unpacked_uint64(int index) const;
  void set_unpacked_uint64(int index, uint64_t value);
  void add_unpacked_uint64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      unpacked_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_unpacked_uint64();

  // repeated sint32 unpacked_sint32 = 93 [packed = false];
  int unpacked_sint32_size() const;
  private:
  int _internal_unpacked_sint32_size() const;
  public:
  void clear_unpacked_sint32();
  private:
  int32_t _internal_unpacked_sint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_unpacked_sint32() const;
  void _internal_add_unpacked_sint32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_unpacked_sint32();
  public:
  int32_t unpacked_sint32(int index) const;
  void set_unpacked_sint32(int index, int32_t value);
  void add_unpacked_sint32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      unpacked_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_unpacked_sint32();

  // repeated sint64 unpacked_sint64 = 94 [packed = false];
  int unpacked_sint64_size() const;
  private:
  int _internal_unpacked_sint64_size() const;
  public:
  void clear_unpacked_sint64();
  private:
  int64_t _internal_unpacked_sint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_unpacked_sint64() const;
  void _internal_add_unpacked_sint64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_unpacked_sint64();
  public:
  int64_t unpacked_sint64(int index) const;
  void set_unpacked_sint64(int index, int64_t value);
  void add_unpacked_sint64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      unpacked_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_unpacked_sint64();

  // repeated fixed32 unpacked_fixed32 = 95 [packed = false];
  int unpacked_fixed32_size() const;
  private:
  int _internal_unpacked_fixed32_size() const;
  public:
  void clear_unpacked_fixed32();
  private:
  uint32_t _internal_unpacked_fixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_unpacked_fixed32() const;
  void _internal_add_unpacked_fixed32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_unpacked_fixed32();
  public:
  uint32_t unpacked_fixed32(int index) const;
  void set_unpacked_fixed32(int index, uint32_t value);
  void add_unpacked_fixed32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      unpacked_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_unpacked_fixed32();

  // repeated fixed64 unpacked_fixed64 = 96 [packed = false];
  int unpacked_fixed64_size() const;
  private:
  int _internal_unpacked_fixed64_size() const;
  public:
  void clear_unpacked_fixed64();
  private:
  uint64_t _internal_unpacked_fixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_unpacked_fixed64() const;
  void _internal_add_unpacked_fixed64(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_unpacked_fixed64();
  public:
  uint64_t unpacked_fixed64(int index) const;
  void set_unpacked_fixed64(int index, uint64_t value);
  void add_unpacked_fixed64(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      unpacked_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_unpacked_fixed64();

  // repeated sfixed32 unpacked_sfixed32 = 97 [packed = false];
  int unpacked_sfixed32_size() const;
  private:
  int _internal_unpacked_sfixed32_size() const;
  public:
  void clear_unpacked_sfixed32();
  private:
  int32_t _internal_unpacked_sfixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_unpacked_sfixed32() const;
  void _internal_add_unpacked_sfixed32(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_unpacked_sfixed32();
  public:
  int32_t unpacked_sfixed32(int index) const;
  void set_unpacked_sfixed32(int index, int32_t value);
  void add_unpacked_sfixed32(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      unpacked_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_unpacked_sfixed32();

  // repeated sfixed64 unpacked_sfixed64 = 98 [packed = false];
  int unpacked_sfixed64_size() const;
  private:
  int _internal_unpacked_sfixed64_size() const;
  public:
  void clear_unpacked_sfixed64();
  private:
  int64_t _internal_unpacked_sfixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_unpacked_sfixed64() const;
  void _internal_add_unpacked_sfixed64(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_unpacked_sfixed64();
  public:
  int64_t unpacked_sfixed64(int index) const;
  void set_unpacked_sfixed64(int index, int64_t value);
  void add_unpacked_sfixed64(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      unpacked_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_unpacked_sfixed64();

  // repeated float unpacked_float = 99 [packed = false];
  int unpacked_float_size() const;
  private:
  int _internal_unpacked_float_size() const;
  public:
  void clear_unpacked_float();
  private:
  float _internal_unpacked_float(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_unpacked_float() const;
  void _internal_add_unpacked_float(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_unpacked_float();
  public:
  float unpacked_float(int index) const;
  void set_unpacked_float(int index, float value);
  void add_unpacked_float(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      unpacked_float() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_unpacked_float();

  // repeated double unpacked_double = 100 [packed = false];
  int unpacked_double_size() const;
  private:
  int _internal_unpacked_double_size() const;
  public:
  void clear_unpacked_double();
  private:
  double _internal_unpacked_double(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_unpacked_double() const;
  void _internal_add_unpacked_double(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_unpacked_double();
  public:
  double unpacked_double(int index) const;
  void set_unpacked_double(int index, double value);
  void add_unpacked_double(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      unpacked_double() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_unpacked_double();

  // repeated bool unpacked_bool = 101 [packed = false];
  int unpacked_bool_size() const;
  private:
  int _internal_unpacked_bool_size() const;
  public:
  void clear_unpacked_bool();
  private:
  bool _internal_unpacked_bool(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_unpacked_bool() const;
  void _internal_add_unpacked_bool(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_unpacked_bool();
  public:
  bool unpacked_bool(int index) const;
  void set_unpacked_bool(int index, bool value);
  void add_unpacked_bool(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      unpacked_bool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_unpacked_bool();

  // repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum unpacked_nested_enum = 102 [packed = false];
  int unpacked_nested_enum_size() const;
  private:
  int _internal_unpacked_nested_enum_size() const;
  public:
  void clear_unpacked_nested_enum();
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum _internal_unpacked_nested_enum(int index) const;
  void _internal_add_unpacked_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_unpacked_nested_enum();
  public:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum unpacked_nested_enum(int index) const;
  void set_unpacked_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  void add_unpacked_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& unpacked_nested_enum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_unpacked_nested_enum();

  // repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
  int repeated_bool_wrapper_size() const;
  private:
  int _internal_repeated_bool_wrapper_size() const;
  public:
  void clear_repeated_bool_wrapper();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_repeated_bool_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BoolValue >*
      mutable_repeated_bool_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_repeated_bool_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_add_repeated_bool_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& repeated_bool_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* add_repeated_bool_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BoolValue >&
      repeated_bool_wrapper() const;

  // repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
  int repeated_int32_wrapper_size() const;
  private:
  int _internal_repeated_int32_wrapper_size() const;
  public:
  void clear_repeated_int32_wrapper();
  ::PROTOBUF_NAMESPACE_ID::Int32Value* mutable_repeated_int32_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int32Value >*
      mutable_repeated_int32_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& _internal_repeated_int32_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _internal_add_repeated_int32_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& repeated_int32_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Int32Value* add_repeated_int32_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int32Value >&
      repeated_int32_wrapper() const;

  // repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
  int repeated_int64_wrapper_size() const;
  private:
  int _internal_repeated_int64_wrapper_size() const;
  public:
  void clear_repeated_int64_wrapper();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_repeated_int64_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int64Value >*
      mutable_repeated_int64_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_repeated_int64_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_add_repeated_int64_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& repeated_int64_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* add_repeated_int64_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int64Value >&
      repeated_int64_wrapper() const;

  // repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
  int repeated_uint32_wrapper_size() const;
  private:
  int _internal_repeated_uint32_wrapper_size() const;
  public:
  void clear_repeated_uint32_wrapper();
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* mutable_repeated_uint32_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt32Value >*
      mutable_repeated_uint32_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& _internal_repeated_uint32_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _internal_add_repeated_uint32_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& repeated_uint32_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* add_repeated_uint32_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt32Value >&
      repeated_uint32_wrapper() const;

  // repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
  int repeated_uint64_wrapper_size() const;
  private:
  int _internal_repeated_uint64_wrapper_size() const;
  public:
  void clear_repeated_uint64_wrapper();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_repeated_uint64_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt64Value >*
      mutable_repeated_uint64_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_repeated_uint64_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_add_repeated_uint64_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& repeated_uint64_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* add_repeated_uint64_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt64Value >&
      repeated_uint64_wrapper() const;

  // repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
  int repeated_float_wrapper_size() const;
  private:
  int _internal_repeated_float_wrapper_size() const;
  public:
  void clear_repeated_float_wrapper();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_repeated_float_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FloatValue >*
      mutable_repeated_float_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_repeated_float_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_add_repeated_float_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& repeated_float_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* add_repeated_float_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FloatValue >&
      repeated_float_wrapper() const;

  // repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
  int repeated_double_wrapper_size() const;
  private:
  int _internal_repeated_double_wrapper_size() const;
  public:
  void clear_repeated_double_wrapper();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_repeated_double_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::DoubleValue >*
      mutable_repeated_double_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_repeated_double_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_add_repeated_double_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& repeated_double_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* add_repeated_double_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::DoubleValue >&
      repeated_double_wrapper() const;

  // repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
  int repeated_string_wrapper_size() const;
  private:
  int _internal_repeated_string_wrapper_size() const;
  public:
  void clear_repeated_string_wrapper();
  ::PROTOBUF_NAMESPACE_ID::StringValue* mutable_repeated_string_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::StringValue >*
      mutable_repeated_string_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& _internal_repeated_string_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* _internal_add_repeated_string_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& repeated_string_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* add_repeated_string_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::StringValue >&
      repeated_string_wrapper() const;

  // repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
  int repeated_bytes_wrapper_size() const;
  private:
  int _internal_repeated_bytes_wrapper_size() const;
  public:
  void clear_repeated_bytes_wrapper();
  ::PROTOBUF_NAMESPACE_ID::BytesValue* mutable_repeated_bytes_wrapper(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BytesValue >*
      mutable_repeated_bytes_wrapper();
  private:
  const ::PROTOBUF_NAMESPACE_ID::BytesValue& _internal_repeated_bytes_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::BytesValue* _internal_add_repeated_bytes_wrapper();
  public:
  const ::PROTOBUF_NAMESPACE_ID::BytesValue& repeated_bytes_wrapper(int index) const;
  ::PROTOBUF_NAMESPACE_ID::BytesValue* add_repeated_bytes_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BytesValue >&
      repeated_bytes_wrapper() const;

  // repeated .google.protobuf.Duration repeated_duration = 311;
  int repeated_duration_size() const;
  private:
  int _internal_repeated_duration_size() const;
  public:
  void clear_repeated_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_repeated_duration(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Duration >*
      mutable_repeated_duration();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_repeated_duration(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_add_repeated_duration();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Duration& repeated_duration(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Duration* add_repeated_duration();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Duration >&
      repeated_duration() const;

  // repeated .google.protobuf.Timestamp repeated_timestamp = 312;
  int repeated_timestamp_size() const;
  private:
  int _internal_repeated_timestamp_size() const;
  public:
  void clear_repeated_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_repeated_timestamp(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Timestamp >*
      mutable_repeated_timestamp();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_repeated_timestamp(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_add_repeated_timestamp();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& repeated_timestamp(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* add_repeated_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Timestamp >&
      repeated_timestamp() const;

  // repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
  int repeated_fieldmask_size() const;
  private:
  int _internal_repeated_fieldmask_size() const;
  public:
  void clear_repeated_fieldmask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_repeated_fieldmask(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FieldMask >*
      mutable_repeated_fieldmask();
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_repeated_fieldmask(int index) const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_add_repeated_fieldmask();
  public:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& repeated_fieldmask(int index) const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* add_repeated_fieldmask();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FieldMask >&
      repeated_fieldmask() const;

  // repeated .google.protobuf.Any repeated_any = 315;
  int repeated_any_size() const;
  private:
  int _internal_repeated_any_size() const;
  public:
  void clear_repeated_any();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_repeated_any(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
      mutable_repeated_any();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_repeated_any(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_add_repeated_any();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Any& repeated_any(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Any* add_repeated_any();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
      repeated_any() const;

  // repeated .google.protobuf.Value repeated_value = 316;
  int repeated_value_size() const;
  private:
  int _internal_repeated_value_size() const;
  public:
  void clear_repeated_value();
  ::PROTOBUF_NAMESPACE_ID::Value* mutable_repeated_value(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Value >*
      mutable_repeated_value();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Value& _internal_repeated_value(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Value* _internal_add_repeated_value();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Value& repeated_value(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Value* add_repeated_value();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Value >&
      repeated_value() const;

  // repeated .google.protobuf.ListValue repeated_list_value = 317;
  int repeated_list_value_size() const;
  private:
  int _internal_repeated_list_value_size() const;
  public:
  void clear_repeated_list_value();
  ::PROTOBUF_NAMESPACE_ID::ListValue* mutable_repeated_list_value(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::ListValue >*
      mutable_repeated_list_value();
  private:
  const ::PROTOBUF_NAMESPACE_ID::ListValue& _internal_repeated_list_value(int index) const;
  ::PROTOBUF_NAMESPACE_ID::ListValue* _internal_add_repeated_list_value();
  public:
  const ::PROTOBUF_NAMESPACE_ID::ListValue& repeated_list_value(int index) const;
  ::PROTOBUF_NAMESPACE_ID::ListValue* add_repeated_list_value();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::ListValue >&
      repeated_list_value() const;

  // repeated .google.protobuf.Struct repeated_struct = 324;
  int repeated_struct_size() const;
  private:
  int _internal_repeated_struct_size() const;
  public:
  void clear_repeated_struct();
  ::PROTOBUF_NAMESPACE_ID::Struct* mutable_repeated_struct(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Struct >*
      mutable_repeated_struct();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Struct& _internal_repeated_struct(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Struct* _internal_add_repeated_struct();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Struct& repeated_struct(int index) const;
  ::PROTOBUF_NAMESPACE_ID::Struct* add_repeated_struct();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Struct >&
      repeated_struct() const;

  // string optional_string = 14;
  void clear_optional_string();
  const std::string& optional_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_string();
  PROTOBUF_NODISCARD std::string* release_optional_string();
  void set_allocated_optional_string(std::string* optional_string);
  private:
  const std::string& _internal_optional_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string(const std::string& value);
  std::string* _internal_mutable_optional_string();
  public:

  // bytes optional_bytes = 15;
  void clear_optional_bytes();
  const std::string& optional_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_bytes();
  PROTOBUF_NODISCARD std::string* release_optional_bytes();
  void set_allocated_optional_bytes(std::string* optional_bytes);
  private:
  const std::string& _internal_optional_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_bytes(const std::string& value);
  std::string* _internal_mutable_optional_bytes();
  public:

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  void clear_optional_string_piece();
 private:
  // Hidden due to unknown ctype option.
  const std::string& optional_string_piece() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_string_piece(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_string_piece();
  PROTOBUF_NODISCARD std::string* release_optional_string_piece();
  void set_allocated_optional_string_piece(std::string* optional_string_piece);
  private:
  const std::string& _internal_optional_string_piece() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string_piece(const std::string& value);
  std::string* _internal_mutable_optional_string_piece();
  public:
 public:

  // string optional_cord = 25 [ctype = CORD];
  void clear_optional_cord();
 private:
  // Hidden due to unknown ctype option.
  const std::string& optional_cord() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_cord(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_cord();
  PROTOBUF_NODISCARD std::string* release_optional_cord();
  void set_allocated_optional_cord(std::string* optional_cord);
  private:
  const std::string& _internal_optional_cord() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_cord(const std::string& value);
  std::string* _internal_mutable_optional_cord();
  public:
 public:

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
  bool has_optional_nested_message() const;
  private:
  bool _internal_has_optional_nested_message() const;
  public:
  void clear_optional_nested_message();
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& optional_nested_message() const;
  PROTOBUF_NODISCARD ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* release_optional_nested_message();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* mutable_optional_nested_message();
  void set_allocated_optional_nested_message(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message);
  private:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& _internal_optional_nested_message() const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _internal_mutable_optional_nested_message();
  public:
  void unsafe_arena_set_allocated_optional_nested_message(
      ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message);
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* unsafe_arena_release_optional_nested_message();

  // .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
  bool has_optional_foreign_message() const;
  private:
  bool _internal_has_optional_foreign_message() const;
  public:
  void clear_optional_foreign_message();
  const ::protobuf_test_messages::proto3::ForeignMessage& optional_foreign_message() const;
  PROTOBUF_NODISCARD ::protobuf_test_messages::proto3::ForeignMessage* release_optional_foreign_message();
  ::protobuf_test_messages::proto3::ForeignMessage* mutable_optional_foreign_message();
  void set_allocated_optional_foreign_message(::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message);
  private:
  const ::protobuf_test_messages::proto3::ForeignMessage& _internal_optional_foreign_message() const;
  ::protobuf_test_messages::proto3::ForeignMessage* _internal_mutable_optional_foreign_message();
  public:
  void unsafe_arena_set_allocated_optional_foreign_message(
      ::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message);
  ::protobuf_test_messages::proto3::ForeignMessage* unsafe_arena_release_optional_foreign_message();

  // .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
  bool has_recursive_message() const;
  private:
  bool _internal_has_recursive_message() const;
  public:
  void clear_recursive_message();
  const ::protobuf_test_messages::proto3::TestAllTypesProto3& recursive_message() const;
  PROTOBUF_NODISCARD ::protobuf_test_messages::proto3::TestAllTypesProto3* release_recursive_message();
  ::protobuf_test_messages::proto3::TestAllTypesProto3* mutable_recursive_message();
  void set_allocated_recursive_message(::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message);
  private:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3& _internal_recursive_message() const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3* _internal_mutable_recursive_message();
  public:
  void unsafe_arena_set_allocated_recursive_message(
      ::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message);
  ::protobuf_test_messages::proto3::TestAllTypesProto3* unsafe_arena_release_recursive_message();

  // .google.protobuf.BoolValue optional_bool_wrapper = 201;
  bool has_optional_bool_wrapper() const;
  private:
  bool _internal_has_optional_bool_wrapper() const;
  public:
  void clear_optional_bool_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& optional_bool_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BoolValue* release_optional_bool_wrapper();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_optional_bool_wrapper();
  void set_allocated_optional_bool_wrapper(::PROTOBUF_NAMESPACE_ID::BoolValue* optional_bool_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_optional_bool_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_optional_bool_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_bool_wrapper(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* optional_bool_wrapper);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_optional_bool_wrapper();

  // .google.protobuf.Int32Value optional_int32_wrapper = 202;
  bool has_optional_int32_wrapper() const;
  private:
  bool _internal_has_optional_int32_wrapper() const;
  public:
  void clear_optional_int32_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& optional_int32_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int32Value* release_optional_int32_wrapper();
  ::PROTOBUF_NAMESPACE_ID::Int32Value* mutable_optional_int32_wrapper();
  void set_allocated_optional_int32_wrapper(::PROTOBUF_NAMESPACE_ID::Int32Value* optional_int32_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int32Value& _internal_optional_int32_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _internal_mutable_optional_int32_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_int32_wrapper(
      ::PROTOBUF_NAMESPACE_ID::Int32Value* optional_int32_wrapper);
  ::PROTOBUF_NAMESPACE_ID::Int32Value* unsafe_arena_release_optional_int32_wrapper();

  // .google.protobuf.Int64Value optional_int64_wrapper = 203;
  bool has_optional_int64_wrapper() const;
  private:
  bool _internal_has_optional_int64_wrapper() const;
  public:
  void clear_optional_int64_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& optional_int64_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Int64Value* release_optional_int64_wrapper();
  ::PROTOBUF_NAMESPACE_ID::Int64Value* mutable_optional_int64_wrapper();
  void set_allocated_optional_int64_wrapper(::PROTOBUF_NAMESPACE_ID::Int64Value* optional_int64_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Int64Value& _internal_optional_int64_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _internal_mutable_optional_int64_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_int64_wrapper(
      ::PROTOBUF_NAMESPACE_ID::Int64Value* optional_int64_wrapper);
  ::PROTOBUF_NAMESPACE_ID::Int64Value* unsafe_arena_release_optional_int64_wrapper();

  // .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
  bool has_optional_uint32_wrapper() const;
  private:
  bool _internal_has_optional_uint32_wrapper() const;
  public:
  void clear_optional_uint32_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& optional_uint32_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::UInt32Value* release_optional_uint32_wrapper();
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* mutable_optional_uint32_wrapper();
  void set_allocated_optional_uint32_wrapper(::PROTOBUF_NAMESPACE_ID::UInt32Value* optional_uint32_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value& _internal_optional_uint32_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _internal_mutable_optional_uint32_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_uint32_wrapper(
      ::PROTOBUF_NAMESPACE_ID::UInt32Value* optional_uint32_wrapper);
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* unsafe_arena_release_optional_uint32_wrapper();

  // .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
  bool has_optional_uint64_wrapper() const;
  private:
  bool _internal_has_optional_uint64_wrapper() const;
  public:
  void clear_optional_uint64_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& optional_uint64_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::UInt64Value* release_optional_uint64_wrapper();
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* mutable_optional_uint64_wrapper();
  void set_allocated_optional_uint64_wrapper(::PROTOBUF_NAMESPACE_ID::UInt64Value* optional_uint64_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value& _internal_optional_uint64_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _internal_mutable_optional_uint64_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_uint64_wrapper(
      ::PROTOBUF_NAMESPACE_ID::UInt64Value* optional_uint64_wrapper);
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* unsafe_arena_release_optional_uint64_wrapper();

  // .google.protobuf.FloatValue optional_float_wrapper = 206;
  bool has_optional_float_wrapper() const;
  private:
  bool _internal_has_optional_float_wrapper() const;
  public:
  void clear_optional_float_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& optional_float_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_optional_float_wrapper();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_optional_float_wrapper();
  void set_allocated_optional_float_wrapper(::PROTOBUF_NAMESPACE_ID::FloatValue* optional_float_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_optional_float_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_optional_float_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_float_wrapper(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* optional_float_wrapper);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_optional_float_wrapper();

  // .google.protobuf.DoubleValue optional_double_wrapper = 207;
  bool has_optional_double_wrapper() const;
  private:
  bool _internal_has_optional_double_wrapper() const;
  public:
  void clear_optional_double_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& optional_double_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::DoubleValue* release_optional_double_wrapper();
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* mutable_optional_double_wrapper();
  void set_allocated_optional_double_wrapper(::PROTOBUF_NAMESPACE_ID::DoubleValue* optional_double_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue& _internal_optional_double_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _internal_mutable_optional_double_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_double_wrapper(
      ::PROTOBUF_NAMESPACE_ID::DoubleValue* optional_double_wrapper);
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* unsafe_arena_release_optional_double_wrapper();

  // .google.protobuf.StringValue optional_string_wrapper = 208;
  bool has_optional_string_wrapper() const;
  private:
  bool _internal_has_optional_string_wrapper() const;
  public:
  void clear_optional_string_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::StringValue& optional_string_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::StringValue* release_optional_string_wrapper();
  ::PROTOBUF_NAMESPACE_ID::StringValue* mutable_optional_string_wrapper();
  void set_allocated_optional_string_wrapper(::PROTOBUF_NAMESPACE_ID::StringValue* optional_string_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& _internal_optional_string_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_optional_string_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_string_wrapper(
      ::PROTOBUF_NAMESPACE_ID::StringValue* optional_string_wrapper);
  ::PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_optional_string_wrapper();

  // .google.protobuf.BytesValue optional_bytes_wrapper = 209;
  bool has_optional_bytes_wrapper() const;
  private:
  bool _internal_has_optional_bytes_wrapper() const;
  public:
  void clear_optional_bytes_wrapper();
  const ::PROTOBUF_NAMESPACE_ID::BytesValue& optional_bytes_wrapper() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::BytesValue* release_optional_bytes_wrapper();
  ::PROTOBUF_NAMESPACE_ID::BytesValue* mutable_optional_bytes_wrapper();
  void set_allocated_optional_bytes_wrapper(::PROTOBUF_NAMESPACE_ID::BytesValue* optional_bytes_wrapper);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BytesValue& _internal_optional_bytes_wrapper() const;
  ::PROTOBUF_NAMESPACE_ID::BytesValue* _internal_mutable_optional_bytes_wrapper();
  public:
  void unsafe_arena_set_allocated_optional_bytes_wrapper(
      ::PROTOBUF_NAMESPACE_ID::BytesValue* optional_bytes_wrapper);
  ::PROTOBUF_NAMESPACE_ID::BytesValue* unsafe_arena_release_optional_bytes_wrapper();

  // .google.protobuf.Duration optional_duration = 301;
  bool has_optional_duration() const;
  private:
  bool _internal_has_optional_duration() const;
  public:
  void clear_optional_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& optional_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_optional_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_optional_duration();
  void set_allocated_optional_duration(::PROTOBUF_NAMESPACE_ID::Duration* optional_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_optional_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_optional_duration();
  public:
  void unsafe_arena_set_allocated_optional_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* optional_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_optional_duration();

  // .google.protobuf.Timestamp optional_timestamp = 302;
  bool has_optional_timestamp() const;
  private:
  bool _internal_has_optional_timestamp() const;
  public:
  void clear_optional_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& optional_timestamp() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Timestamp* release_optional_timestamp();
  ::PROTOBUF_NAMESPACE_ID::Timestamp* mutable_optional_timestamp();
  void set_allocated_optional_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* optional_timestamp);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Timestamp& _internal_optional_timestamp() const;
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_optional_timestamp();
  public:
  void unsafe_arena_set_allocated_optional_timestamp(
      ::PROTOBUF_NAMESPACE_ID::Timestamp* optional_timestamp);
  ::PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_optional_timestamp();

  // .google.protobuf.FieldMask optional_field_mask = 303;
  bool has_optional_field_mask() const;
  private:
  bool _internal_has_optional_field_mask() const;
  public:
  void clear_optional_field_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& optional_field_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_optional_field_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_optional_field_mask();
  void set_allocated_optional_field_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* optional_field_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_optional_field_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_optional_field_mask();
  public:
  void unsafe_arena_set_allocated_optional_field_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* optional_field_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_optional_field_mask();

  // .google.protobuf.Struct optional_struct = 304;
  bool has_optional_struct() const;
  private:
  bool _internal_has_optional_struct() const;
  public:
  void clear_optional_struct();
  const ::PROTOBUF_NAMESPACE_ID::Struct& optional_struct() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Struct* release_optional_struct();
  ::PROTOBUF_NAMESPACE_ID::Struct* mutable_optional_struct();
  void set_allocated_optional_struct(::PROTOBUF_NAMESPACE_ID::Struct* optional_struct);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Struct& _internal_optional_struct() const;
  ::PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_optional_struct();
  public:
  void unsafe_arena_set_allocated_optional_struct(
      ::PROTOBUF_NAMESPACE_ID::Struct* optional_struct);
  ::PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_optional_struct();

  // .google.protobuf.Any optional_any = 305;
  bool has_optional_any() const;
  private:
  bool _internal_has_optional_any() const;
  public:
  void clear_optional_any();
  const ::PROTOBUF_NAMESPACE_ID::Any& optional_any() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_optional_any();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_optional_any();
  void set_allocated_optional_any(::PROTOBUF_NAMESPACE_ID::Any* optional_any);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_optional_any() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_optional_any();
  public:
  void unsafe_arena_set_allocated_optional_any(
      ::PROTOBUF_NAMESPACE_ID::Any* optional_any);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_optional_any();

  // .google.protobuf.Value optional_value = 306;
  bool has_optional_value() const;
  private:
  bool _internal_has_optional_value() const;
  public:
  void clear_optional_value();
  const ::PROTOBUF_NAMESPACE_ID::Value& optional_value() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Value* release_optional_value();
  ::PROTOBUF_NAMESPACE_ID::Value* mutable_optional_value();
  void set_allocated_optional_value(::PROTOBUF_NAMESPACE_ID::Value* optional_value);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Value& _internal_optional_value() const;
  ::PROTOBUF_NAMESPACE_ID::Value* _internal_mutable_optional_value();
  public:
  void unsafe_arena_set_allocated_optional_value(
      ::PROTOBUF_NAMESPACE_ID::Value* optional_value);
  ::PROTOBUF_NAMESPACE_ID::Value* unsafe_arena_release_optional_value();

  // int64 optional_int64 = 2;
  void clear_optional_int64();
  int64_t optional_int64() const;
  void set_optional_int64(int64_t value);
  private:
  int64_t _internal_optional_int64() const;
  void _internal_set_optional_int64(int64_t value);
  public:

  // int32 optional_int32 = 1;
  void clear_optional_int32();
  int32_t optional_int32() const;
  void set_optional_int32(int32_t value);
  private:
  int32_t _internal_optional_int32() const;
  void _internal_set_optional_int32(int32_t value);
  public:

  // uint32 optional_uint32 = 3;
  void clear_optional_uint32();
  uint32_t optional_uint32() const;
  void set_optional_uint32(uint32_t value);
  private:
  uint32_t _internal_optional_uint32() const;
  void _internal_set_optional_uint32(uint32_t value);
  public:

  // uint64 optional_uint64 = 4;
  void clear_optional_uint64();
  uint64_t optional_uint64() const;
  void set_optional_uint64(uint64_t value);
  private:
  uint64_t _internal_optional_uint64() const;
  void _internal_set_optional_uint64(uint64_t value);
  public:

  // sint64 optional_sint64 = 6;
  void clear_optional_sint64();
  int64_t optional_sint64() const;
  void set_optional_sint64(int64_t value);
  private:
  int64_t _internal_optional_sint64() const;
  void _internal_set_optional_sint64(int64_t value);
  public:

  // sint32 optional_sint32 = 5;
  void clear_optional_sint32();
  int32_t optional_sint32() const;
  void set_optional_sint32(int32_t value);
  private:
  int32_t _internal_optional_sint32() const;
  void _internal_set_optional_sint32(int32_t value);
  public:

  // fixed32 optional_fixed32 = 7;
  void clear_optional_fixed32();
  uint32_t optional_fixed32() const;
  void set_optional_fixed32(uint32_t value);
  private:
  uint32_t _internal_optional_fixed32() const;
  void _internal_set_optional_fixed32(uint32_t value);
  public:

  // fixed64 optional_fixed64 = 8;
  void clear_optional_fixed64();
  uint64_t optional_fixed64() const;
  void set_optional_fixed64(uint64_t value);
  private:
  uint64_t _internal_optional_fixed64() const;
  void _internal_set_optional_fixed64(uint64_t value);
  public:

  // sfixed64 optional_sfixed64 = 10;
  void clear_optional_sfixed64();
  int64_t optional_sfixed64() const;
  void set_optional_sfixed64(int64_t value);
  private:
  int64_t _internal_optional_sfixed64() const;
  void _internal_set_optional_sfixed64(int64_t value);
  public:

  // sfixed32 optional_sfixed32 = 9;
  void clear_optional_sfixed32();
  int32_t optional_sfixed32() const;
  void set_optional_sfixed32(int32_t value);
  private:
  int32_t _internal_optional_sfixed32() const;
  void _internal_set_optional_sfixed32(int32_t value);
  public:

  // float optional_float = 11;
  void clear_optional_float();
  float optional_float() const;
  void set_optional_float(float value);
  private:
  float _internal_optional_float() const;
  void _internal_set_optional_float(float value);
  public:

  // double optional_double = 12;
  void clear_optional_double();
  double optional_double() const;
  void set_optional_double(double value);
  private:
  double _internal_optional_double() const;
  void _internal_set_optional_double(double value);
  public:

  // bool optional_bool = 13;
  void clear_optional_bool();
  bool optional_bool() const;
  void set_optional_bool(bool value);
  private:
  bool _internal_optional_bool() const;
  void _internal_set_optional_bool(bool value);
  public:

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
  void clear_optional_nested_enum();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum optional_nested_enum() const;
  void set_optional_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum _internal_optional_nested_enum() const;
  void _internal_set_optional_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  public:

  // .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
  void clear_optional_foreign_enum();
  ::protobuf_test_messages::proto3::ForeignEnum optional_foreign_enum() const;
  void set_optional_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value);
  private:
  ::protobuf_test_messages::proto3::ForeignEnum _internal_optional_foreign_enum() const;
  void _internal_set_optional_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value);
  public:

  // .protobuf_test_messages.proto3.TestAllTypesProto3.AliasedEnum optional_aliased_enum = 23;
  void clear_optional_aliased_enum();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum optional_aliased_enum() const;
  void set_optional_aliased_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum value);
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum _internal_optional_aliased_enum() const;
  void _internal_set_optional_aliased_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum value);
  public:

  // .google.protobuf.NullValue optional_null_value = 307;
  void clear_optional_null_value();
  ::PROTOBUF_NAMESPACE_ID::NullValue optional_null_value() const;
  void set_optional_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value);
  private:
  ::PROTOBUF_NAMESPACE_ID::NullValue _internal_optional_null_value() const;
  void _internal_set_optional_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value);
  public:

  // int32 fieldname1 = 401;
  void clear_fieldname1();
  int32_t fieldname1() const;
  void set_fieldname1(int32_t value);
  private:
  int32_t _internal_fieldname1() const;
  void _internal_set_fieldname1(int32_t value);
  public:

  // int32 field_name2 = 402;
  void clear_field_name2();
  int32_t field_name2() const;
  void set_field_name2(int32_t value);
  private:
  int32_t _internal_field_name2() const;
  void _internal_set_field_name2(int32_t value);
  public:

  // int32 _field_name3 = 403;
  void clear__field_name3();
  int32_t _field_name3() const;
  void set__field_name3(int32_t value);
  private:
  int32_t _internal__field_name3() const;
  void _internal_set__field_name3(int32_t value);
  public:

  // int32 field__name4_ = 404;
  void clear_field__name4_();
  int32_t field__name4_() const;
  void set_field__name4_(int32_t value);
  private:
  int32_t _internal_field__name4_() const;
  void _internal_set_field__name4_(int32_t value);
  public:

  // int32 field0name5 = 405;
  void clear_field0name5();
  int32_t field0name5() const;
  void set_field0name5(int32_t value);
  private:
  int32_t _internal_field0name5() const;
  void _internal_set_field0name5(int32_t value);
  public:

  // int32 field_0_name6 = 406;
  void clear_field_0_name6();
  int32_t field_0_name6() const;
  void set_field_0_name6(int32_t value);
  private:
  int32_t _internal_field_0_name6() const;
  void _internal_set_field_0_name6(int32_t value);
  public:

  // int32 fieldName7 = 407;
  void clear_fieldname7();
  int32_t fieldname7() const;
  void set_fieldname7(int32_t value);
  private:
  int32_t _internal_fieldname7() const;
  void _internal_set_fieldname7(int32_t value);
  public:

  // int32 FieldName8 = 408;
  void clear_fieldname8();
  int32_t fieldname8() const;
  void set_fieldname8(int32_t value);
  private:
  int32_t _internal_fieldname8() const;
  void _internal_set_fieldname8(int32_t value);
  public:

  // int32 field_Name9 = 409;
  void clear_field_name9();
  int32_t field_name9() const;
  void set_field_name9(int32_t value);
  private:
  int32_t _internal_field_name9() const;
  void _internal_set_field_name9(int32_t value);
  public:

  // int32 Field_Name10 = 410;
  void clear_field_name10();
  int32_t field_name10() const;
  void set_field_name10(int32_t value);
  private:
  int32_t _internal_field_name10() const;
  void _internal_set_field_name10(int32_t value);
  public:

  // int32 FIELD_NAME11 = 411;
  void clear_field_name11();
  int32_t field_name11() const;
  void set_field_name11(int32_t value);
  private:
  int32_t _internal_field_name11() const;
  void _internal_set_field_name11(int32_t value);
  public:

  // int32 FIELD_name12 = 412;
  void clear_field_name12();
  int32_t field_name12() const;
  void set_field_name12(int32_t value);
  private:
  int32_t _internal_field_name12() const;
  void _internal_set_field_name12(int32_t value);
  public:

  // int32 __field_name13 = 413;
  void clear___field_name13();
  int32_t __field_name13() const;
  void set___field_name13(int32_t value);
  private:
  int32_t _internal___field_name13() const;
  void _internal_set___field_name13(int32_t value);
  public:

  // int32 __Field_name14 = 414;
  void clear___field_name14();
  int32_t __field_name14() const;
  void set___field_name14(int32_t value);
  private:
  int32_t _internal___field_name14() const;
  void _internal_set___field_name14(int32_t value);
  public:

  // int32 field__name15 = 415;
  void clear_field__name15();
  int32_t field__name15() const;
  void set_field__name15(int32_t value);
  private:
  int32_t _internal_field__name15() const;
  void _internal_set_field__name15(int32_t value);
  public:

  // int32 field__Name16 = 416;
  void clear_field__name16();
  int32_t field__name16() const;
  void set_field__name16(int32_t value);
  private:
  int32_t _internal_field__name16() const;
  void _internal_set_field__name16(int32_t value);
  public:

  // int32 field_name17__ = 417;
  void clear_field_name17__();
  int32_t field_name17__() const;
  void set_field_name17__(int32_t value);
  private:
  int32_t _internal_field_name17__() const;
  void _internal_set_field_name17__(int32_t value);
  public:

  // int32 Field_name18__ = 418;
  void clear_field_name18__();
  int32_t field_name18__() const;
  void set_field_name18__(int32_t value);
  private:
  int32_t _internal_field_name18__() const;
  void _internal_set_field_name18__(int32_t value);
  public:

  // uint32 oneof_uint32 = 111;
  bool has_oneof_uint32() const;
  private:
  bool _internal_has_oneof_uint32() const;
  public:
  void clear_oneof_uint32();
  uint32_t oneof_uint32() const;
  void set_oneof_uint32(uint32_t value);
  private:
  uint32_t _internal_oneof_uint32() const;
  void _internal_set_oneof_uint32(uint32_t value);
  public:

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
  bool has_oneof_nested_message() const;
  private:
  bool _internal_has_oneof_nested_message() const;
  public:
  void clear_oneof_nested_message();
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& oneof_nested_message() const;
  PROTOBUF_NODISCARD ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* release_oneof_nested_message();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* mutable_oneof_nested_message();
  void set_allocated_oneof_nested_message(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message);
  private:
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& _internal_oneof_nested_message() const;
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _internal_mutable_oneof_nested_message();
  public:
  void unsafe_arena_set_allocated_oneof_nested_message(
      ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message);
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* unsafe_arena_release_oneof_nested_message();

  // string oneof_string = 113;
  bool has_oneof_string() const;
  private:
  bool _internal_has_oneof_string() const;
  public:
  void clear_oneof_string();
  const std::string& oneof_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_oneof_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_oneof_string();
  PROTOBUF_NODISCARD std::string* release_oneof_string();
  void set_allocated_oneof_string(std::string* oneof_string);
  private:
  const std::string& _internal_oneof_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_string(const std::string& value);
  std::string* _internal_mutable_oneof_string();
  public:

  // bytes oneof_bytes = 114;
  bool has_oneof_bytes() const;
  private:
  bool _internal_has_oneof_bytes() const;
  public:
  void clear_oneof_bytes();
  const std::string& oneof_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_oneof_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_oneof_bytes();
  PROTOBUF_NODISCARD std::string* release_oneof_bytes();
  void set_allocated_oneof_bytes(std::string* oneof_bytes);
  private:
  const std::string& _internal_oneof_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_bytes(const std::string& value);
  std::string* _internal_mutable_oneof_bytes();
  public:

  // bool oneof_bool = 115;
  bool has_oneof_bool() const;
  private:
  bool _internal_has_oneof_bool() const;
  public:
  void clear_oneof_bool();
  bool oneof_bool() const;
  void set_oneof_bool(bool value);
  private:
  bool _internal_oneof_bool() const;
  void _internal_set_oneof_bool(bool value);
  public:

  // uint64 oneof_uint64 = 116;
  bool has_oneof_uint64() const;
  private:
  bool _internal_has_oneof_uint64() const;
  public:
  void clear_oneof_uint64();
  uint64_t oneof_uint64() const;
  void set_oneof_uint64(uint64_t value);
  private:
  uint64_t _internal_oneof_uint64() const;
  void _internal_set_oneof_uint64(uint64_t value);
  public:

  // float oneof_float = 117;
  bool has_oneof_float() const;
  private:
  bool _internal_has_oneof_float() const;
  public:
  void clear_oneof_float();
  float oneof_float() const;
  void set_oneof_float(float value);
  private:
  float _internal_oneof_float() const;
  void _internal_set_oneof_float(float value);
  public:

  // double oneof_double = 118;
  bool has_oneof_double() const;
  private:
  bool _internal_has_oneof_double() const;
  public:
  void clear_oneof_double();
  double oneof_double() const;
  void set_oneof_double(double value);
  private:
  double _internal_oneof_double() const;
  void _internal_set_oneof_double(double value);
  public:

  // .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
  bool has_oneof_enum() const;
  private:
  bool _internal_has_oneof_enum() const;
  public:
  void clear_oneof_enum();
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum oneof_enum() const;
  void set_oneof_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  private:
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum _internal_oneof_enum() const;
  void _internal_set_oneof_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value);
  public:

  // .google.protobuf.NullValue oneof_null_value = 120;
  bool has_oneof_null_value() const;
  private:
  bool _internal_has_oneof_null_value() const;
  public:
  void clear_oneof_null_value();
  ::PROTOBUF_NAMESPACE_ID::NullValue oneof_null_value() const;
  void set_oneof_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value);
  private:
  ::PROTOBUF_NAMESPACE_ID::NullValue _internal_oneof_null_value() const;
  void _internal_set_oneof_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value);
  public:

  void clear_oneof_field();
  OneofFieldCase oneof_field_case() const;
  // @@protoc_insertion_point(class_scope:protobuf_test_messages.proto3.TestAllTypesProto3)
 private:
  class _Internal;
  void set_has_oneof_uint32();
  void set_has_oneof_nested_message();
  void set_has_oneof_string();
  void set_has_oneof_bytes();
  void set_has_oneof_bool();
  void set_has_oneof_uint64();
  void set_has_oneof_float();
  void set_has_oneof_double();
  void set_has_oneof_enum();
  void set_has_oneof_null_value();

  inline bool has_oneof_field() const;
  inline void clear_has_oneof_field();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > repeated_int32_;
    mutable std::atomic<int> _repeated_int32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > repeated_int64_;
    mutable std::atomic<int> _repeated_int64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > repeated_uint32_;
    mutable std::atomic<int> _repeated_uint32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > repeated_uint64_;
    mutable std::atomic<int> _repeated_uint64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > repeated_sint32_;
    mutable std::atomic<int> _repeated_sint32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > repeated_sint64_;
    mutable std::atomic<int> _repeated_sint64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > repeated_fixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > repeated_fixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > repeated_sfixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > repeated_sfixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > repeated_float_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > repeated_double_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > repeated_bool_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_string_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_bytes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage > repeated_nested_message_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::ForeignMessage > repeated_foreign_message_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> repeated_nested_enum_;
    mutable std::atomic<int> _repeated_nested_enum_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> repeated_foreign_enum_;
    mutable std::atomic<int> _repeated_foreign_enum_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_string_piece_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_cord_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapInt32Int32Entry_DoNotUse,
        int32_t, int32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> map_int32_int32_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapInt64Int64Entry_DoNotUse,
        int64_t, int64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> map_int64_int64_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapUint32Uint32Entry_DoNotUse,
        uint32_t, uint32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> map_uint32_uint32_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapUint64Uint64Entry_DoNotUse,
        uint64_t, uint64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64> map_uint64_uint64_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapSint32Sint32Entry_DoNotUse,
        int32_t, int32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> map_sint32_sint32_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapSint64Sint64Entry_DoNotUse,
        int64_t, int64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64> map_sint64_sint64_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapFixed32Fixed32Entry_DoNotUse,
        uint32_t, uint32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED32> map_fixed32_fixed32_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapFixed64Fixed64Entry_DoNotUse,
        uint64_t, uint64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64> map_fixed64_fixed64_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapSfixed32Sfixed32Entry_DoNotUse,
        int32_t, int32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32> map_sfixed32_sfixed32_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapSfixed64Sfixed64Entry_DoNotUse,
        int64_t, int64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED64> map_sfixed64_sfixed64_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapInt32FloatEntry_DoNotUse,
        int32_t, float,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT> map_int32_float_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapInt32DoubleEntry_DoNotUse,
        int32_t, double,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE> map_int32_double_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapBoolBoolEntry_DoNotUse,
        bool, bool,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL> map_bool_bool_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringStringEntry_DoNotUse,
        std::string, std::string,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> map_string_string_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringBytesEntry_DoNotUse,
        std::string, std::string,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES> map_string_bytes_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringNestedMessageEntry_DoNotUse,
        std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> map_string_nested_message_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringForeignMessageEntry_DoNotUse,
        std::string, ::protobuf_test_messages::proto3::ForeignMessage,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> map_string_foreign_message_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringNestedEnumEntry_DoNotUse,
        std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> map_string_nested_enum_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TestAllTypesProto3_MapStringForeignEnumEntry_DoNotUse,
        std::string, ::protobuf_test_messages::proto3::ForeignEnum,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM> map_string_foreign_enum_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > packed_int32_;
    mutable std::atomic<int> _packed_int32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > packed_int64_;
    mutable std::atomic<int> _packed_int64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > packed_uint32_;
    mutable std::atomic<int> _packed_uint32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > packed_uint64_;
    mutable std::atomic<int> _packed_uint64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > packed_sint32_;
    mutable std::atomic<int> _packed_sint32_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > packed_sint64_;
    mutable std::atomic<int> _packed_sint64_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > packed_fixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > packed_fixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > packed_sfixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > packed_sfixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > packed_float_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > packed_double_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > packed_bool_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> packed_nested_enum_;
    mutable std::atomic<int> _packed_nested_enum_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > unpacked_int32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > unpacked_int64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > unpacked_uint32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > unpacked_uint64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > unpacked_sint32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > unpacked_sint64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > unpacked_fixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > unpacked_fixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > unpacked_sfixed32_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > unpacked_sfixed64_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > unpacked_float_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > unpacked_double_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > unpacked_bool_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> unpacked_nested_enum_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BoolValue > repeated_bool_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int32Value > repeated_int32_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int64Value > repeated_int64_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt32Value > repeated_uint32_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt64Value > repeated_uint64_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FloatValue > repeated_float_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::DoubleValue > repeated_double_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::StringValue > repeated_string_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BytesValue > repeated_bytes_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Duration > repeated_duration_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Timestamp > repeated_timestamp_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FieldMask > repeated_fieldmask_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any > repeated_any_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Value > repeated_value_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::ListValue > repeated_list_value_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Struct > repeated_struct_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_string_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_bytes_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_string_piece_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_cord_;
    ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message_;
    ::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message_;
    ::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message_;
    ::PROTOBUF_NAMESPACE_ID::BoolValue* optional_bool_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::Int32Value* optional_int32_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::Int64Value* optional_int64_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::UInt32Value* optional_uint32_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* optional_uint64_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* optional_float_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* optional_double_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::StringValue* optional_string_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::BytesValue* optional_bytes_wrapper_;
    ::PROTOBUF_NAMESPACE_ID::Duration* optional_duration_;
    ::PROTOBUF_NAMESPACE_ID::Timestamp* optional_timestamp_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* optional_field_mask_;
    ::PROTOBUF_NAMESPACE_ID::Struct* optional_struct_;
    ::PROTOBUF_NAMESPACE_ID::Any* optional_any_;
    ::PROTOBUF_NAMESPACE_ID::Value* optional_value_;
    int64_t optional_int64_;
    int32_t optional_int32_;
    uint32_t optional_uint32_;
    uint64_t optional_uint64_;
    int64_t optional_sint64_;
    int32_t optional_sint32_;
    uint32_t optional_fixed32_;
    uint64_t optional_fixed64_;
    int64_t optional_sfixed64_;
    int32_t optional_sfixed32_;
    float optional_float_;
    double optional_double_;
    bool optional_bool_;
    int optional_nested_enum_;
    int optional_foreign_enum_;
    int optional_aliased_enum_;
    int optional_null_value_;
    int32_t fieldname1_;
    int32_t field_name2_;
    int32_t _field_name3_;
    int32_t field__name4__;
    int32_t field0name5_;
    int32_t field_0_name6_;
    int32_t fieldname7_;
    int32_t fieldname8_;
    int32_t field_name9_;
    int32_t field_name10_;
    int32_t field_name11_;
    int32_t field_name12_;
    int32_t __field_name13_;
    int32_t __field_name14_;
    int32_t field__name15_;
    int32_t field__name16_;
    int32_t field_name17___;
    int32_t field_name18___;
    union OneofFieldUnion {
      constexpr OneofFieldUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      uint32_t oneof_uint32_;
      ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oneof_string_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oneof_bytes_;
      bool oneof_bool_;
      uint64_t oneof_uint64_;
      float oneof_float_;
      double oneof_double_;
      int oneof_enum_;
      int oneof_null_value_;
    } oneof_field_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};
// -------------------------------------------------------------------

class ForeignMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_test_messages.proto3.ForeignMessage) */ {
 public:
  inline ForeignMessage() : ForeignMessage(nullptr) {}
  ~ForeignMessage() override;
  explicit PROTOBUF_CONSTEXPR ForeignMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ForeignMessage(const ForeignMessage& from);
  ForeignMessage(ForeignMessage&& from) noexcept
    : ForeignMessage() {
    *this = ::std::move(from);
  }

  inline ForeignMessage& operator=(const ForeignMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForeignMessage& operator=(ForeignMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForeignMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForeignMessage* internal_default_instance() {
    return reinterpret_cast<const ForeignMessage*>(
               &_ForeignMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ForeignMessage& a, ForeignMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ForeignMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForeignMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForeignMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ForeignMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ForeignMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ForeignMessage& from) {
    ForeignMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForeignMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test_messages.proto3.ForeignMessage";
  }
  protected:
  explicit ForeignMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCFieldNumber = 1,
  };
  // int32 c = 1;
  void clear_c();
  int32_t c() const;
  void set_c(int32_t value);
  private:
  int32_t _internal_c() const;
  void _internal_set_c(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_test_messages.proto3.ForeignMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t c_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};
// -------------------------------------------------------------------

class NullHypothesisProto3 final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_test_messages.proto3.NullHypothesisProto3) */ {
 public:
  inline NullHypothesisProto3() : NullHypothesisProto3(nullptr) {}
  explicit PROTOBUF_CONSTEXPR NullHypothesisProto3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullHypothesisProto3(const NullHypothesisProto3& from);
  NullHypothesisProto3(NullHypothesisProto3&& from) noexcept
    : NullHypothesisProto3() {
    *this = ::std::move(from);
  }

  inline NullHypothesisProto3& operator=(const NullHypothesisProto3& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullHypothesisProto3& operator=(NullHypothesisProto3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullHypothesisProto3& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullHypothesisProto3* internal_default_instance() {
    return reinterpret_cast<const NullHypothesisProto3*>(
               &_NullHypothesisProto3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(NullHypothesisProto3& a, NullHypothesisProto3& b) {
    a.Swap(&b);
  }
  inline void Swap(NullHypothesisProto3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullHypothesisProto3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullHypothesisProto3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullHypothesisProto3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullHypothesisProto3& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullHypothesisProto3& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test_messages.proto3.NullHypothesisProto3";
  }
  protected:
  explicit NullHypothesisProto3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_test_messages.proto3.NullHypothesisProto3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};
// -------------------------------------------------------------------

class EnumOnlyProto3 final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf_test_messages.proto3.EnumOnlyProto3) */ {
 public:
  inline EnumOnlyProto3() : EnumOnlyProto3(nullptr) {}
  explicit PROTOBUF_CONSTEXPR EnumOnlyProto3(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnumOnlyProto3(const EnumOnlyProto3& from);
  EnumOnlyProto3(EnumOnlyProto3&& from) noexcept
    : EnumOnlyProto3() {
    *this = ::std::move(from);
  }

  inline EnumOnlyProto3& operator=(const EnumOnlyProto3& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnumOnlyProto3& operator=(EnumOnlyProto3&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnumOnlyProto3& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnumOnlyProto3* internal_default_instance() {
    return reinterpret_cast<const EnumOnlyProto3*>(
               &_EnumOnlyProto3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(EnumOnlyProto3& a, EnumOnlyProto3& b) {
    a.Swap(&b);
  }
  inline void Swap(EnumOnlyProto3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnumOnlyProto3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnumOnlyProto3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnumOnlyProto3>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EnumOnlyProto3& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EnumOnlyProto3& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_test_messages.proto3.EnumOnlyProto3";
  }
  protected:
  explicit EnumOnlyProto3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EnumOnlyProto3_Bool Bool;
  static constexpr Bool kFalse =
    EnumOnlyProto3_Bool_kFalse;
  static constexpr Bool kTrue =
    EnumOnlyProto3_Bool_kTrue;
  static inline bool Bool_IsValid(int value) {
    return EnumOnlyProto3_Bool_IsValid(value);
  }
  static constexpr Bool Bool_MIN =
    EnumOnlyProto3_Bool_Bool_MIN;
  static constexpr Bool Bool_MAX =
    EnumOnlyProto3_Bool_Bool_MAX;
  static constexpr int Bool_ARRAYSIZE =
    EnumOnlyProto3_Bool_Bool_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Bool_descriptor() {
    return EnumOnlyProto3_Bool_descriptor();
  }
  template<typename T>
  static inline const std::string& Bool_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Bool>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Bool_Name.");
    return EnumOnlyProto3_Bool_Name(enum_t_value);
  }
  static inline bool Bool_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Bool* value) {
    return EnumOnlyProto3_Bool_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_test_messages.proto3.EnumOnlyProto3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TestAllTypesProto3_NestedMessage

// int32 a = 1;
inline void TestAllTypesProto3_NestedMessage::clear_a() {
  _impl_.a_ = 0;
}
inline int32_t TestAllTypesProto3_NestedMessage::_internal_a() const {
  return _impl_.a_;
}
inline int32_t TestAllTypesProto3_NestedMessage::a() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.a)
  return _internal_a();
}
inline void TestAllTypesProto3_NestedMessage::_internal_set_a(int32_t value) {
  
  _impl_.a_ = value;
}
inline void TestAllTypesProto3_NestedMessage::set_a(int32_t value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.a)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3 corecursive = 2;
inline bool TestAllTypesProto3_NestedMessage::_internal_has_corecursive() const {
  return this != internal_default_instance() && _impl_.corecursive_ != nullptr;
}
inline bool TestAllTypesProto3_NestedMessage::has_corecursive() const {
  return _internal_has_corecursive();
}
inline void TestAllTypesProto3_NestedMessage::clear_corecursive() {
  if (GetArenaForAllocation() == nullptr && _impl_.corecursive_ != nullptr) {
    delete _impl_.corecursive_;
  }
  _impl_.corecursive_ = nullptr;
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3& TestAllTypesProto3_NestedMessage::_internal_corecursive() const {
  const ::protobuf_test_messages::proto3::TestAllTypesProto3* p = _impl_.corecursive_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_test_messages::proto3::TestAllTypesProto3&>(
      ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_);
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3& TestAllTypesProto3_NestedMessage::corecursive() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
  return _internal_corecursive();
}
inline void TestAllTypesProto3_NestedMessage::unsafe_arena_set_allocated_corecursive(
    ::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.corecursive_);
  }
  _impl_.corecursive_ = corecursive;
  if (corecursive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3_NestedMessage::release_corecursive() {
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3* temp = _impl_.corecursive_;
  _impl_.corecursive_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3_NestedMessage::unsafe_arena_release_corecursive() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3* temp = _impl_.corecursive_;
  _impl_.corecursive_ = nullptr;
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3_NestedMessage::_internal_mutable_corecursive() {
  
  if (_impl_.corecursive_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3>(GetArenaForAllocation());
    _impl_.corecursive_ = p;
  }
  return _impl_.corecursive_;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3_NestedMessage::mutable_corecursive() {
  ::protobuf_test_messages::proto3::TestAllTypesProto3* _msg = _internal_mutable_corecursive();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
  return _msg;
}
inline void TestAllTypesProto3_NestedMessage::set_allocated_corecursive(::protobuf_test_messages::proto3::TestAllTypesProto3* corecursive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.corecursive_;
  }
  if (corecursive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(corecursive);
    if (message_arena != submessage_arena) {
      corecursive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, corecursive, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.corecursive_ = corecursive;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage.corecursive)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestAllTypesProto3

// int32 optional_int32 = 1;
inline void TestAllTypesProto3::clear_optional_int32() {
  _impl_.optional_int32_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_optional_int32() const {
  return _impl_.optional_int32_;
}
inline int32_t TestAllTypesProto3::optional_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32)
  return _internal_optional_int32();
}
inline void TestAllTypesProto3::_internal_set_optional_int32(int32_t value) {
  
  _impl_.optional_int32_ = value;
}
inline void TestAllTypesProto3::set_optional_int32(int32_t value) {
  _internal_set_optional_int32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32)
}

// int64 optional_int64 = 2;
inline void TestAllTypesProto3::clear_optional_int64() {
  _impl_.optional_int64_ = int64_t{0};
}
inline int64_t TestAllTypesProto3::_internal_optional_int64() const {
  return _impl_.optional_int64_;
}
inline int64_t TestAllTypesProto3::optional_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64)
  return _internal_optional_int64();
}
inline void TestAllTypesProto3::_internal_set_optional_int64(int64_t value) {
  
  _impl_.optional_int64_ = value;
}
inline void TestAllTypesProto3::set_optional_int64(int64_t value) {
  _internal_set_optional_int64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64)
}

// uint32 optional_uint32 = 3;
inline void TestAllTypesProto3::clear_optional_uint32() {
  _impl_.optional_uint32_ = 0u;
}
inline uint32_t TestAllTypesProto3::_internal_optional_uint32() const {
  return _impl_.optional_uint32_;
}
inline uint32_t TestAllTypesProto3::optional_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32)
  return _internal_optional_uint32();
}
inline void TestAllTypesProto3::_internal_set_optional_uint32(uint32_t value) {
  
  _impl_.optional_uint32_ = value;
}
inline void TestAllTypesProto3::set_optional_uint32(uint32_t value) {
  _internal_set_optional_uint32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32)
}

// uint64 optional_uint64 = 4;
inline void TestAllTypesProto3::clear_optional_uint64() {
  _impl_.optional_uint64_ = uint64_t{0u};
}
inline uint64_t TestAllTypesProto3::_internal_optional_uint64() const {
  return _impl_.optional_uint64_;
}
inline uint64_t TestAllTypesProto3::optional_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64)
  return _internal_optional_uint64();
}
inline void TestAllTypesProto3::_internal_set_optional_uint64(uint64_t value) {
  
  _impl_.optional_uint64_ = value;
}
inline void TestAllTypesProto3::set_optional_uint64(uint64_t value) {
  _internal_set_optional_uint64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64)
}

// sint32 optional_sint32 = 5;
inline void TestAllTypesProto3::clear_optional_sint32() {
  _impl_.optional_sint32_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_optional_sint32() const {
  return _impl_.optional_sint32_;
}
inline int32_t TestAllTypesProto3::optional_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sint32)
  return _internal_optional_sint32();
}
inline void TestAllTypesProto3::_internal_set_optional_sint32(int32_t value) {
  
  _impl_.optional_sint32_ = value;
}
inline void TestAllTypesProto3::set_optional_sint32(int32_t value) {
  _internal_set_optional_sint32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sint32)
}

// sint64 optional_sint64 = 6;
inline void TestAllTypesProto3::clear_optional_sint64() {
  _impl_.optional_sint64_ = int64_t{0};
}
inline int64_t TestAllTypesProto3::_internal_optional_sint64() const {
  return _impl_.optional_sint64_;
}
inline int64_t TestAllTypesProto3::optional_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sint64)
  return _internal_optional_sint64();
}
inline void TestAllTypesProto3::_internal_set_optional_sint64(int64_t value) {
  
  _impl_.optional_sint64_ = value;
}
inline void TestAllTypesProto3::set_optional_sint64(int64_t value) {
  _internal_set_optional_sint64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sint64)
}

// fixed32 optional_fixed32 = 7;
inline void TestAllTypesProto3::clear_optional_fixed32() {
  _impl_.optional_fixed32_ = 0u;
}
inline uint32_t TestAllTypesProto3::_internal_optional_fixed32() const {
  return _impl_.optional_fixed32_;
}
inline uint32_t TestAllTypesProto3::optional_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_fixed32)
  return _internal_optional_fixed32();
}
inline void TestAllTypesProto3::_internal_set_optional_fixed32(uint32_t value) {
  
  _impl_.optional_fixed32_ = value;
}
inline void TestAllTypesProto3::set_optional_fixed32(uint32_t value) {
  _internal_set_optional_fixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_fixed32)
}

// fixed64 optional_fixed64 = 8;
inline void TestAllTypesProto3::clear_optional_fixed64() {
  _impl_.optional_fixed64_ = uint64_t{0u};
}
inline uint64_t TestAllTypesProto3::_internal_optional_fixed64() const {
  return _impl_.optional_fixed64_;
}
inline uint64_t TestAllTypesProto3::optional_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_fixed64)
  return _internal_optional_fixed64();
}
inline void TestAllTypesProto3::_internal_set_optional_fixed64(uint64_t value) {
  
  _impl_.optional_fixed64_ = value;
}
inline void TestAllTypesProto3::set_optional_fixed64(uint64_t value) {
  _internal_set_optional_fixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_fixed64)
}

// sfixed32 optional_sfixed32 = 9;
inline void TestAllTypesProto3::clear_optional_sfixed32() {
  _impl_.optional_sfixed32_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_optional_sfixed32() const {
  return _impl_.optional_sfixed32_;
}
inline int32_t TestAllTypesProto3::optional_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sfixed32)
  return _internal_optional_sfixed32();
}
inline void TestAllTypesProto3::_internal_set_optional_sfixed32(int32_t value) {
  
  _impl_.optional_sfixed32_ = value;
}
inline void TestAllTypesProto3::set_optional_sfixed32(int32_t value) {
  _internal_set_optional_sfixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sfixed32)
}

// sfixed64 optional_sfixed64 = 10;
inline void TestAllTypesProto3::clear_optional_sfixed64() {
  _impl_.optional_sfixed64_ = int64_t{0};
}
inline int64_t TestAllTypesProto3::_internal_optional_sfixed64() const {
  return _impl_.optional_sfixed64_;
}
inline int64_t TestAllTypesProto3::optional_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sfixed64)
  return _internal_optional_sfixed64();
}
inline void TestAllTypesProto3::_internal_set_optional_sfixed64(int64_t value) {
  
  _impl_.optional_sfixed64_ = value;
}
inline void TestAllTypesProto3::set_optional_sfixed64(int64_t value) {
  _internal_set_optional_sfixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_sfixed64)
}

// float optional_float = 11;
inline void TestAllTypesProto3::clear_optional_float() {
  _impl_.optional_float_ = 0;
}
inline float TestAllTypesProto3::_internal_optional_float() const {
  return _impl_.optional_float_;
}
inline float TestAllTypesProto3::optional_float() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float)
  return _internal_optional_float();
}
inline void TestAllTypesProto3::_internal_set_optional_float(float value) {
  
  _impl_.optional_float_ = value;
}
inline void TestAllTypesProto3::set_optional_float(float value) {
  _internal_set_optional_float(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float)
}

// double optional_double = 12;
inline void TestAllTypesProto3::clear_optional_double() {
  _impl_.optional_double_ = 0;
}
inline double TestAllTypesProto3::_internal_optional_double() const {
  return _impl_.optional_double_;
}
inline double TestAllTypesProto3::optional_double() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double)
  return _internal_optional_double();
}
inline void TestAllTypesProto3::_internal_set_optional_double(double value) {
  
  _impl_.optional_double_ = value;
}
inline void TestAllTypesProto3::set_optional_double(double value) {
  _internal_set_optional_double(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double)
}

// bool optional_bool = 13;
inline void TestAllTypesProto3::clear_optional_bool() {
  _impl_.optional_bool_ = false;
}
inline bool TestAllTypesProto3::_internal_optional_bool() const {
  return _impl_.optional_bool_;
}
inline bool TestAllTypesProto3::optional_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool)
  return _internal_optional_bool();
}
inline void TestAllTypesProto3::_internal_set_optional_bool(bool value) {
  
  _impl_.optional_bool_ = value;
}
inline void TestAllTypesProto3::set_optional_bool(bool value) {
  _internal_set_optional_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool)
}

// string optional_string = 14;
inline void TestAllTypesProto3::clear_optional_string() {
  _impl_.optional_string_.ClearToEmpty();
}
inline const std::string& TestAllTypesProto3::optional_string() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string)
  return _internal_optional_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TestAllTypesProto3::set_optional_string(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optional_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string)
}
inline std::string* TestAllTypesProto3::mutable_optional_string() {
  std::string* _s = _internal_mutable_optional_string();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_optional_string() const {
  return _impl_.optional_string_.Get();
}
inline void TestAllTypesProto3::_internal_set_optional_string(const std::string& value) {
  
  _impl_.optional_string_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_optional_string() {
  
  return _impl_.optional_string_.Mutable(GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_optional_string() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string)
  return _impl_.optional_string_.Release();
}
inline void TestAllTypesProto3::set_allocated_optional_string(std::string* optional_string) {
  if (optional_string != nullptr) {
    
  } else {
    
  }
  _impl_.optional_string_.SetAllocated(optional_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optional_string_.IsDefault()) {
    _impl_.optional_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string)
}

// bytes optional_bytes = 15;
inline void TestAllTypesProto3::clear_optional_bytes() {
  _impl_.optional_bytes_.ClearToEmpty();
}
inline const std::string& TestAllTypesProto3::optional_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes)
  return _internal_optional_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TestAllTypesProto3::set_optional_bytes(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optional_bytes_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes)
}
inline std::string* TestAllTypesProto3::mutable_optional_bytes() {
  std::string* _s = _internal_mutable_optional_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_optional_bytes() const {
  return _impl_.optional_bytes_.Get();
}
inline void TestAllTypesProto3::_internal_set_optional_bytes(const std::string& value) {
  
  _impl_.optional_bytes_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_optional_bytes() {
  
  return _impl_.optional_bytes_.Mutable(GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_optional_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes)
  return _impl_.optional_bytes_.Release();
}
inline void TestAllTypesProto3::set_allocated_optional_bytes(std::string* optional_bytes) {
  if (optional_bytes != nullptr) {
    
  } else {
    
  }
  _impl_.optional_bytes_.SetAllocated(optional_bytes, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optional_bytes_.IsDefault()) {
    _impl_.optional_bytes_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage optional_nested_message = 18;
inline bool TestAllTypesProto3::_internal_has_optional_nested_message() const {
  return this != internal_default_instance() && _impl_.optional_nested_message_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_nested_message() const {
  return _internal_has_optional_nested_message();
}
inline void TestAllTypesProto3::clear_optional_nested_message() {
  if (GetArenaForAllocation() == nullptr && _impl_.optional_nested_message_ != nullptr) {
    delete _impl_.optional_nested_message_;
  }
  _impl_.optional_nested_message_ = nullptr;
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::_internal_optional_nested_message() const {
  const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* p = _impl_.optional_nested_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage&>(
      ::protobuf_test_messages::proto3::_TestAllTypesProto3_NestedMessage_default_instance_);
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::optional_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
  return _internal_optional_nested_message();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_nested_message(
    ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_nested_message_);
  }
  _impl_.optional_nested_message_ = optional_nested_message;
  if (optional_nested_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::release_optional_nested_message() {
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* temp = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::unsafe_arena_release_optional_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* temp = _impl_.optional_nested_message_;
  _impl_.optional_nested_message_ = nullptr;
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::_internal_mutable_optional_nested_message() {
  
  if (_impl_.optional_nested_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage>(GetArenaForAllocation());
    _impl_.optional_nested_message_ = p;
  }
  return _impl_.optional_nested_message_;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::mutable_optional_nested_message() {
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _msg = _internal_mutable_optional_nested_message();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_nested_message(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* optional_nested_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.optional_nested_message_;
  }
  if (optional_nested_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(optional_nested_message);
    if (message_arena != submessage_arena) {
      optional_nested_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_nested_message, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_nested_message_ = optional_nested_message;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_message)
}

// .protobuf_test_messages.proto3.ForeignMessage optional_foreign_message = 19;
inline bool TestAllTypesProto3::_internal_has_optional_foreign_message() const {
  return this != internal_default_instance() && _impl_.optional_foreign_message_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_foreign_message() const {
  return _internal_has_optional_foreign_message();
}
inline void TestAllTypesProto3::clear_optional_foreign_message() {
  if (GetArenaForAllocation() == nullptr && _impl_.optional_foreign_message_ != nullptr) {
    delete _impl_.optional_foreign_message_;
  }
  _impl_.optional_foreign_message_ = nullptr;
}
inline const ::protobuf_test_messages::proto3::ForeignMessage& TestAllTypesProto3::_internal_optional_foreign_message() const {
  const ::protobuf_test_messages::proto3::ForeignMessage* p = _impl_.optional_foreign_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_test_messages::proto3::ForeignMessage&>(
      ::protobuf_test_messages::proto3::_ForeignMessage_default_instance_);
}
inline const ::protobuf_test_messages::proto3::ForeignMessage& TestAllTypesProto3::optional_foreign_message() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
  return _internal_optional_foreign_message();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_foreign_message(
    ::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_foreign_message_);
  }
  _impl_.optional_foreign_message_ = optional_foreign_message;
  if (optional_foreign_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::release_optional_foreign_message() {
  
  ::protobuf_test_messages::proto3::ForeignMessage* temp = _impl_.optional_foreign_message_;
  _impl_.optional_foreign_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::unsafe_arena_release_optional_foreign_message() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
  
  ::protobuf_test_messages::proto3::ForeignMessage* temp = _impl_.optional_foreign_message_;
  _impl_.optional_foreign_message_ = nullptr;
  return temp;
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::_internal_mutable_optional_foreign_message() {
  
  if (_impl_.optional_foreign_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_test_messages::proto3::ForeignMessage>(GetArenaForAllocation());
    _impl_.optional_foreign_message_ = p;
  }
  return _impl_.optional_foreign_message_;
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::mutable_optional_foreign_message() {
  ::protobuf_test_messages::proto3::ForeignMessage* _msg = _internal_mutable_optional_foreign_message();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_foreign_message(::protobuf_test_messages::proto3::ForeignMessage* optional_foreign_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.optional_foreign_message_;
  }
  if (optional_foreign_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(optional_foreign_message);
    if (message_arena != submessage_arena) {
      optional_foreign_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_foreign_message, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_foreign_message_ = optional_foreign_message;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_message)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum optional_nested_enum = 21;
inline void TestAllTypesProto3::clear_optional_nested_enum() {
  _impl_.optional_nested_enum_ = 0;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::_internal_optional_nested_enum() const {
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(_impl_.optional_nested_enum_);
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::optional_nested_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_enum)
  return _internal_optional_nested_enum();
}
inline void TestAllTypesProto3::_internal_set_optional_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  
  _impl_.optional_nested_enum_ = value;
}
inline void TestAllTypesProto3::set_optional_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _internal_set_optional_nested_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_nested_enum)
}

// .protobuf_test_messages.proto3.ForeignEnum optional_foreign_enum = 22;
inline void TestAllTypesProto3::clear_optional_foreign_enum() {
  _impl_.optional_foreign_enum_ = 0;
}
inline ::protobuf_test_messages::proto3::ForeignEnum TestAllTypesProto3::_internal_optional_foreign_enum() const {
  return static_cast< ::protobuf_test_messages::proto3::ForeignEnum >(_impl_.optional_foreign_enum_);
}
inline ::protobuf_test_messages::proto3::ForeignEnum TestAllTypesProto3::optional_foreign_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_enum)
  return _internal_optional_foreign_enum();
}
inline void TestAllTypesProto3::_internal_set_optional_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value) {
  
  _impl_.optional_foreign_enum_ = value;
}
inline void TestAllTypesProto3::set_optional_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value) {
  _internal_set_optional_foreign_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_foreign_enum)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3.AliasedEnum optional_aliased_enum = 23;
inline void TestAllTypesProto3::clear_optional_aliased_enum() {
  _impl_.optional_aliased_enum_ = 0;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum TestAllTypesProto3::_internal_optional_aliased_enum() const {
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum >(_impl_.optional_aliased_enum_);
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum TestAllTypesProto3::optional_aliased_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_aliased_enum)
  return _internal_optional_aliased_enum();
}
inline void TestAllTypesProto3::_internal_set_optional_aliased_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum value) {
  
  _impl_.optional_aliased_enum_ = value;
}
inline void TestAllTypesProto3::set_optional_aliased_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum value) {
  _internal_set_optional_aliased_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_aliased_enum)
}

// string optional_string_piece = 24 [ctype = STRING_PIECE];
inline void TestAllTypesProto3::clear_optional_string_piece() {
  _impl_.optional_string_piece_.ClearToEmpty();
}
inline const std::string& TestAllTypesProto3::optional_string_piece() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece)
  return _internal_optional_string_piece();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TestAllTypesProto3::set_optional_string_piece(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optional_string_piece_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece)
}
inline std::string* TestAllTypesProto3::mutable_optional_string_piece() {
  std::string* _s = _internal_mutable_optional_string_piece();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_optional_string_piece() const {
  return _impl_.optional_string_piece_.Get();
}
inline void TestAllTypesProto3::_internal_set_optional_string_piece(const std::string& value) {
  
  _impl_.optional_string_piece_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_optional_string_piece() {
  
  return _impl_.optional_string_piece_.Mutable(GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_optional_string_piece() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece)
  return _impl_.optional_string_piece_.Release();
}
inline void TestAllTypesProto3::set_allocated_optional_string_piece(std::string* optional_string_piece) {
  if (optional_string_piece != nullptr) {
    
  } else {
    
  }
  _impl_.optional_string_piece_.SetAllocated(optional_string_piece, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optional_string_piece_.IsDefault()) {
    _impl_.optional_string_piece_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_piece)
}

// string optional_cord = 25 [ctype = CORD];
inline void TestAllTypesProto3::clear_optional_cord() {
  _impl_.optional_cord_.ClearToEmpty();
}
inline const std::string& TestAllTypesProto3::optional_cord() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord)
  return _internal_optional_cord();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TestAllTypesProto3::set_optional_cord(ArgT0&& arg0, ArgT... args) {
 
 _impl_.optional_cord_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord)
}
inline std::string* TestAllTypesProto3::mutable_optional_cord() {
  std::string* _s = _internal_mutable_optional_cord();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_optional_cord() const {
  return _impl_.optional_cord_.Get();
}
inline void TestAllTypesProto3::_internal_set_optional_cord(const std::string& value) {
  
  _impl_.optional_cord_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_optional_cord() {
  
  return _impl_.optional_cord_.Mutable(GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_optional_cord() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord)
  return _impl_.optional_cord_.Release();
}
inline void TestAllTypesProto3::set_allocated_optional_cord(std::string* optional_cord) {
  if (optional_cord != nullptr) {
    
  } else {
    
  }
  _impl_.optional_cord_.SetAllocated(optional_cord, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.optional_cord_.IsDefault()) {
    _impl_.optional_cord_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_cord)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3 recursive_message = 27;
inline bool TestAllTypesProto3::_internal_has_recursive_message() const {
  return this != internal_default_instance() && _impl_.recursive_message_ != nullptr;
}
inline bool TestAllTypesProto3::has_recursive_message() const {
  return _internal_has_recursive_message();
}
inline void TestAllTypesProto3::clear_recursive_message() {
  if (GetArenaForAllocation() == nullptr && _impl_.recursive_message_ != nullptr) {
    delete _impl_.recursive_message_;
  }
  _impl_.recursive_message_ = nullptr;
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3& TestAllTypesProto3::_internal_recursive_message() const {
  const ::protobuf_test_messages::proto3::TestAllTypesProto3* p = _impl_.recursive_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_test_messages::proto3::TestAllTypesProto3&>(
      ::protobuf_test_messages::proto3::_TestAllTypesProto3_default_instance_);
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3& TestAllTypesProto3::recursive_message() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
  return _internal_recursive_message();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_recursive_message(
    ::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.recursive_message_);
  }
  _impl_.recursive_message_ = recursive_message;
  if (recursive_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3::release_recursive_message() {
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3* temp = _impl_.recursive_message_;
  _impl_.recursive_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3::unsafe_arena_release_recursive_message() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
  
  ::protobuf_test_messages::proto3::TestAllTypesProto3* temp = _impl_.recursive_message_;
  _impl_.recursive_message_ = nullptr;
  return temp;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3::_internal_mutable_recursive_message() {
  
  if (_impl_.recursive_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_test_messages::proto3::TestAllTypesProto3>(GetArenaForAllocation());
    _impl_.recursive_message_ = p;
  }
  return _impl_.recursive_message_;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3* TestAllTypesProto3::mutable_recursive_message() {
  ::protobuf_test_messages::proto3::TestAllTypesProto3* _msg = _internal_mutable_recursive_message();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_recursive_message(::protobuf_test_messages::proto3::TestAllTypesProto3* recursive_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.recursive_message_;
  }
  if (recursive_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(recursive_message);
    if (message_arena != submessage_arena) {
      recursive_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recursive_message, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.recursive_message_ = recursive_message;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.recursive_message)
}

// repeated int32 repeated_int32 = 31;
inline int TestAllTypesProto3::_internal_repeated_int32_size() const {
  return _impl_.repeated_int32_.size();
}
inline int TestAllTypesProto3::repeated_int32_size() const {
  return _internal_repeated_int32_size();
}
inline void TestAllTypesProto3::clear_repeated_int32() {
  _impl_.repeated_int32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_repeated_int32(int index) const {
  return _impl_.repeated_int32_.Get(index);
}
inline int32_t TestAllTypesProto3::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32)
  return _internal_repeated_int32(index);
}
inline void TestAllTypesProto3::set_repeated_int32(int index, int32_t value) {
  _impl_.repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32)
}
inline void TestAllTypesProto3::_internal_add_repeated_int32(int32_t value) {
  _impl_.repeated_int32_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_int32(int32_t value) {
  _internal_add_repeated_int32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_repeated_int32() const {
  return _impl_.repeated_int32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32)
  return _internal_repeated_int32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_repeated_int32() {
  return &_impl_.repeated_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32)
  return _internal_mutable_repeated_int32();
}

// repeated int64 repeated_int64 = 32;
inline int TestAllTypesProto3::_internal_repeated_int64_size() const {
  return _impl_.repeated_int64_.size();
}
inline int TestAllTypesProto3::repeated_int64_size() const {
  return _internal_repeated_int64_size();
}
inline void TestAllTypesProto3::clear_repeated_int64() {
  _impl_.repeated_int64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_repeated_int64(int index) const {
  return _impl_.repeated_int64_.Get(index);
}
inline int64_t TestAllTypesProto3::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64)
  return _internal_repeated_int64(index);
}
inline void TestAllTypesProto3::set_repeated_int64(int index, int64_t value) {
  _impl_.repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64)
}
inline void TestAllTypesProto3::_internal_add_repeated_int64(int64_t value) {
  _impl_.repeated_int64_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_int64(int64_t value) {
  _internal_add_repeated_int64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_repeated_int64() const {
  return _impl_.repeated_int64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::repeated_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64)
  return _internal_repeated_int64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_repeated_int64() {
  return &_impl_.repeated_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64)
  return _internal_mutable_repeated_int64();
}

// repeated uint32 repeated_uint32 = 33;
inline int TestAllTypesProto3::_internal_repeated_uint32_size() const {
  return _impl_.repeated_uint32_.size();
}
inline int TestAllTypesProto3::repeated_uint32_size() const {
  return _internal_repeated_uint32_size();
}
inline void TestAllTypesProto3::clear_repeated_uint32() {
  _impl_.repeated_uint32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_repeated_uint32(int index) const {
  return _impl_.repeated_uint32_.Get(index);
}
inline uint32_t TestAllTypesProto3::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32)
  return _internal_repeated_uint32(index);
}
inline void TestAllTypesProto3::set_repeated_uint32(int index, uint32_t value) {
  _impl_.repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32)
}
inline void TestAllTypesProto3::_internal_add_repeated_uint32(uint32_t value) {
  _impl_.repeated_uint32_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_uint32(uint32_t value) {
  _internal_add_repeated_uint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_repeated_uint32() const {
  return _impl_.repeated_uint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32)
  return _internal_repeated_uint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_repeated_uint32() {
  return &_impl_.repeated_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32)
  return _internal_mutable_repeated_uint32();
}

// repeated uint64 repeated_uint64 = 34;
inline int TestAllTypesProto3::_internal_repeated_uint64_size() const {
  return _impl_.repeated_uint64_.size();
}
inline int TestAllTypesProto3::repeated_uint64_size() const {
  return _internal_repeated_uint64_size();
}
inline void TestAllTypesProto3::clear_repeated_uint64() {
  _impl_.repeated_uint64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_repeated_uint64(int index) const {
  return _impl_.repeated_uint64_.Get(index);
}
inline uint64_t TestAllTypesProto3::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64)
  return _internal_repeated_uint64(index);
}
inline void TestAllTypesProto3::set_repeated_uint64(int index, uint64_t value) {
  _impl_.repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64)
}
inline void TestAllTypesProto3::_internal_add_repeated_uint64(uint64_t value) {
  _impl_.repeated_uint64_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_uint64(uint64_t value) {
  _internal_add_repeated_uint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_repeated_uint64() const {
  return _impl_.repeated_uint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64)
  return _internal_repeated_uint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_repeated_uint64() {
  return &_impl_.repeated_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64)
  return _internal_mutable_repeated_uint64();
}

// repeated sint32 repeated_sint32 = 35;
inline int TestAllTypesProto3::_internal_repeated_sint32_size() const {
  return _impl_.repeated_sint32_.size();
}
inline int TestAllTypesProto3::repeated_sint32_size() const {
  return _internal_repeated_sint32_size();
}
inline void TestAllTypesProto3::clear_repeated_sint32() {
  _impl_.repeated_sint32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_repeated_sint32(int index) const {
  return _impl_.repeated_sint32_.Get(index);
}
inline int32_t TestAllTypesProto3::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint32)
  return _internal_repeated_sint32(index);
}
inline void TestAllTypesProto3::set_repeated_sint32(int index, int32_t value) {
  _impl_.repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint32)
}
inline void TestAllTypesProto3::_internal_add_repeated_sint32(int32_t value) {
  _impl_.repeated_sint32_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_sint32(int32_t value) {
  _internal_add_repeated_sint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_repeated_sint32() const {
  return _impl_.repeated_sint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint32)
  return _internal_repeated_sint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_repeated_sint32() {
  return &_impl_.repeated_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint32)
  return _internal_mutable_repeated_sint32();
}

// repeated sint64 repeated_sint64 = 36;
inline int TestAllTypesProto3::_internal_repeated_sint64_size() const {
  return _impl_.repeated_sint64_.size();
}
inline int TestAllTypesProto3::repeated_sint64_size() const {
  return _internal_repeated_sint64_size();
}
inline void TestAllTypesProto3::clear_repeated_sint64() {
  _impl_.repeated_sint64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_repeated_sint64(int index) const {
  return _impl_.repeated_sint64_.Get(index);
}
inline int64_t TestAllTypesProto3::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint64)
  return _internal_repeated_sint64(index);
}
inline void TestAllTypesProto3::set_repeated_sint64(int index, int64_t value) {
  _impl_.repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint64)
}
inline void TestAllTypesProto3::_internal_add_repeated_sint64(int64_t value) {
  _impl_.repeated_sint64_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_sint64(int64_t value) {
  _internal_add_repeated_sint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_repeated_sint64() const {
  return _impl_.repeated_sint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint64)
  return _internal_repeated_sint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_repeated_sint64() {
  return &_impl_.repeated_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sint64)
  return _internal_mutable_repeated_sint64();
}

// repeated fixed32 repeated_fixed32 = 37;
inline int TestAllTypesProto3::_internal_repeated_fixed32_size() const {
  return _impl_.repeated_fixed32_.size();
}
inline int TestAllTypesProto3::repeated_fixed32_size() const {
  return _internal_repeated_fixed32_size();
}
inline void TestAllTypesProto3::clear_repeated_fixed32() {
  _impl_.repeated_fixed32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_repeated_fixed32(int index) const {
  return _impl_.repeated_fixed32_.Get(index);
}
inline uint32_t TestAllTypesProto3::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed32)
  return _internal_repeated_fixed32(index);
}
inline void TestAllTypesProto3::set_repeated_fixed32(int index, uint32_t value) {
  _impl_.repeated_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed32)
}
inline void TestAllTypesProto3::_internal_add_repeated_fixed32(uint32_t value) {
  _impl_.repeated_fixed32_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_fixed32(uint32_t value) {
  _internal_add_repeated_fixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_repeated_fixed32() const {
  return _impl_.repeated_fixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::repeated_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed32)
  return _internal_repeated_fixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_repeated_fixed32() {
  return &_impl_.repeated_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_repeated_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed32)
  return _internal_mutable_repeated_fixed32();
}

// repeated fixed64 repeated_fixed64 = 38;
inline int TestAllTypesProto3::_internal_repeated_fixed64_size() const {
  return _impl_.repeated_fixed64_.size();
}
inline int TestAllTypesProto3::repeated_fixed64_size() const {
  return _internal_repeated_fixed64_size();
}
inline void TestAllTypesProto3::clear_repeated_fixed64() {
  _impl_.repeated_fixed64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_repeated_fixed64(int index) const {
  return _impl_.repeated_fixed64_.Get(index);
}
inline uint64_t TestAllTypesProto3::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed64)
  return _internal_repeated_fixed64(index);
}
inline void TestAllTypesProto3::set_repeated_fixed64(int index, uint64_t value) {
  _impl_.repeated_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed64)
}
inline void TestAllTypesProto3::_internal_add_repeated_fixed64(uint64_t value) {
  _impl_.repeated_fixed64_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_fixed64(uint64_t value) {
  _internal_add_repeated_fixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_repeated_fixed64() const {
  return _impl_.repeated_fixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::repeated_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed64)
  return _internal_repeated_fixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_repeated_fixed64() {
  return &_impl_.repeated_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_repeated_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fixed64)
  return _internal_mutable_repeated_fixed64();
}

// repeated sfixed32 repeated_sfixed32 = 39;
inline int TestAllTypesProto3::_internal_repeated_sfixed32_size() const {
  return _impl_.repeated_sfixed32_.size();
}
inline int TestAllTypesProto3::repeated_sfixed32_size() const {
  return _internal_repeated_sfixed32_size();
}
inline void TestAllTypesProto3::clear_repeated_sfixed32() {
  _impl_.repeated_sfixed32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_repeated_sfixed32(int index) const {
  return _impl_.repeated_sfixed32_.Get(index);
}
inline int32_t TestAllTypesProto3::repeated_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed32)
  return _internal_repeated_sfixed32(index);
}
inline void TestAllTypesProto3::set_repeated_sfixed32(int index, int32_t value) {
  _impl_.repeated_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed32)
}
inline void TestAllTypesProto3::_internal_add_repeated_sfixed32(int32_t value) {
  _impl_.repeated_sfixed32_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_sfixed32(int32_t value) {
  _internal_add_repeated_sfixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_repeated_sfixed32() const {
  return _impl_.repeated_sfixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::repeated_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed32)
  return _internal_repeated_sfixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_repeated_sfixed32() {
  return &_impl_.repeated_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_repeated_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed32)
  return _internal_mutable_repeated_sfixed32();
}

// repeated sfixed64 repeated_sfixed64 = 40;
inline int TestAllTypesProto3::_internal_repeated_sfixed64_size() const {
  return _impl_.repeated_sfixed64_.size();
}
inline int TestAllTypesProto3::repeated_sfixed64_size() const {
  return _internal_repeated_sfixed64_size();
}
inline void TestAllTypesProto3::clear_repeated_sfixed64() {
  _impl_.repeated_sfixed64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_repeated_sfixed64(int index) const {
  return _impl_.repeated_sfixed64_.Get(index);
}
inline int64_t TestAllTypesProto3::repeated_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed64)
  return _internal_repeated_sfixed64(index);
}
inline void TestAllTypesProto3::set_repeated_sfixed64(int index, int64_t value) {
  _impl_.repeated_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed64)
}
inline void TestAllTypesProto3::_internal_add_repeated_sfixed64(int64_t value) {
  _impl_.repeated_sfixed64_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_sfixed64(int64_t value) {
  _internal_add_repeated_sfixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_repeated_sfixed64() const {
  return _impl_.repeated_sfixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::repeated_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed64)
  return _internal_repeated_sfixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_repeated_sfixed64() {
  return &_impl_.repeated_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_repeated_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_sfixed64)
  return _internal_mutable_repeated_sfixed64();
}

// repeated float repeated_float = 41;
inline int TestAllTypesProto3::_internal_repeated_float_size() const {
  return _impl_.repeated_float_.size();
}
inline int TestAllTypesProto3::repeated_float_size() const {
  return _internal_repeated_float_size();
}
inline void TestAllTypesProto3::clear_repeated_float() {
  _impl_.repeated_float_.Clear();
}
inline float TestAllTypesProto3::_internal_repeated_float(int index) const {
  return _impl_.repeated_float_.Get(index);
}
inline float TestAllTypesProto3::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float)
  return _internal_repeated_float(index);
}
inline void TestAllTypesProto3::set_repeated_float(int index, float value) {
  _impl_.repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float)
}
inline void TestAllTypesProto3::_internal_add_repeated_float(float value) {
  _impl_.repeated_float_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_float(float value) {
  _internal_add_repeated_float(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::_internal_repeated_float() const {
  return _impl_.repeated_float_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::repeated_float() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float)
  return _internal_repeated_float();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::_internal_mutable_repeated_float() {
  return &_impl_.repeated_float_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float)
  return _internal_mutable_repeated_float();
}

// repeated double repeated_double = 42;
inline int TestAllTypesProto3::_internal_repeated_double_size() const {
  return _impl_.repeated_double_.size();
}
inline int TestAllTypesProto3::repeated_double_size() const {
  return _internal_repeated_double_size();
}
inline void TestAllTypesProto3::clear_repeated_double() {
  _impl_.repeated_double_.Clear();
}
inline double TestAllTypesProto3::_internal_repeated_double(int index) const {
  return _impl_.repeated_double_.Get(index);
}
inline double TestAllTypesProto3::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double)
  return _internal_repeated_double(index);
}
inline void TestAllTypesProto3::set_repeated_double(int index, double value) {
  _impl_.repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double)
}
inline void TestAllTypesProto3::_internal_add_repeated_double(double value) {
  _impl_.repeated_double_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_double(double value) {
  _internal_add_repeated_double(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::_internal_repeated_double() const {
  return _impl_.repeated_double_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::repeated_double() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double)
  return _internal_repeated_double();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::_internal_mutable_repeated_double() {
  return &_impl_.repeated_double_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double)
  return _internal_mutable_repeated_double();
}

// repeated bool repeated_bool = 43;
inline int TestAllTypesProto3::_internal_repeated_bool_size() const {
  return _impl_.repeated_bool_.size();
}
inline int TestAllTypesProto3::repeated_bool_size() const {
  return _internal_repeated_bool_size();
}
inline void TestAllTypesProto3::clear_repeated_bool() {
  _impl_.repeated_bool_.Clear();
}
inline bool TestAllTypesProto3::_internal_repeated_bool(int index) const {
  return _impl_.repeated_bool_.Get(index);
}
inline bool TestAllTypesProto3::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool)
  return _internal_repeated_bool(index);
}
inline void TestAllTypesProto3::set_repeated_bool(int index, bool value) {
  _impl_.repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool)
}
inline void TestAllTypesProto3::_internal_add_repeated_bool(bool value) {
  _impl_.repeated_bool_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_bool(bool value) {
  _internal_add_repeated_bool(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::_internal_repeated_bool() const {
  return _impl_.repeated_bool_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::repeated_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool)
  return _internal_repeated_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::_internal_mutable_repeated_bool() {
  return &_impl_.repeated_bool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool)
  return _internal_mutable_repeated_bool();
}

// repeated string repeated_string = 44;
inline int TestAllTypesProto3::_internal_repeated_string_size() const {
  return _impl_.repeated_string_.size();
}
inline int TestAllTypesProto3::repeated_string_size() const {
  return _internal_repeated_string_size();
}
inline void TestAllTypesProto3::clear_repeated_string() {
  _impl_.repeated_string_.Clear();
}
inline std::string* TestAllTypesProto3::add_repeated_string() {
  std::string* _s = _internal_add_repeated_string();
  // @@protoc_insertion_point(field_add_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_repeated_string(int index) const {
  return _impl_.repeated_string_.Get(index);
}
inline const std::string& TestAllTypesProto3::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
  return _internal_repeated_string(index);
}
inline std::string* TestAllTypesProto3::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
  return _impl_.repeated_string_.Mutable(index);
}
inline void TestAllTypesProto3::set_repeated_string(int index, const std::string& value) {
  _impl_.repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::set_repeated_string(int index, std::string&& value) {
  _impl_.repeated_string_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::set_repeated_string(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::set_repeated_string(int index, const char* value, size_t size) {
  _impl_.repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline std::string* TestAllTypesProto3::_internal_add_repeated_string() {
  return _impl_.repeated_string_.Add();
}
inline void TestAllTypesProto3::add_repeated_string(const std::string& value) {
  _impl_.repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::add_repeated_string(std::string&& value) {
  _impl_.repeated_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::add_repeated_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline void TestAllTypesProto3::add_repeated_string(const char* value, size_t size) {
  _impl_.repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestAllTypesProto3::repeated_string() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
  return _impl_.repeated_string_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestAllTypesProto3::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string)
  return &_impl_.repeated_string_;
}

// repeated bytes repeated_bytes = 45;
inline int TestAllTypesProto3::_internal_repeated_bytes_size() const {
  return _impl_.repeated_bytes_.size();
}
inline int TestAllTypesProto3::repeated_bytes_size() const {
  return _internal_repeated_bytes_size();
}
inline void TestAllTypesProto3::clear_repeated_bytes() {
  _impl_.repeated_bytes_.Clear();
}
inline std::string* TestAllTypesProto3::add_repeated_bytes() {
  std::string* _s = _internal_add_repeated_bytes();
  // @@protoc_insertion_point(field_add_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_repeated_bytes(int index) const {
  return _impl_.repeated_bytes_.Get(index);
}
inline const std::string& TestAllTypesProto3::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
  return _internal_repeated_bytes(index);
}
inline std::string* TestAllTypesProto3::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
  return _impl_.repeated_bytes_.Mutable(index);
}
inline void TestAllTypesProto3::set_repeated_bytes(int index, const std::string& value) {
  _impl_.repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::set_repeated_bytes(int index, std::string&& value) {
  _impl_.repeated_bytes_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::set_repeated_bytes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::set_repeated_bytes(int index, const void* value, size_t size) {
  _impl_.repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline std::string* TestAllTypesProto3::_internal_add_repeated_bytes() {
  return _impl_.repeated_bytes_.Add();
}
inline void TestAllTypesProto3::add_repeated_bytes(const std::string& value) {
  _impl_.repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::add_repeated_bytes(std::string&& value) {
  _impl_.repeated_bytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::add_repeated_bytes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline void TestAllTypesProto3::add_repeated_bytes(const void* value, size_t size) {
  _impl_.repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestAllTypesProto3::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
  return _impl_.repeated_bytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestAllTypesProto3::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes)
  return &_impl_.repeated_bytes_;
}

// repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage repeated_nested_message = 48;
inline int TestAllTypesProto3::_internal_repeated_nested_message_size() const {
  return _impl_.repeated_nested_message_.size();
}
inline int TestAllTypesProto3::repeated_nested_message_size() const {
  return _internal_repeated_nested_message_size();
}
inline void TestAllTypesProto3::clear_repeated_nested_message() {
  _impl_.repeated_nested_message_.Clear();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::mutable_repeated_nested_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_message)
  return _impl_.repeated_nested_message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
TestAllTypesProto3::mutable_repeated_nested_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_message)
  return &_impl_.repeated_nested_message_;
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::_internal_repeated_nested_message(int index) const {
  return _impl_.repeated_nested_message_.Get(index);
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::repeated_nested_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_message)
  return _internal_repeated_nested_message(index);
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::_internal_add_repeated_nested_message() {
  return _impl_.repeated_nested_message_.Add();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::add_repeated_nested_message() {
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _add = _internal_add_repeated_nested_message();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
TestAllTypesProto3::repeated_nested_message() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_message)
  return _impl_.repeated_nested_message_;
}

// repeated .protobuf_test_messages.proto3.ForeignMessage repeated_foreign_message = 49;
inline int TestAllTypesProto3::_internal_repeated_foreign_message_size() const {
  return _impl_.repeated_foreign_message_.size();
}
inline int TestAllTypesProto3::repeated_foreign_message_size() const {
  return _internal_repeated_foreign_message_size();
}
inline void TestAllTypesProto3::clear_repeated_foreign_message() {
  _impl_.repeated_foreign_message_.Clear();
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::mutable_repeated_foreign_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_message)
  return _impl_.repeated_foreign_message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::ForeignMessage >*
TestAllTypesProto3::mutable_repeated_foreign_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_message)
  return &_impl_.repeated_foreign_message_;
}
inline const ::protobuf_test_messages::proto3::ForeignMessage& TestAllTypesProto3::_internal_repeated_foreign_message(int index) const {
  return _impl_.repeated_foreign_message_.Get(index);
}
inline const ::protobuf_test_messages::proto3::ForeignMessage& TestAllTypesProto3::repeated_foreign_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_message)
  return _internal_repeated_foreign_message(index);
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::_internal_add_repeated_foreign_message() {
  return _impl_.repeated_foreign_message_.Add();
}
inline ::protobuf_test_messages::proto3::ForeignMessage* TestAllTypesProto3::add_repeated_foreign_message() {
  ::protobuf_test_messages::proto3::ForeignMessage* _add = _internal_add_repeated_foreign_message();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_test_messages::proto3::ForeignMessage >&
TestAllTypesProto3::repeated_foreign_message() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_message)
  return _impl_.repeated_foreign_message_;
}

// repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum repeated_nested_enum = 51;
inline int TestAllTypesProto3::_internal_repeated_nested_enum_size() const {
  return _impl_.repeated_nested_enum_.size();
}
inline int TestAllTypesProto3::repeated_nested_enum_size() const {
  return _internal_repeated_nested_enum_size();
}
inline void TestAllTypesProto3::clear_repeated_nested_enum() {
  _impl_.repeated_nested_enum_.Clear();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::_internal_repeated_nested_enum(int index) const {
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(_impl_.repeated_nested_enum_.Get(index));
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::repeated_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_enum)
  return _internal_repeated_nested_enum(index);
}
inline void TestAllTypesProto3::set_repeated_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.repeated_nested_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_enum)
}
inline void TestAllTypesProto3::_internal_add_repeated_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.repeated_nested_enum_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _internal_add_repeated_nested_enum(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_enum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
TestAllTypesProto3::repeated_nested_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_enum)
  return _impl_.repeated_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::_internal_mutable_repeated_nested_enum() {
  return &_impl_.repeated_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::mutable_repeated_nested_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_nested_enum)
  return _internal_mutable_repeated_nested_enum();
}

// repeated .protobuf_test_messages.proto3.ForeignEnum repeated_foreign_enum = 52;
inline int TestAllTypesProto3::_internal_repeated_foreign_enum_size() const {
  return _impl_.repeated_foreign_enum_.size();
}
inline int TestAllTypesProto3::repeated_foreign_enum_size() const {
  return _internal_repeated_foreign_enum_size();
}
inline void TestAllTypesProto3::clear_repeated_foreign_enum() {
  _impl_.repeated_foreign_enum_.Clear();
}
inline ::protobuf_test_messages::proto3::ForeignEnum TestAllTypesProto3::_internal_repeated_foreign_enum(int index) const {
  return static_cast< ::protobuf_test_messages::proto3::ForeignEnum >(_impl_.repeated_foreign_enum_.Get(index));
}
inline ::protobuf_test_messages::proto3::ForeignEnum TestAllTypesProto3::repeated_foreign_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_enum)
  return _internal_repeated_foreign_enum(index);
}
inline void TestAllTypesProto3::set_repeated_foreign_enum(int index, ::protobuf_test_messages::proto3::ForeignEnum value) {
  _impl_.repeated_foreign_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_enum)
}
inline void TestAllTypesProto3::_internal_add_repeated_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value) {
  _impl_.repeated_foreign_enum_.Add(value);
}
inline void TestAllTypesProto3::add_repeated_foreign_enum(::protobuf_test_messages::proto3::ForeignEnum value) {
  _internal_add_repeated_foreign_enum(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_enum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
TestAllTypesProto3::repeated_foreign_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_enum)
  return _impl_.repeated_foreign_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::_internal_mutable_repeated_foreign_enum() {
  return &_impl_.repeated_foreign_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::mutable_repeated_foreign_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_foreign_enum)
  return _internal_mutable_repeated_foreign_enum();
}

// repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
inline int TestAllTypesProto3::_internal_repeated_string_piece_size() const {
  return _impl_.repeated_string_piece_.size();
}
inline int TestAllTypesProto3::repeated_string_piece_size() const {
  return _internal_repeated_string_piece_size();
}
inline void TestAllTypesProto3::clear_repeated_string_piece() {
  _impl_.repeated_string_piece_.Clear();
}
inline std::string* TestAllTypesProto3::add_repeated_string_piece() {
  std::string* _s = _internal_add_repeated_string_piece();
  // @@protoc_insertion_point(field_add_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_repeated_string_piece(int index) const {
  return _impl_.repeated_string_piece_.Get(index);
}
inline const std::string& TestAllTypesProto3::repeated_string_piece(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
  return _internal_repeated_string_piece(index);
}
inline std::string* TestAllTypesProto3::mutable_repeated_string_piece(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
  return _impl_.repeated_string_piece_.Mutable(index);
}
inline void TestAllTypesProto3::set_repeated_string_piece(int index, const std::string& value) {
  _impl_.repeated_string_piece_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::set_repeated_string_piece(int index, std::string&& value) {
  _impl_.repeated_string_piece_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::set_repeated_string_piece(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_string_piece_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::set_repeated_string_piece(int index, const char* value, size_t size) {
  _impl_.repeated_string_piece_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline std::string* TestAllTypesProto3::_internal_add_repeated_string_piece() {
  return _impl_.repeated_string_piece_.Add();
}
inline void TestAllTypesProto3::add_repeated_string_piece(const std::string& value) {
  _impl_.repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::add_repeated_string_piece(std::string&& value) {
  _impl_.repeated_string_piece_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::add_repeated_string_piece(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_string_piece_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline void TestAllTypesProto3::add_repeated_string_piece(const char* value, size_t size) {
  _impl_.repeated_string_piece_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestAllTypesProto3::repeated_string_piece() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
  return _impl_.repeated_string_piece_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestAllTypesProto3::mutable_repeated_string_piece() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_piece)
  return &_impl_.repeated_string_piece_;
}

// repeated string repeated_cord = 55 [ctype = CORD];
inline int TestAllTypesProto3::_internal_repeated_cord_size() const {
  return _impl_.repeated_cord_.size();
}
inline int TestAllTypesProto3::repeated_cord_size() const {
  return _internal_repeated_cord_size();
}
inline void TestAllTypesProto3::clear_repeated_cord() {
  _impl_.repeated_cord_.Clear();
}
inline std::string* TestAllTypesProto3::add_repeated_cord() {
  std::string* _s = _internal_add_repeated_cord();
  // @@protoc_insertion_point(field_add_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_repeated_cord(int index) const {
  return _impl_.repeated_cord_.Get(index);
}
inline const std::string& TestAllTypesProto3::repeated_cord(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
  return _internal_repeated_cord(index);
}
inline std::string* TestAllTypesProto3::mutable_repeated_cord(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
  return _impl_.repeated_cord_.Mutable(index);
}
inline void TestAllTypesProto3::set_repeated_cord(int index, const std::string& value) {
  _impl_.repeated_cord_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::set_repeated_cord(int index, std::string&& value) {
  _impl_.repeated_cord_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::set_repeated_cord(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_cord_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::set_repeated_cord(int index, const char* value, size_t size) {
  _impl_.repeated_cord_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline std::string* TestAllTypesProto3::_internal_add_repeated_cord() {
  return _impl_.repeated_cord_.Add();
}
inline void TestAllTypesProto3::add_repeated_cord(const std::string& value) {
  _impl_.repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::add_repeated_cord(std::string&& value) {
  _impl_.repeated_cord_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::add_repeated_cord(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.repeated_cord_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline void TestAllTypesProto3::add_repeated_cord(const char* value, size_t size) {
  _impl_.repeated_cord_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
TestAllTypesProto3::repeated_cord() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
  return _impl_.repeated_cord_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
TestAllTypesProto3::mutable_repeated_cord() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_cord)
  return &_impl_.repeated_cord_;
}

// repeated int32 packed_int32 = 75 [packed = true];
inline int TestAllTypesProto3::_internal_packed_int32_size() const {
  return _impl_.packed_int32_.size();
}
inline int TestAllTypesProto3::packed_int32_size() const {
  return _internal_packed_int32_size();
}
inline void TestAllTypesProto3::clear_packed_int32() {
  _impl_.packed_int32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_packed_int32(int index) const {
  return _impl_.packed_int32_.Get(index);
}
inline int32_t TestAllTypesProto3::packed_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int32)
  return _internal_packed_int32(index);
}
inline void TestAllTypesProto3::set_packed_int32(int index, int32_t value) {
  _impl_.packed_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int32)
}
inline void TestAllTypesProto3::_internal_add_packed_int32(int32_t value) {
  _impl_.packed_int32_.Add(value);
}
inline void TestAllTypesProto3::add_packed_int32(int32_t value) {
  _internal_add_packed_int32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_packed_int32() const {
  return _impl_.packed_int32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::packed_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int32)
  return _internal_packed_int32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_packed_int32() {
  return &_impl_.packed_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_packed_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int32)
  return _internal_mutable_packed_int32();
}

// repeated int64 packed_int64 = 76 [packed = true];
inline int TestAllTypesProto3::_internal_packed_int64_size() const {
  return _impl_.packed_int64_.size();
}
inline int TestAllTypesProto3::packed_int64_size() const {
  return _internal_packed_int64_size();
}
inline void TestAllTypesProto3::clear_packed_int64() {
  _impl_.packed_int64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_packed_int64(int index) const {
  return _impl_.packed_int64_.Get(index);
}
inline int64_t TestAllTypesProto3::packed_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int64)
  return _internal_packed_int64(index);
}
inline void TestAllTypesProto3::set_packed_int64(int index, int64_t value) {
  _impl_.packed_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int64)
}
inline void TestAllTypesProto3::_internal_add_packed_int64(int64_t value) {
  _impl_.packed_int64_.Add(value);
}
inline void TestAllTypesProto3::add_packed_int64(int64_t value) {
  _internal_add_packed_int64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_packed_int64() const {
  return _impl_.packed_int64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::packed_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int64)
  return _internal_packed_int64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_packed_int64() {
  return &_impl_.packed_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_packed_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_int64)
  return _internal_mutable_packed_int64();
}

// repeated uint32 packed_uint32 = 77 [packed = true];
inline int TestAllTypesProto3::_internal_packed_uint32_size() const {
  return _impl_.packed_uint32_.size();
}
inline int TestAllTypesProto3::packed_uint32_size() const {
  return _internal_packed_uint32_size();
}
inline void TestAllTypesProto3::clear_packed_uint32() {
  _impl_.packed_uint32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_packed_uint32(int index) const {
  return _impl_.packed_uint32_.Get(index);
}
inline uint32_t TestAllTypesProto3::packed_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint32)
  return _internal_packed_uint32(index);
}
inline void TestAllTypesProto3::set_packed_uint32(int index, uint32_t value) {
  _impl_.packed_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint32)
}
inline void TestAllTypesProto3::_internal_add_packed_uint32(uint32_t value) {
  _impl_.packed_uint32_.Add(value);
}
inline void TestAllTypesProto3::add_packed_uint32(uint32_t value) {
  _internal_add_packed_uint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_packed_uint32() const {
  return _impl_.packed_uint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::packed_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint32)
  return _internal_packed_uint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_packed_uint32() {
  return &_impl_.packed_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_packed_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint32)
  return _internal_mutable_packed_uint32();
}

// repeated uint64 packed_uint64 = 78 [packed = true];
inline int TestAllTypesProto3::_internal_packed_uint64_size() const {
  return _impl_.packed_uint64_.size();
}
inline int TestAllTypesProto3::packed_uint64_size() const {
  return _internal_packed_uint64_size();
}
inline void TestAllTypesProto3::clear_packed_uint64() {
  _impl_.packed_uint64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_packed_uint64(int index) const {
  return _impl_.packed_uint64_.Get(index);
}
inline uint64_t TestAllTypesProto3::packed_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint64)
  return _internal_packed_uint64(index);
}
inline void TestAllTypesProto3::set_packed_uint64(int index, uint64_t value) {
  _impl_.packed_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint64)
}
inline void TestAllTypesProto3::_internal_add_packed_uint64(uint64_t value) {
  _impl_.packed_uint64_.Add(value);
}
inline void TestAllTypesProto3::add_packed_uint64(uint64_t value) {
  _internal_add_packed_uint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_packed_uint64() const {
  return _impl_.packed_uint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::packed_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint64)
  return _internal_packed_uint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_packed_uint64() {
  return &_impl_.packed_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_packed_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_uint64)
  return _internal_mutable_packed_uint64();
}

// repeated sint32 packed_sint32 = 79 [packed = true];
inline int TestAllTypesProto3::_internal_packed_sint32_size() const {
  return _impl_.packed_sint32_.size();
}
inline int TestAllTypesProto3::packed_sint32_size() const {
  return _internal_packed_sint32_size();
}
inline void TestAllTypesProto3::clear_packed_sint32() {
  _impl_.packed_sint32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_packed_sint32(int index) const {
  return _impl_.packed_sint32_.Get(index);
}
inline int32_t TestAllTypesProto3::packed_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint32)
  return _internal_packed_sint32(index);
}
inline void TestAllTypesProto3::set_packed_sint32(int index, int32_t value) {
  _impl_.packed_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint32)
}
inline void TestAllTypesProto3::_internal_add_packed_sint32(int32_t value) {
  _impl_.packed_sint32_.Add(value);
}
inline void TestAllTypesProto3::add_packed_sint32(int32_t value) {
  _internal_add_packed_sint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_packed_sint32() const {
  return _impl_.packed_sint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::packed_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint32)
  return _internal_packed_sint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_packed_sint32() {
  return &_impl_.packed_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_packed_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint32)
  return _internal_mutable_packed_sint32();
}

// repeated sint64 packed_sint64 = 80 [packed = true];
inline int TestAllTypesProto3::_internal_packed_sint64_size() const {
  return _impl_.packed_sint64_.size();
}
inline int TestAllTypesProto3::packed_sint64_size() const {
  return _internal_packed_sint64_size();
}
inline void TestAllTypesProto3::clear_packed_sint64() {
  _impl_.packed_sint64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_packed_sint64(int index) const {
  return _impl_.packed_sint64_.Get(index);
}
inline int64_t TestAllTypesProto3::packed_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint64)
  return _internal_packed_sint64(index);
}
inline void TestAllTypesProto3::set_packed_sint64(int index, int64_t value) {
  _impl_.packed_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint64)
}
inline void TestAllTypesProto3::_internal_add_packed_sint64(int64_t value) {
  _impl_.packed_sint64_.Add(value);
}
inline void TestAllTypesProto3::add_packed_sint64(int64_t value) {
  _internal_add_packed_sint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_packed_sint64() const {
  return _impl_.packed_sint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::packed_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint64)
  return _internal_packed_sint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_packed_sint64() {
  return &_impl_.packed_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_packed_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sint64)
  return _internal_mutable_packed_sint64();
}

// repeated fixed32 packed_fixed32 = 81 [packed = true];
inline int TestAllTypesProto3::_internal_packed_fixed32_size() const {
  return _impl_.packed_fixed32_.size();
}
inline int TestAllTypesProto3::packed_fixed32_size() const {
  return _internal_packed_fixed32_size();
}
inline void TestAllTypesProto3::clear_packed_fixed32() {
  _impl_.packed_fixed32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_packed_fixed32(int index) const {
  return _impl_.packed_fixed32_.Get(index);
}
inline uint32_t TestAllTypesProto3::packed_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed32)
  return _internal_packed_fixed32(index);
}
inline void TestAllTypesProto3::set_packed_fixed32(int index, uint32_t value) {
  _impl_.packed_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed32)
}
inline void TestAllTypesProto3::_internal_add_packed_fixed32(uint32_t value) {
  _impl_.packed_fixed32_.Add(value);
}
inline void TestAllTypesProto3::add_packed_fixed32(uint32_t value) {
  _internal_add_packed_fixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_packed_fixed32() const {
  return _impl_.packed_fixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::packed_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed32)
  return _internal_packed_fixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_packed_fixed32() {
  return &_impl_.packed_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_packed_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed32)
  return _internal_mutable_packed_fixed32();
}

// repeated fixed64 packed_fixed64 = 82 [packed = true];
inline int TestAllTypesProto3::_internal_packed_fixed64_size() const {
  return _impl_.packed_fixed64_.size();
}
inline int TestAllTypesProto3::packed_fixed64_size() const {
  return _internal_packed_fixed64_size();
}
inline void TestAllTypesProto3::clear_packed_fixed64() {
  _impl_.packed_fixed64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_packed_fixed64(int index) const {
  return _impl_.packed_fixed64_.Get(index);
}
inline uint64_t TestAllTypesProto3::packed_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed64)
  return _internal_packed_fixed64(index);
}
inline void TestAllTypesProto3::set_packed_fixed64(int index, uint64_t value) {
  _impl_.packed_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed64)
}
inline void TestAllTypesProto3::_internal_add_packed_fixed64(uint64_t value) {
  _impl_.packed_fixed64_.Add(value);
}
inline void TestAllTypesProto3::add_packed_fixed64(uint64_t value) {
  _internal_add_packed_fixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_packed_fixed64() const {
  return _impl_.packed_fixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::packed_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed64)
  return _internal_packed_fixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_packed_fixed64() {
  return &_impl_.packed_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_packed_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_fixed64)
  return _internal_mutable_packed_fixed64();
}

// repeated sfixed32 packed_sfixed32 = 83 [packed = true];
inline int TestAllTypesProto3::_internal_packed_sfixed32_size() const {
  return _impl_.packed_sfixed32_.size();
}
inline int TestAllTypesProto3::packed_sfixed32_size() const {
  return _internal_packed_sfixed32_size();
}
inline void TestAllTypesProto3::clear_packed_sfixed32() {
  _impl_.packed_sfixed32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_packed_sfixed32(int index) const {
  return _impl_.packed_sfixed32_.Get(index);
}
inline int32_t TestAllTypesProto3::packed_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed32)
  return _internal_packed_sfixed32(index);
}
inline void TestAllTypesProto3::set_packed_sfixed32(int index, int32_t value) {
  _impl_.packed_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed32)
}
inline void TestAllTypesProto3::_internal_add_packed_sfixed32(int32_t value) {
  _impl_.packed_sfixed32_.Add(value);
}
inline void TestAllTypesProto3::add_packed_sfixed32(int32_t value) {
  _internal_add_packed_sfixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_packed_sfixed32() const {
  return _impl_.packed_sfixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::packed_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed32)
  return _internal_packed_sfixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_packed_sfixed32() {
  return &_impl_.packed_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_packed_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed32)
  return _internal_mutable_packed_sfixed32();
}

// repeated sfixed64 packed_sfixed64 = 84 [packed = true];
inline int TestAllTypesProto3::_internal_packed_sfixed64_size() const {
  return _impl_.packed_sfixed64_.size();
}
inline int TestAllTypesProto3::packed_sfixed64_size() const {
  return _internal_packed_sfixed64_size();
}
inline void TestAllTypesProto3::clear_packed_sfixed64() {
  _impl_.packed_sfixed64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_packed_sfixed64(int index) const {
  return _impl_.packed_sfixed64_.Get(index);
}
inline int64_t TestAllTypesProto3::packed_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed64)
  return _internal_packed_sfixed64(index);
}
inline void TestAllTypesProto3::set_packed_sfixed64(int index, int64_t value) {
  _impl_.packed_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed64)
}
inline void TestAllTypesProto3::_internal_add_packed_sfixed64(int64_t value) {
  _impl_.packed_sfixed64_.Add(value);
}
inline void TestAllTypesProto3::add_packed_sfixed64(int64_t value) {
  _internal_add_packed_sfixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_packed_sfixed64() const {
  return _impl_.packed_sfixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::packed_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed64)
  return _internal_packed_sfixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_packed_sfixed64() {
  return &_impl_.packed_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_packed_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_sfixed64)
  return _internal_mutable_packed_sfixed64();
}

// repeated float packed_float = 85 [packed = true];
inline int TestAllTypesProto3::_internal_packed_float_size() const {
  return _impl_.packed_float_.size();
}
inline int TestAllTypesProto3::packed_float_size() const {
  return _internal_packed_float_size();
}
inline void TestAllTypesProto3::clear_packed_float() {
  _impl_.packed_float_.Clear();
}
inline float TestAllTypesProto3::_internal_packed_float(int index) const {
  return _impl_.packed_float_.Get(index);
}
inline float TestAllTypesProto3::packed_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_float)
  return _internal_packed_float(index);
}
inline void TestAllTypesProto3::set_packed_float(int index, float value) {
  _impl_.packed_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_float)
}
inline void TestAllTypesProto3::_internal_add_packed_float(float value) {
  _impl_.packed_float_.Add(value);
}
inline void TestAllTypesProto3::add_packed_float(float value) {
  _internal_add_packed_float(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_float)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::_internal_packed_float() const {
  return _impl_.packed_float_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::packed_float() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_float)
  return _internal_packed_float();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::_internal_mutable_packed_float() {
  return &_impl_.packed_float_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::mutable_packed_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_float)
  return _internal_mutable_packed_float();
}

// repeated double packed_double = 86 [packed = true];
inline int TestAllTypesProto3::_internal_packed_double_size() const {
  return _impl_.packed_double_.size();
}
inline int TestAllTypesProto3::packed_double_size() const {
  return _internal_packed_double_size();
}
inline void TestAllTypesProto3::clear_packed_double() {
  _impl_.packed_double_.Clear();
}
inline double TestAllTypesProto3::_internal_packed_double(int index) const {
  return _impl_.packed_double_.Get(index);
}
inline double TestAllTypesProto3::packed_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_double)
  return _internal_packed_double(index);
}
inline void TestAllTypesProto3::set_packed_double(int index, double value) {
  _impl_.packed_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_double)
}
inline void TestAllTypesProto3::_internal_add_packed_double(double value) {
  _impl_.packed_double_.Add(value);
}
inline void TestAllTypesProto3::add_packed_double(double value) {
  _internal_add_packed_double(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_double)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::_internal_packed_double() const {
  return _impl_.packed_double_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::packed_double() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_double)
  return _internal_packed_double();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::_internal_mutable_packed_double() {
  return &_impl_.packed_double_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::mutable_packed_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_double)
  return _internal_mutable_packed_double();
}

// repeated bool packed_bool = 87 [packed = true];
inline int TestAllTypesProto3::_internal_packed_bool_size() const {
  return _impl_.packed_bool_.size();
}
inline int TestAllTypesProto3::packed_bool_size() const {
  return _internal_packed_bool_size();
}
inline void TestAllTypesProto3::clear_packed_bool() {
  _impl_.packed_bool_.Clear();
}
inline bool TestAllTypesProto3::_internal_packed_bool(int index) const {
  return _impl_.packed_bool_.Get(index);
}
inline bool TestAllTypesProto3::packed_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_bool)
  return _internal_packed_bool(index);
}
inline void TestAllTypesProto3::set_packed_bool(int index, bool value) {
  _impl_.packed_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_bool)
}
inline void TestAllTypesProto3::_internal_add_packed_bool(bool value) {
  _impl_.packed_bool_.Add(value);
}
inline void TestAllTypesProto3::add_packed_bool(bool value) {
  _internal_add_packed_bool(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_bool)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::_internal_packed_bool() const {
  return _impl_.packed_bool_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::packed_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_bool)
  return _internal_packed_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::_internal_mutable_packed_bool() {
  return &_impl_.packed_bool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::mutable_packed_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_bool)
  return _internal_mutable_packed_bool();
}

// repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum packed_nested_enum = 88 [packed = true];
inline int TestAllTypesProto3::_internal_packed_nested_enum_size() const {
  return _impl_.packed_nested_enum_.size();
}
inline int TestAllTypesProto3::packed_nested_enum_size() const {
  return _internal_packed_nested_enum_size();
}
inline void TestAllTypesProto3::clear_packed_nested_enum() {
  _impl_.packed_nested_enum_.Clear();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::_internal_packed_nested_enum(int index) const {
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(_impl_.packed_nested_enum_.Get(index));
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::packed_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.packed_nested_enum)
  return _internal_packed_nested_enum(index);
}
inline void TestAllTypesProto3::set_packed_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.packed_nested_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.packed_nested_enum)
}
inline void TestAllTypesProto3::_internal_add_packed_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.packed_nested_enum_.Add(value);
}
inline void TestAllTypesProto3::add_packed_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _internal_add_packed_nested_enum(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.packed_nested_enum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
TestAllTypesProto3::packed_nested_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_nested_enum)
  return _impl_.packed_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::_internal_mutable_packed_nested_enum() {
  return &_impl_.packed_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::mutable_packed_nested_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.packed_nested_enum)
  return _internal_mutable_packed_nested_enum();
}

// repeated int32 unpacked_int32 = 89 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_int32_size() const {
  return _impl_.unpacked_int32_.size();
}
inline int TestAllTypesProto3::unpacked_int32_size() const {
  return _internal_unpacked_int32_size();
}
inline void TestAllTypesProto3::clear_unpacked_int32() {
  _impl_.unpacked_int32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_unpacked_int32(int index) const {
  return _impl_.unpacked_int32_.Get(index);
}
inline int32_t TestAllTypesProto3::unpacked_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int32)
  return _internal_unpacked_int32(index);
}
inline void TestAllTypesProto3::set_unpacked_int32(int index, int32_t value) {
  _impl_.unpacked_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int32)
}
inline void TestAllTypesProto3::_internal_add_unpacked_int32(int32_t value) {
  _impl_.unpacked_int32_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_int32(int32_t value) {
  _internal_add_unpacked_int32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_unpacked_int32() const {
  return _impl_.unpacked_int32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::unpacked_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int32)
  return _internal_unpacked_int32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_unpacked_int32() {
  return &_impl_.unpacked_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_unpacked_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int32)
  return _internal_mutable_unpacked_int32();
}

// repeated int64 unpacked_int64 = 90 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_int64_size() const {
  return _impl_.unpacked_int64_.size();
}
inline int TestAllTypesProto3::unpacked_int64_size() const {
  return _internal_unpacked_int64_size();
}
inline void TestAllTypesProto3::clear_unpacked_int64() {
  _impl_.unpacked_int64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_unpacked_int64(int index) const {
  return _impl_.unpacked_int64_.Get(index);
}
inline int64_t TestAllTypesProto3::unpacked_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int64)
  return _internal_unpacked_int64(index);
}
inline void TestAllTypesProto3::set_unpacked_int64(int index, int64_t value) {
  _impl_.unpacked_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int64)
}
inline void TestAllTypesProto3::_internal_add_unpacked_int64(int64_t value) {
  _impl_.unpacked_int64_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_int64(int64_t value) {
  _internal_add_unpacked_int64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_unpacked_int64() const {
  return _impl_.unpacked_int64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::unpacked_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int64)
  return _internal_unpacked_int64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_unpacked_int64() {
  return &_impl_.unpacked_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_unpacked_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_int64)
  return _internal_mutable_unpacked_int64();
}

// repeated uint32 unpacked_uint32 = 91 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_uint32_size() const {
  return _impl_.unpacked_uint32_.size();
}
inline int TestAllTypesProto3::unpacked_uint32_size() const {
  return _internal_unpacked_uint32_size();
}
inline void TestAllTypesProto3::clear_unpacked_uint32() {
  _impl_.unpacked_uint32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_unpacked_uint32(int index) const {
  return _impl_.unpacked_uint32_.Get(index);
}
inline uint32_t TestAllTypesProto3::unpacked_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint32)
  return _internal_unpacked_uint32(index);
}
inline void TestAllTypesProto3::set_unpacked_uint32(int index, uint32_t value) {
  _impl_.unpacked_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint32)
}
inline void TestAllTypesProto3::_internal_add_unpacked_uint32(uint32_t value) {
  _impl_.unpacked_uint32_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_uint32(uint32_t value) {
  _internal_add_unpacked_uint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_unpacked_uint32() const {
  return _impl_.unpacked_uint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::unpacked_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint32)
  return _internal_unpacked_uint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_unpacked_uint32() {
  return &_impl_.unpacked_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_unpacked_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint32)
  return _internal_mutable_unpacked_uint32();
}

// repeated uint64 unpacked_uint64 = 92 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_uint64_size() const {
  return _impl_.unpacked_uint64_.size();
}
inline int TestAllTypesProto3::unpacked_uint64_size() const {
  return _internal_unpacked_uint64_size();
}
inline void TestAllTypesProto3::clear_unpacked_uint64() {
  _impl_.unpacked_uint64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_unpacked_uint64(int index) const {
  return _impl_.unpacked_uint64_.Get(index);
}
inline uint64_t TestAllTypesProto3::unpacked_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint64)
  return _internal_unpacked_uint64(index);
}
inline void TestAllTypesProto3::set_unpacked_uint64(int index, uint64_t value) {
  _impl_.unpacked_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint64)
}
inline void TestAllTypesProto3::_internal_add_unpacked_uint64(uint64_t value) {
  _impl_.unpacked_uint64_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_uint64(uint64_t value) {
  _internal_add_unpacked_uint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_unpacked_uint64() const {
  return _impl_.unpacked_uint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::unpacked_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint64)
  return _internal_unpacked_uint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_unpacked_uint64() {
  return &_impl_.unpacked_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_unpacked_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_uint64)
  return _internal_mutable_unpacked_uint64();
}

// repeated sint32 unpacked_sint32 = 93 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_sint32_size() const {
  return _impl_.unpacked_sint32_.size();
}
inline int TestAllTypesProto3::unpacked_sint32_size() const {
  return _internal_unpacked_sint32_size();
}
inline void TestAllTypesProto3::clear_unpacked_sint32() {
  _impl_.unpacked_sint32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_unpacked_sint32(int index) const {
  return _impl_.unpacked_sint32_.Get(index);
}
inline int32_t TestAllTypesProto3::unpacked_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint32)
  return _internal_unpacked_sint32(index);
}
inline void TestAllTypesProto3::set_unpacked_sint32(int index, int32_t value) {
  _impl_.unpacked_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint32)
}
inline void TestAllTypesProto3::_internal_add_unpacked_sint32(int32_t value) {
  _impl_.unpacked_sint32_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_sint32(int32_t value) {
  _internal_add_unpacked_sint32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_unpacked_sint32() const {
  return _impl_.unpacked_sint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::unpacked_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint32)
  return _internal_unpacked_sint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_unpacked_sint32() {
  return &_impl_.unpacked_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_unpacked_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint32)
  return _internal_mutable_unpacked_sint32();
}

// repeated sint64 unpacked_sint64 = 94 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_sint64_size() const {
  return _impl_.unpacked_sint64_.size();
}
inline int TestAllTypesProto3::unpacked_sint64_size() const {
  return _internal_unpacked_sint64_size();
}
inline void TestAllTypesProto3::clear_unpacked_sint64() {
  _impl_.unpacked_sint64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_unpacked_sint64(int index) const {
  return _impl_.unpacked_sint64_.Get(index);
}
inline int64_t TestAllTypesProto3::unpacked_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint64)
  return _internal_unpacked_sint64(index);
}
inline void TestAllTypesProto3::set_unpacked_sint64(int index, int64_t value) {
  _impl_.unpacked_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint64)
}
inline void TestAllTypesProto3::_internal_add_unpacked_sint64(int64_t value) {
  _impl_.unpacked_sint64_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_sint64(int64_t value) {
  _internal_add_unpacked_sint64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_unpacked_sint64() const {
  return _impl_.unpacked_sint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::unpacked_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint64)
  return _internal_unpacked_sint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_unpacked_sint64() {
  return &_impl_.unpacked_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_unpacked_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sint64)
  return _internal_mutable_unpacked_sint64();
}

// repeated fixed32 unpacked_fixed32 = 95 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_fixed32_size() const {
  return _impl_.unpacked_fixed32_.size();
}
inline int TestAllTypesProto3::unpacked_fixed32_size() const {
  return _internal_unpacked_fixed32_size();
}
inline void TestAllTypesProto3::clear_unpacked_fixed32() {
  _impl_.unpacked_fixed32_.Clear();
}
inline uint32_t TestAllTypesProto3::_internal_unpacked_fixed32(int index) const {
  return _impl_.unpacked_fixed32_.Get(index);
}
inline uint32_t TestAllTypesProto3::unpacked_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed32)
  return _internal_unpacked_fixed32(index);
}
inline void TestAllTypesProto3::set_unpacked_fixed32(int index, uint32_t value) {
  _impl_.unpacked_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed32)
}
inline void TestAllTypesProto3::_internal_add_unpacked_fixed32(uint32_t value) {
  _impl_.unpacked_fixed32_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_fixed32(uint32_t value) {
  _internal_add_unpacked_fixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::_internal_unpacked_fixed32() const {
  return _impl_.unpacked_fixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TestAllTypesProto3::unpacked_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed32)
  return _internal_unpacked_fixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::_internal_mutable_unpacked_fixed32() {
  return &_impl_.unpacked_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TestAllTypesProto3::mutable_unpacked_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed32)
  return _internal_mutable_unpacked_fixed32();
}

// repeated fixed64 unpacked_fixed64 = 96 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_fixed64_size() const {
  return _impl_.unpacked_fixed64_.size();
}
inline int TestAllTypesProto3::unpacked_fixed64_size() const {
  return _internal_unpacked_fixed64_size();
}
inline void TestAllTypesProto3::clear_unpacked_fixed64() {
  _impl_.unpacked_fixed64_.Clear();
}
inline uint64_t TestAllTypesProto3::_internal_unpacked_fixed64(int index) const {
  return _impl_.unpacked_fixed64_.Get(index);
}
inline uint64_t TestAllTypesProto3::unpacked_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed64)
  return _internal_unpacked_fixed64(index);
}
inline void TestAllTypesProto3::set_unpacked_fixed64(int index, uint64_t value) {
  _impl_.unpacked_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed64)
}
inline void TestAllTypesProto3::_internal_add_unpacked_fixed64(uint64_t value) {
  _impl_.unpacked_fixed64_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_fixed64(uint64_t value) {
  _internal_add_unpacked_fixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::_internal_unpacked_fixed64() const {
  return _impl_.unpacked_fixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TestAllTypesProto3::unpacked_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed64)
  return _internal_unpacked_fixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::_internal_mutable_unpacked_fixed64() {
  return &_impl_.unpacked_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TestAllTypesProto3::mutable_unpacked_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_fixed64)
  return _internal_mutable_unpacked_fixed64();
}

// repeated sfixed32 unpacked_sfixed32 = 97 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_sfixed32_size() const {
  return _impl_.unpacked_sfixed32_.size();
}
inline int TestAllTypesProto3::unpacked_sfixed32_size() const {
  return _internal_unpacked_sfixed32_size();
}
inline void TestAllTypesProto3::clear_unpacked_sfixed32() {
  _impl_.unpacked_sfixed32_.Clear();
}
inline int32_t TestAllTypesProto3::_internal_unpacked_sfixed32(int index) const {
  return _impl_.unpacked_sfixed32_.Get(index);
}
inline int32_t TestAllTypesProto3::unpacked_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed32)
  return _internal_unpacked_sfixed32(index);
}
inline void TestAllTypesProto3::set_unpacked_sfixed32(int index, int32_t value) {
  _impl_.unpacked_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed32)
}
inline void TestAllTypesProto3::_internal_add_unpacked_sfixed32(int32_t value) {
  _impl_.unpacked_sfixed32_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_sfixed32(int32_t value) {
  _internal_add_unpacked_sfixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::_internal_unpacked_sfixed32() const {
  return _impl_.unpacked_sfixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TestAllTypesProto3::unpacked_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed32)
  return _internal_unpacked_sfixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::_internal_mutable_unpacked_sfixed32() {
  return &_impl_.unpacked_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TestAllTypesProto3::mutable_unpacked_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed32)
  return _internal_mutable_unpacked_sfixed32();
}

// repeated sfixed64 unpacked_sfixed64 = 98 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_sfixed64_size() const {
  return _impl_.unpacked_sfixed64_.size();
}
inline int TestAllTypesProto3::unpacked_sfixed64_size() const {
  return _internal_unpacked_sfixed64_size();
}
inline void TestAllTypesProto3::clear_unpacked_sfixed64() {
  _impl_.unpacked_sfixed64_.Clear();
}
inline int64_t TestAllTypesProto3::_internal_unpacked_sfixed64(int index) const {
  return _impl_.unpacked_sfixed64_.Get(index);
}
inline int64_t TestAllTypesProto3::unpacked_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed64)
  return _internal_unpacked_sfixed64(index);
}
inline void TestAllTypesProto3::set_unpacked_sfixed64(int index, int64_t value) {
  _impl_.unpacked_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed64)
}
inline void TestAllTypesProto3::_internal_add_unpacked_sfixed64(int64_t value) {
  _impl_.unpacked_sfixed64_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_sfixed64(int64_t value) {
  _internal_add_unpacked_sfixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::_internal_unpacked_sfixed64() const {
  return _impl_.unpacked_sfixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
TestAllTypesProto3::unpacked_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed64)
  return _internal_unpacked_sfixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::_internal_mutable_unpacked_sfixed64() {
  return &_impl_.unpacked_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
TestAllTypesProto3::mutable_unpacked_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_sfixed64)
  return _internal_mutable_unpacked_sfixed64();
}

// repeated float unpacked_float = 99 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_float_size() const {
  return _impl_.unpacked_float_.size();
}
inline int TestAllTypesProto3::unpacked_float_size() const {
  return _internal_unpacked_float_size();
}
inline void TestAllTypesProto3::clear_unpacked_float() {
  _impl_.unpacked_float_.Clear();
}
inline float TestAllTypesProto3::_internal_unpacked_float(int index) const {
  return _impl_.unpacked_float_.Get(index);
}
inline float TestAllTypesProto3::unpacked_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_float)
  return _internal_unpacked_float(index);
}
inline void TestAllTypesProto3::set_unpacked_float(int index, float value) {
  _impl_.unpacked_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_float)
}
inline void TestAllTypesProto3::_internal_add_unpacked_float(float value) {
  _impl_.unpacked_float_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_float(float value) {
  _internal_add_unpacked_float(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_float)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::_internal_unpacked_float() const {
  return _impl_.unpacked_float_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TestAllTypesProto3::unpacked_float() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_float)
  return _internal_unpacked_float();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::_internal_mutable_unpacked_float() {
  return &_impl_.unpacked_float_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TestAllTypesProto3::mutable_unpacked_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_float)
  return _internal_mutable_unpacked_float();
}

// repeated double unpacked_double = 100 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_double_size() const {
  return _impl_.unpacked_double_.size();
}
inline int TestAllTypesProto3::unpacked_double_size() const {
  return _internal_unpacked_double_size();
}
inline void TestAllTypesProto3::clear_unpacked_double() {
  _impl_.unpacked_double_.Clear();
}
inline double TestAllTypesProto3::_internal_unpacked_double(int index) const {
  return _impl_.unpacked_double_.Get(index);
}
inline double TestAllTypesProto3::unpacked_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_double)
  return _internal_unpacked_double(index);
}
inline void TestAllTypesProto3::set_unpacked_double(int index, double value) {
  _impl_.unpacked_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_double)
}
inline void TestAllTypesProto3::_internal_add_unpacked_double(double value) {
  _impl_.unpacked_double_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_double(double value) {
  _internal_add_unpacked_double(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_double)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::_internal_unpacked_double() const {
  return _impl_.unpacked_double_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
TestAllTypesProto3::unpacked_double() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_double)
  return _internal_unpacked_double();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::_internal_mutable_unpacked_double() {
  return &_impl_.unpacked_double_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
TestAllTypesProto3::mutable_unpacked_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_double)
  return _internal_mutable_unpacked_double();
}

// repeated bool unpacked_bool = 101 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_bool_size() const {
  return _impl_.unpacked_bool_.size();
}
inline int TestAllTypesProto3::unpacked_bool_size() const {
  return _internal_unpacked_bool_size();
}
inline void TestAllTypesProto3::clear_unpacked_bool() {
  _impl_.unpacked_bool_.Clear();
}
inline bool TestAllTypesProto3::_internal_unpacked_bool(int index) const {
  return _impl_.unpacked_bool_.Get(index);
}
inline bool TestAllTypesProto3::unpacked_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_bool)
  return _internal_unpacked_bool(index);
}
inline void TestAllTypesProto3::set_unpacked_bool(int index, bool value) {
  _impl_.unpacked_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_bool)
}
inline void TestAllTypesProto3::_internal_add_unpacked_bool(bool value) {
  _impl_.unpacked_bool_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_bool(bool value) {
  _internal_add_unpacked_bool(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_bool)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::_internal_unpacked_bool() const {
  return _impl_.unpacked_bool_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TestAllTypesProto3::unpacked_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_bool)
  return _internal_unpacked_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::_internal_mutable_unpacked_bool() {
  return &_impl_.unpacked_bool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TestAllTypesProto3::mutable_unpacked_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_bool)
  return _internal_mutable_unpacked_bool();
}

// repeated .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum unpacked_nested_enum = 102 [packed = false];
inline int TestAllTypesProto3::_internal_unpacked_nested_enum_size() const {
  return _impl_.unpacked_nested_enum_.size();
}
inline int TestAllTypesProto3::unpacked_nested_enum_size() const {
  return _internal_unpacked_nested_enum_size();
}
inline void TestAllTypesProto3::clear_unpacked_nested_enum() {
  _impl_.unpacked_nested_enum_.Clear();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::_internal_unpacked_nested_enum(int index) const {
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(_impl_.unpacked_nested_enum_.Get(index));
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::unpacked_nested_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_nested_enum)
  return _internal_unpacked_nested_enum(index);
}
inline void TestAllTypesProto3::set_unpacked_nested_enum(int index, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.unpacked_nested_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_nested_enum)
}
inline void TestAllTypesProto3::_internal_add_unpacked_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _impl_.unpacked_nested_enum_.Add(value);
}
inline void TestAllTypesProto3::add_unpacked_nested_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _internal_add_unpacked_nested_enum(value);
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_nested_enum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
TestAllTypesProto3::unpacked_nested_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_nested_enum)
  return _impl_.unpacked_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::_internal_mutable_unpacked_nested_enum() {
  return &_impl_.unpacked_nested_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
TestAllTypesProto3::mutable_unpacked_nested_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.unpacked_nested_enum)
  return _internal_mutable_unpacked_nested_enum();
}

// map<int32, int32> map_int32_int32 = 56;
inline int TestAllTypesProto3::_internal_map_int32_int32_size() const {
  return _impl_.map_int32_int32_.size();
}
inline int TestAllTypesProto3::map_int32_int32_size() const {
  return _internal_map_int32_int32_size();
}
inline void TestAllTypesProto3::clear_map_int32_int32() {
  _impl_.map_int32_int32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::_internal_map_int32_int32() const {
  return _impl_.map_int32_int32_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::map_int32_int32() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_int32)
  return _internal_map_int32_int32();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::_internal_mutable_map_int32_int32() {
  return _impl_.map_int32_int32_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::mutable_map_int32_int32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_int32)
  return _internal_mutable_map_int32_int32();
}

// map<int64, int64> map_int64_int64 = 57;
inline int TestAllTypesProto3::_internal_map_int64_int64_size() const {
  return _impl_.map_int64_int64_.size();
}
inline int TestAllTypesProto3::map_int64_int64_size() const {
  return _internal_map_int64_int64_size();
}
inline void TestAllTypesProto3::clear_map_int64_int64() {
  _impl_.map_int64_int64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::_internal_map_int64_int64() const {
  return _impl_.map_int64_int64_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::map_int64_int64() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int64_int64)
  return _internal_map_int64_int64();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::_internal_mutable_map_int64_int64() {
  return _impl_.map_int64_int64_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::mutable_map_int64_int64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int64_int64)
  return _internal_mutable_map_int64_int64();
}

// map<uint32, uint32> map_uint32_uint32 = 58;
inline int TestAllTypesProto3::_internal_map_uint32_uint32_size() const {
  return _impl_.map_uint32_uint32_.size();
}
inline int TestAllTypesProto3::map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32_size();
}
inline void TestAllTypesProto3::clear_map_uint32_uint32() {
  _impl_.map_uint32_uint32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
TestAllTypesProto3::_internal_map_uint32_uint32() const {
  return _impl_.map_uint32_uint32_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
TestAllTypesProto3::map_uint32_uint32() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_uint32_uint32)
  return _internal_map_uint32_uint32();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
TestAllTypesProto3::_internal_mutable_map_uint32_uint32() {
  return _impl_.map_uint32_uint32_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
TestAllTypesProto3::mutable_map_uint32_uint32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_uint32_uint32)
  return _internal_mutable_map_uint32_uint32();
}

// map<uint64, uint64> map_uint64_uint64 = 59;
inline int TestAllTypesProto3::_internal_map_uint64_uint64_size() const {
  return _impl_.map_uint64_uint64_.size();
}
inline int TestAllTypesProto3::map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64_size();
}
inline void TestAllTypesProto3::clear_map_uint64_uint64() {
  _impl_.map_uint64_uint64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
TestAllTypesProto3::_internal_map_uint64_uint64() const {
  return _impl_.map_uint64_uint64_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
TestAllTypesProto3::map_uint64_uint64() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_uint64_uint64)
  return _internal_map_uint64_uint64();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
TestAllTypesProto3::_internal_mutable_map_uint64_uint64() {
  return _impl_.map_uint64_uint64_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
TestAllTypesProto3::mutable_map_uint64_uint64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_uint64_uint64)
  return _internal_mutable_map_uint64_uint64();
}

// map<sint32, sint32> map_sint32_sint32 = 60;
inline int TestAllTypesProto3::_internal_map_sint32_sint32_size() const {
  return _impl_.map_sint32_sint32_.size();
}
inline int TestAllTypesProto3::map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32_size();
}
inline void TestAllTypesProto3::clear_map_sint32_sint32() {
  _impl_.map_sint32_sint32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::_internal_map_sint32_sint32() const {
  return _impl_.map_sint32_sint32_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::map_sint32_sint32() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sint32_sint32)
  return _internal_map_sint32_sint32();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::_internal_mutable_map_sint32_sint32() {
  return _impl_.map_sint32_sint32_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::mutable_map_sint32_sint32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sint32_sint32)
  return _internal_mutable_map_sint32_sint32();
}

// map<sint64, sint64> map_sint64_sint64 = 61;
inline int TestAllTypesProto3::_internal_map_sint64_sint64_size() const {
  return _impl_.map_sint64_sint64_.size();
}
inline int TestAllTypesProto3::map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64_size();
}
inline void TestAllTypesProto3::clear_map_sint64_sint64() {
  _impl_.map_sint64_sint64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::_internal_map_sint64_sint64() const {
  return _impl_.map_sint64_sint64_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::map_sint64_sint64() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sint64_sint64)
  return _internal_map_sint64_sint64();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::_internal_mutable_map_sint64_sint64() {
  return _impl_.map_sint64_sint64_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::mutable_map_sint64_sint64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sint64_sint64)
  return _internal_mutable_map_sint64_sint64();
}

// map<fixed32, fixed32> map_fixed32_fixed32 = 62;
inline int TestAllTypesProto3::_internal_map_fixed32_fixed32_size() const {
  return _impl_.map_fixed32_fixed32_.size();
}
inline int TestAllTypesProto3::map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32_size();
}
inline void TestAllTypesProto3::clear_map_fixed32_fixed32() {
  _impl_.map_fixed32_fixed32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
TestAllTypesProto3::_internal_map_fixed32_fixed32() const {
  return _impl_.map_fixed32_fixed32_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
TestAllTypesProto3::map_fixed32_fixed32() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_fixed32_fixed32)
  return _internal_map_fixed32_fixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
TestAllTypesProto3::_internal_mutable_map_fixed32_fixed32() {
  return _impl_.map_fixed32_fixed32_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
TestAllTypesProto3::mutable_map_fixed32_fixed32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_fixed32_fixed32)
  return _internal_mutable_map_fixed32_fixed32();
}

// map<fixed64, fixed64> map_fixed64_fixed64 = 63;
inline int TestAllTypesProto3::_internal_map_fixed64_fixed64_size() const {
  return _impl_.map_fixed64_fixed64_.size();
}
inline int TestAllTypesProto3::map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64_size();
}
inline void TestAllTypesProto3::clear_map_fixed64_fixed64() {
  _impl_.map_fixed64_fixed64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
TestAllTypesProto3::_internal_map_fixed64_fixed64() const {
  return _impl_.map_fixed64_fixed64_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >&
TestAllTypesProto3::map_fixed64_fixed64() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_fixed64_fixed64)
  return _internal_map_fixed64_fixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
TestAllTypesProto3::_internal_mutable_map_fixed64_fixed64() {
  return _impl_.map_fixed64_fixed64_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint64_t >*
TestAllTypesProto3::mutable_map_fixed64_fixed64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_fixed64_fixed64)
  return _internal_mutable_map_fixed64_fixed64();
}

// map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
inline int TestAllTypesProto3::_internal_map_sfixed32_sfixed32_size() const {
  return _impl_.map_sfixed32_sfixed32_.size();
}
inline int TestAllTypesProto3::map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32_size();
}
inline void TestAllTypesProto3::clear_map_sfixed32_sfixed32() {
  _impl_.map_sfixed32_sfixed32_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::_internal_map_sfixed32_sfixed32() const {
  return _impl_.map_sfixed32_sfixed32_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >&
TestAllTypesProto3::map_sfixed32_sfixed32() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sfixed32_sfixed32)
  return _internal_map_sfixed32_sfixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::_internal_mutable_map_sfixed32_sfixed32() {
  return _impl_.map_sfixed32_sfixed32_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >*
TestAllTypesProto3::mutable_map_sfixed32_sfixed32() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sfixed32_sfixed32)
  return _internal_mutable_map_sfixed32_sfixed32();
}

// map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
inline int TestAllTypesProto3::_internal_map_sfixed64_sfixed64_size() const {
  return _impl_.map_sfixed64_sfixed64_.size();
}
inline int TestAllTypesProto3::map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64_size();
}
inline void TestAllTypesProto3::clear_map_sfixed64_sfixed64() {
  _impl_.map_sfixed64_sfixed64_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::_internal_map_sfixed64_sfixed64() const {
  return _impl_.map_sfixed64_sfixed64_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >&
TestAllTypesProto3::map_sfixed64_sfixed64() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sfixed64_sfixed64)
  return _internal_map_sfixed64_sfixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::_internal_mutable_map_sfixed64_sfixed64() {
  return _impl_.map_sfixed64_sfixed64_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, int64_t >*
TestAllTypesProto3::mutable_map_sfixed64_sfixed64() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_sfixed64_sfixed64)
  return _internal_mutable_map_sfixed64_sfixed64();
}

// map<int32, float> map_int32_float = 66;
inline int TestAllTypesProto3::_internal_map_int32_float_size() const {
  return _impl_.map_int32_float_.size();
}
inline int TestAllTypesProto3::map_int32_float_size() const {
  return _internal_map_int32_float_size();
}
inline void TestAllTypesProto3::clear_map_int32_float() {
  _impl_.map_int32_float_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >&
TestAllTypesProto3::_internal_map_int32_float() const {
  return _impl_.map_int32_float_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >&
TestAllTypesProto3::map_int32_float() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_float)
  return _internal_map_int32_float();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >*
TestAllTypesProto3::_internal_mutable_map_int32_float() {
  return _impl_.map_int32_float_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, float >*
TestAllTypesProto3::mutable_map_int32_float() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_float)
  return _internal_mutable_map_int32_float();
}

// map<int32, double> map_int32_double = 67;
inline int TestAllTypesProto3::_internal_map_int32_double_size() const {
  return _impl_.map_int32_double_.size();
}
inline int TestAllTypesProto3::map_int32_double_size() const {
  return _internal_map_int32_double_size();
}
inline void TestAllTypesProto3::clear_map_int32_double() {
  _impl_.map_int32_double_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >&
TestAllTypesProto3::_internal_map_int32_double() const {
  return _impl_.map_int32_double_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >&
TestAllTypesProto3::map_int32_double() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_double)
  return _internal_map_int32_double();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >*
TestAllTypesProto3::_internal_mutable_map_int32_double() {
  return _impl_.map_int32_double_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >*
TestAllTypesProto3::mutable_map_int32_double() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_int32_double)
  return _internal_mutable_map_int32_double();
}

// map<bool, bool> map_bool_bool = 68;
inline int TestAllTypesProto3::_internal_map_bool_bool_size() const {
  return _impl_.map_bool_bool_.size();
}
inline int TestAllTypesProto3::map_bool_bool_size() const {
  return _internal_map_bool_bool_size();
}
inline void TestAllTypesProto3::clear_map_bool_bool() {
  _impl_.map_bool_bool_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >&
TestAllTypesProto3::_internal_map_bool_bool() const {
  return _impl_.map_bool_bool_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >&
TestAllTypesProto3::map_bool_bool() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_bool_bool)
  return _internal_map_bool_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >*
TestAllTypesProto3::_internal_mutable_map_bool_bool() {
  return _impl_.map_bool_bool_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< bool, bool >*
TestAllTypesProto3::mutable_map_bool_bool() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_bool_bool)
  return _internal_mutable_map_bool_bool();
}

// map<string, string> map_string_string = 69;
inline int TestAllTypesProto3::_internal_map_string_string_size() const {
  return _impl_.map_string_string_.size();
}
inline int TestAllTypesProto3::map_string_string_size() const {
  return _internal_map_string_string_size();
}
inline void TestAllTypesProto3::clear_map_string_string() {
  _impl_.map_string_string_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestAllTypesProto3::_internal_map_string_string() const {
  return _impl_.map_string_string_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestAllTypesProto3::map_string_string() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_string)
  return _internal_map_string_string();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestAllTypesProto3::_internal_mutable_map_string_string() {
  return _impl_.map_string_string_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestAllTypesProto3::mutable_map_string_string() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_string)
  return _internal_mutable_map_string_string();
}

// map<string, bytes> map_string_bytes = 70;
inline int TestAllTypesProto3::_internal_map_string_bytes_size() const {
  return _impl_.map_string_bytes_.size();
}
inline int TestAllTypesProto3::map_string_bytes_size() const {
  return _internal_map_string_bytes_size();
}
inline void TestAllTypesProto3::clear_map_string_bytes() {
  _impl_.map_string_bytes_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestAllTypesProto3::_internal_map_string_bytes() const {
  return _impl_.map_string_bytes_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TestAllTypesProto3::map_string_bytes() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_bytes)
  return _internal_map_string_bytes();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestAllTypesProto3::_internal_mutable_map_string_bytes() {
  return _impl_.map_string_bytes_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TestAllTypesProto3::mutable_map_string_bytes() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_bytes)
  return _internal_mutable_map_string_bytes();
}

// map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage> map_string_nested_message = 71;
inline int TestAllTypesProto3::_internal_map_string_nested_message_size() const {
  return _impl_.map_string_nested_message_.size();
}
inline int TestAllTypesProto3::map_string_nested_message_size() const {
  return _internal_map_string_nested_message_size();
}
inline void TestAllTypesProto3::clear_map_string_nested_message() {
  _impl_.map_string_nested_message_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
TestAllTypesProto3::_internal_map_string_nested_message() const {
  return _impl_.map_string_nested_message_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >&
TestAllTypesProto3::map_string_nested_message() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_nested_message)
  return _internal_map_string_nested_message();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
TestAllTypesProto3::_internal_mutable_map_string_nested_message() {
  return _impl_.map_string_nested_message_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >*
TestAllTypesProto3::mutable_map_string_nested_message() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_nested_message)
  return _internal_mutable_map_string_nested_message();
}

// map<string, .protobuf_test_messages.proto3.ForeignMessage> map_string_foreign_message = 72;
inline int TestAllTypesProto3::_internal_map_string_foreign_message_size() const {
  return _impl_.map_string_foreign_message_.size();
}
inline int TestAllTypesProto3::map_string_foreign_message_size() const {
  return _internal_map_string_foreign_message_size();
}
inline void TestAllTypesProto3::clear_map_string_foreign_message() {
  _impl_.map_string_foreign_message_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >&
TestAllTypesProto3::_internal_map_string_foreign_message() const {
  return _impl_.map_string_foreign_message_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >&
TestAllTypesProto3::map_string_foreign_message() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_foreign_message)
  return _internal_map_string_foreign_message();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >*
TestAllTypesProto3::_internal_mutable_map_string_foreign_message() {
  return _impl_.map_string_foreign_message_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignMessage >*
TestAllTypesProto3::mutable_map_string_foreign_message() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_foreign_message)
  return _internal_mutable_map_string_foreign_message();
}

// map<string, .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum> map_string_nested_enum = 73;
inline int TestAllTypesProto3::_internal_map_string_nested_enum_size() const {
  return _impl_.map_string_nested_enum_.size();
}
inline int TestAllTypesProto3::map_string_nested_enum_size() const {
  return _internal_map_string_nested_enum_size();
}
inline void TestAllTypesProto3::clear_map_string_nested_enum() {
  _impl_.map_string_nested_enum_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >&
TestAllTypesProto3::_internal_map_string_nested_enum() const {
  return _impl_.map_string_nested_enum_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >&
TestAllTypesProto3::map_string_nested_enum() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_nested_enum)
  return _internal_map_string_nested_enum();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >*
TestAllTypesProto3::_internal_mutable_map_string_nested_enum() {
  return _impl_.map_string_nested_enum_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >*
TestAllTypesProto3::mutable_map_string_nested_enum() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_nested_enum)
  return _internal_mutable_map_string_nested_enum();
}

// map<string, .protobuf_test_messages.proto3.ForeignEnum> map_string_foreign_enum = 74;
inline int TestAllTypesProto3::_internal_map_string_foreign_enum_size() const {
  return _impl_.map_string_foreign_enum_.size();
}
inline int TestAllTypesProto3::map_string_foreign_enum_size() const {
  return _internal_map_string_foreign_enum_size();
}
inline void TestAllTypesProto3::clear_map_string_foreign_enum() {
  _impl_.map_string_foreign_enum_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >&
TestAllTypesProto3::_internal_map_string_foreign_enum() const {
  return _impl_.map_string_foreign_enum_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >&
TestAllTypesProto3::map_string_foreign_enum() const {
  // @@protoc_insertion_point(field_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_foreign_enum)
  return _internal_map_string_foreign_enum();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >*
TestAllTypesProto3::_internal_mutable_map_string_foreign_enum() {
  return _impl_.map_string_foreign_enum_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::protobuf_test_messages::proto3::ForeignEnum >*
TestAllTypesProto3::mutable_map_string_foreign_enum() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_test_messages.proto3.TestAllTypesProto3.map_string_foreign_enum)
  return _internal_mutable_map_string_foreign_enum();
}

// uint32 oneof_uint32 = 111;
inline bool TestAllTypesProto3::_internal_has_oneof_uint32() const {
  return oneof_field_case() == kOneofUint32;
}
inline bool TestAllTypesProto3::has_oneof_uint32() const {
  return _internal_has_oneof_uint32();
}
inline void TestAllTypesProto3::set_has_oneof_uint32() {
  _impl_._oneof_case_[0] = kOneofUint32;
}
inline void TestAllTypesProto3::clear_oneof_uint32() {
  if (_internal_has_oneof_uint32()) {
    _impl_.oneof_field_.oneof_uint32_ = 0u;
    clear_has_oneof_field();
  }
}
inline uint32_t TestAllTypesProto3::_internal_oneof_uint32() const {
  if (_internal_has_oneof_uint32()) {
    return _impl_.oneof_field_.oneof_uint32_;
  }
  return 0u;
}
inline void TestAllTypesProto3::_internal_set_oneof_uint32(uint32_t value) {
  if (!_internal_has_oneof_uint32()) {
    clear_oneof_field();
    set_has_oneof_uint32();
  }
  _impl_.oneof_field_.oneof_uint32_ = value;
}
inline uint32_t TestAllTypesProto3::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_uint32)
  return _internal_oneof_uint32();
}
inline void TestAllTypesProto3::set_oneof_uint32(uint32_t value) {
  _internal_set_oneof_uint32(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_uint32)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3.NestedMessage oneof_nested_message = 112;
inline bool TestAllTypesProto3::_internal_has_oneof_nested_message() const {
  return oneof_field_case() == kOneofNestedMessage;
}
inline bool TestAllTypesProto3::has_oneof_nested_message() const {
  return _internal_has_oneof_nested_message();
}
inline void TestAllTypesProto3::set_has_oneof_nested_message() {
  _impl_._oneof_case_[0] = kOneofNestedMessage;
}
inline void TestAllTypesProto3::clear_oneof_nested_message() {
  if (_internal_has_oneof_nested_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.oneof_field_.oneof_nested_message_;
    }
    clear_has_oneof_field();
  }
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::release_oneof_nested_message() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
  if (_internal_has_oneof_nested_message()) {
    clear_has_oneof_field();
    ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* temp = _impl_.oneof_field_.oneof_nested_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.oneof_field_.oneof_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::_internal_oneof_nested_message() const {
  return _internal_has_oneof_nested_message()
      ? *_impl_.oneof_field_.oneof_nested_message_
      : reinterpret_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage&>(::protobuf_test_messages::proto3::_TestAllTypesProto3_NestedMessage_default_instance_);
}
inline const ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage& TestAllTypesProto3::oneof_nested_message() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
  return _internal_oneof_nested_message();
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::unsafe_arena_release_oneof_nested_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
  if (_internal_has_oneof_nested_message()) {
    clear_has_oneof_field();
    ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* temp = _impl_.oneof_field_.oneof_nested_message_;
    _impl_.oneof_field_.oneof_nested_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_oneof_nested_message(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* oneof_nested_message) {
  clear_oneof_field();
  if (oneof_nested_message) {
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::_internal_mutable_oneof_nested_message() {
  if (!_internal_has_oneof_nested_message()) {
    clear_oneof_field();
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = CreateMaybeMessage< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage >(GetArenaForAllocation());
  }
  return _impl_.oneof_field_.oneof_nested_message_;
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* TestAllTypesProto3::mutable_oneof_nested_message() {
  ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedMessage* _msg = _internal_mutable_oneof_nested_message();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_nested_message)
  return _msg;
}

// string oneof_string = 113;
inline bool TestAllTypesProto3::_internal_has_oneof_string() const {
  return oneof_field_case() == kOneofString;
}
inline bool TestAllTypesProto3::has_oneof_string() const {
  return _internal_has_oneof_string();
}
inline void TestAllTypesProto3::set_has_oneof_string() {
  _impl_._oneof_case_[0] = kOneofString;
}
inline void TestAllTypesProto3::clear_oneof_string() {
  if (_internal_has_oneof_string()) {
    _impl_.oneof_field_.oneof_string_.Destroy();
    clear_has_oneof_field();
  }
}
inline const std::string& TestAllTypesProto3::oneof_string() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string)
  return _internal_oneof_string();
}
template <typename ArgT0, typename... ArgT>
inline void TestAllTypesProto3::set_oneof_string(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string)
}
inline std::string* TestAllTypesProto3::mutable_oneof_string() {
  std::string* _s = _internal_mutable_oneof_string();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_oneof_string() const {
  if (_internal_has_oneof_string()) {
    return _impl_.oneof_field_.oneof_string_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void TestAllTypesProto3::_internal_set_oneof_string(const std::string& value) {
  if (!_internal_has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  _impl_.oneof_field_.oneof_string_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_oneof_string() {
  if (!_internal_has_oneof_string()) {
    clear_oneof_field();
    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitDefault();
  }
  return _impl_.oneof_field_.oneof_string_.Mutable(      GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_oneof_string() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string)
  if (_internal_has_oneof_string()) {
    clear_has_oneof_field();
    return _impl_.oneof_field_.oneof_string_.Release();
  } else {
    return nullptr;
  }
}
inline void TestAllTypesProto3::set_allocated_oneof_string(std::string* oneof_string) {
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (oneof_string != nullptr) {
    set_has_oneof_string();
    _impl_.oneof_field_.oneof_string_.InitAllocated(oneof_string, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_string)
}

// bytes oneof_bytes = 114;
inline bool TestAllTypesProto3::_internal_has_oneof_bytes() const {
  return oneof_field_case() == kOneofBytes;
}
inline bool TestAllTypesProto3::has_oneof_bytes() const {
  return _internal_has_oneof_bytes();
}
inline void TestAllTypesProto3::set_has_oneof_bytes() {
  _impl_._oneof_case_[0] = kOneofBytes;
}
inline void TestAllTypesProto3::clear_oneof_bytes() {
  if (_internal_has_oneof_bytes()) {
    _impl_.oneof_field_.oneof_bytes_.Destroy();
    clear_has_oneof_field();
  }
}
inline const std::string& TestAllTypesProto3::oneof_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bytes)
  return _internal_oneof_bytes();
}
template <typename ArgT0, typename... ArgT>
inline void TestAllTypesProto3::set_oneof_bytes(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.SetBytes( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bytes)
}
inline std::string* TestAllTypesProto3::mutable_oneof_bytes() {
  std::string* _s = _internal_mutable_oneof_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bytes)
  return _s;
}
inline const std::string& TestAllTypesProto3::_internal_oneof_bytes() const {
  if (_internal_has_oneof_bytes()) {
    return _impl_.oneof_field_.oneof_bytes_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void TestAllTypesProto3::_internal_set_oneof_bytes(const std::string& value) {
  if (!_internal_has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  _impl_.oneof_field_.oneof_bytes_.Set(value, GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::_internal_mutable_oneof_bytes() {
  if (!_internal_has_oneof_bytes()) {
    clear_oneof_field();
    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitDefault();
  }
  return _impl_.oneof_field_.oneof_bytes_.Mutable(      GetArenaForAllocation());
}
inline std::string* TestAllTypesProto3::release_oneof_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bytes)
  if (_internal_has_oneof_bytes()) {
    clear_has_oneof_field();
    return _impl_.oneof_field_.oneof_bytes_.Release();
  } else {
    return nullptr;
  }
}
inline void TestAllTypesProto3::set_allocated_oneof_bytes(std::string* oneof_bytes) {
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  if (oneof_bytes != nullptr) {
    set_has_oneof_bytes();
    _impl_.oneof_field_.oneof_bytes_.InitAllocated(oneof_bytes, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bytes)
}

// bool oneof_bool = 115;
inline bool TestAllTypesProto3::_internal_has_oneof_bool() const {
  return oneof_field_case() == kOneofBool;
}
inline bool TestAllTypesProto3::has_oneof_bool() const {
  return _internal_has_oneof_bool();
}
inline void TestAllTypesProto3::set_has_oneof_bool() {
  _impl_._oneof_case_[0] = kOneofBool;
}
inline void TestAllTypesProto3::clear_oneof_bool() {
  if (_internal_has_oneof_bool()) {
    _impl_.oneof_field_.oneof_bool_ = false;
    clear_has_oneof_field();
  }
}
inline bool TestAllTypesProto3::_internal_oneof_bool() const {
  if (_internal_has_oneof_bool()) {
    return _impl_.oneof_field_.oneof_bool_;
  }
  return false;
}
inline void TestAllTypesProto3::_internal_set_oneof_bool(bool value) {
  if (!_internal_has_oneof_bool()) {
    clear_oneof_field();
    set_has_oneof_bool();
  }
  _impl_.oneof_field_.oneof_bool_ = value;
}
inline bool TestAllTypesProto3::oneof_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bool)
  return _internal_oneof_bool();
}
inline void TestAllTypesProto3::set_oneof_bool(bool value) {
  _internal_set_oneof_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_bool)
}

// uint64 oneof_uint64 = 116;
inline bool TestAllTypesProto3::_internal_has_oneof_uint64() const {
  return oneof_field_case() == kOneofUint64;
}
inline bool TestAllTypesProto3::has_oneof_uint64() const {
  return _internal_has_oneof_uint64();
}
inline void TestAllTypesProto3::set_has_oneof_uint64() {
  _impl_._oneof_case_[0] = kOneofUint64;
}
inline void TestAllTypesProto3::clear_oneof_uint64() {
  if (_internal_has_oneof_uint64()) {
    _impl_.oneof_field_.oneof_uint64_ = uint64_t{0u};
    clear_has_oneof_field();
  }
}
inline uint64_t TestAllTypesProto3::_internal_oneof_uint64() const {
  if (_internal_has_oneof_uint64()) {
    return _impl_.oneof_field_.oneof_uint64_;
  }
  return uint64_t{0u};
}
inline void TestAllTypesProto3::_internal_set_oneof_uint64(uint64_t value) {
  if (!_internal_has_oneof_uint64()) {
    clear_oneof_field();
    set_has_oneof_uint64();
  }
  _impl_.oneof_field_.oneof_uint64_ = value;
}
inline uint64_t TestAllTypesProto3::oneof_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_uint64)
  return _internal_oneof_uint64();
}
inline void TestAllTypesProto3::set_oneof_uint64(uint64_t value) {
  _internal_set_oneof_uint64(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_uint64)
}

// float oneof_float = 117;
inline bool TestAllTypesProto3::_internal_has_oneof_float() const {
  return oneof_field_case() == kOneofFloat;
}
inline bool TestAllTypesProto3::has_oneof_float() const {
  return _internal_has_oneof_float();
}
inline void TestAllTypesProto3::set_has_oneof_float() {
  _impl_._oneof_case_[0] = kOneofFloat;
}
inline void TestAllTypesProto3::clear_oneof_float() {
  if (_internal_has_oneof_float()) {
    _impl_.oneof_field_.oneof_float_ = 0;
    clear_has_oneof_field();
  }
}
inline float TestAllTypesProto3::_internal_oneof_float() const {
  if (_internal_has_oneof_float()) {
    return _impl_.oneof_field_.oneof_float_;
  }
  return 0;
}
inline void TestAllTypesProto3::_internal_set_oneof_float(float value) {
  if (!_internal_has_oneof_float()) {
    clear_oneof_field();
    set_has_oneof_float();
  }
  _impl_.oneof_field_.oneof_float_ = value;
}
inline float TestAllTypesProto3::oneof_float() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_float)
  return _internal_oneof_float();
}
inline void TestAllTypesProto3::set_oneof_float(float value) {
  _internal_set_oneof_float(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_float)
}

// double oneof_double = 118;
inline bool TestAllTypesProto3::_internal_has_oneof_double() const {
  return oneof_field_case() == kOneofDouble;
}
inline bool TestAllTypesProto3::has_oneof_double() const {
  return _internal_has_oneof_double();
}
inline void TestAllTypesProto3::set_has_oneof_double() {
  _impl_._oneof_case_[0] = kOneofDouble;
}
inline void TestAllTypesProto3::clear_oneof_double() {
  if (_internal_has_oneof_double()) {
    _impl_.oneof_field_.oneof_double_ = 0;
    clear_has_oneof_field();
  }
}
inline double TestAllTypesProto3::_internal_oneof_double() const {
  if (_internal_has_oneof_double()) {
    return _impl_.oneof_field_.oneof_double_;
  }
  return 0;
}
inline void TestAllTypesProto3::_internal_set_oneof_double(double value) {
  if (!_internal_has_oneof_double()) {
    clear_oneof_field();
    set_has_oneof_double();
  }
  _impl_.oneof_field_.oneof_double_ = value;
}
inline double TestAllTypesProto3::oneof_double() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_double)
  return _internal_oneof_double();
}
inline void TestAllTypesProto3::set_oneof_double(double value) {
  _internal_set_oneof_double(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_double)
}

// .protobuf_test_messages.proto3.TestAllTypesProto3.NestedEnum oneof_enum = 119;
inline bool TestAllTypesProto3::_internal_has_oneof_enum() const {
  return oneof_field_case() == kOneofEnum;
}
inline bool TestAllTypesProto3::has_oneof_enum() const {
  return _internal_has_oneof_enum();
}
inline void TestAllTypesProto3::set_has_oneof_enum() {
  _impl_._oneof_case_[0] = kOneofEnum;
}
inline void TestAllTypesProto3::clear_oneof_enum() {
  if (_internal_has_oneof_enum()) {
    _impl_.oneof_field_.oneof_enum_ = 0;
    clear_has_oneof_field();
  }
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::_internal_oneof_enum() const {
  if (_internal_has_oneof_enum()) {
    return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(_impl_.oneof_field_.oneof_enum_);
  }
  return static_cast< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum >(0);
}
inline ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum TestAllTypesProto3::oneof_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_enum)
  return _internal_oneof_enum();
}
inline void TestAllTypesProto3::_internal_set_oneof_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  if (!_internal_has_oneof_enum()) {
    clear_oneof_field();
    set_has_oneof_enum();
  }
  _impl_.oneof_field_.oneof_enum_ = value;
}
inline void TestAllTypesProto3::set_oneof_enum(::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum value) {
  _internal_set_oneof_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_enum)
}

// .google.protobuf.NullValue oneof_null_value = 120;
inline bool TestAllTypesProto3::_internal_has_oneof_null_value() const {
  return oneof_field_case() == kOneofNullValue;
}
inline bool TestAllTypesProto3::has_oneof_null_value() const {
  return _internal_has_oneof_null_value();
}
inline void TestAllTypesProto3::set_has_oneof_null_value() {
  _impl_._oneof_case_[0] = kOneofNullValue;
}
inline void TestAllTypesProto3::clear_oneof_null_value() {
  if (_internal_has_oneof_null_value()) {
    _impl_.oneof_field_.oneof_null_value_ = 0;
    clear_has_oneof_field();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::NullValue TestAllTypesProto3::_internal_oneof_null_value() const {
  if (_internal_has_oneof_null_value()) {
    return static_cast< ::PROTOBUF_NAMESPACE_ID::NullValue >(_impl_.oneof_field_.oneof_null_value_);
  }
  return static_cast< ::PROTOBUF_NAMESPACE_ID::NullValue >(0);
}
inline ::PROTOBUF_NAMESPACE_ID::NullValue TestAllTypesProto3::oneof_null_value() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_null_value)
  return _internal_oneof_null_value();
}
inline void TestAllTypesProto3::_internal_set_oneof_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value) {
  if (!_internal_has_oneof_null_value()) {
    clear_oneof_field();
    set_has_oneof_null_value();
  }
  _impl_.oneof_field_.oneof_null_value_ = value;
}
inline void TestAllTypesProto3::set_oneof_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value) {
  _internal_set_oneof_null_value(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.oneof_null_value)
}

// .google.protobuf.BoolValue optional_bool_wrapper = 201;
inline bool TestAllTypesProto3::_internal_has_optional_bool_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_bool_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_bool_wrapper() const {
  return _internal_has_optional_bool_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& TestAllTypesProto3::_internal_optional_bool_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = _impl_.optional_bool_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& TestAllTypesProto3::optional_bool_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
  return _internal_optional_bool_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_bool_wrapper(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* optional_bool_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_bool_wrapper_);
  }
  _impl_.optional_bool_wrapper_ = optional_bool_wrapper;
  if (optional_bool_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::release_optional_bool_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.optional_bool_wrapper_;
  _impl_.optional_bool_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::unsafe_arena_release_optional_bool_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = _impl_.optional_bool_wrapper_;
  _impl_.optional_bool_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::_internal_mutable_optional_bool_wrapper() {
  
  if (_impl_.optional_bool_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    _impl_.optional_bool_wrapper_ = p;
  }
  return _impl_.optional_bool_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::mutable_optional_bool_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_optional_bool_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_bool_wrapper(::PROTOBUF_NAMESPACE_ID::BoolValue* optional_bool_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_bool_wrapper_);
  }
  if (optional_bool_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_bool_wrapper));
    if (message_arena != submessage_arena) {
      optional_bool_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_bool_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_bool_wrapper_ = optional_bool_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bool_wrapper)
}

// .google.protobuf.Int32Value optional_int32_wrapper = 202;
inline bool TestAllTypesProto3::_internal_has_optional_int32_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_int32_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_int32_wrapper() const {
  return _internal_has_optional_int32_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& TestAllTypesProto3::_internal_optional_int32_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::Int32Value* p = _impl_.optional_int32_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int32Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int32Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& TestAllTypesProto3::optional_int32_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
  return _internal_optional_int32_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_int32_wrapper(
    ::PROTOBUF_NAMESPACE_ID::Int32Value* optional_int32_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_int32_wrapper_);
  }
  _impl_.optional_int32_wrapper_ = optional_int32_wrapper;
  if (optional_int32_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::release_optional_int32_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::Int32Value* temp = _impl_.optional_int32_wrapper_;
  _impl_.optional_int32_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::unsafe_arena_release_optional_int32_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::Int32Value* temp = _impl_.optional_int32_wrapper_;
  _impl_.optional_int32_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::_internal_mutable_optional_int32_wrapper() {
  
  if (_impl_.optional_int32_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int32Value>(GetArenaForAllocation());
    _impl_.optional_int32_wrapper_ = p;
  }
  return _impl_.optional_int32_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::mutable_optional_int32_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _msg = _internal_mutable_optional_int32_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_int32_wrapper(::PROTOBUF_NAMESPACE_ID::Int32Value* optional_int32_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_int32_wrapper_);
  }
  if (optional_int32_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_int32_wrapper));
    if (message_arena != submessage_arena) {
      optional_int32_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_int32_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_int32_wrapper_ = optional_int32_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int32_wrapper)
}

// .google.protobuf.Int64Value optional_int64_wrapper = 203;
inline bool TestAllTypesProto3::_internal_has_optional_int64_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_int64_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_int64_wrapper() const {
  return _internal_has_optional_int64_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& TestAllTypesProto3::_internal_optional_int64_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::Int64Value* p = _impl_.optional_int64_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Int64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Int64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& TestAllTypesProto3::optional_int64_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
  return _internal_optional_int64_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_int64_wrapper(
    ::PROTOBUF_NAMESPACE_ID::Int64Value* optional_int64_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_int64_wrapper_);
  }
  _impl_.optional_int64_wrapper_ = optional_int64_wrapper;
  if (optional_int64_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::release_optional_int64_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.optional_int64_wrapper_;
  _impl_.optional_int64_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::unsafe_arena_release_optional_int64_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::Int64Value* temp = _impl_.optional_int64_wrapper_;
  _impl_.optional_int64_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::_internal_mutable_optional_int64_wrapper() {
  
  if (_impl_.optional_int64_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Int64Value>(GetArenaForAllocation());
    _impl_.optional_int64_wrapper_ = p;
  }
  return _impl_.optional_int64_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::mutable_optional_int64_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _msg = _internal_mutable_optional_int64_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_int64_wrapper(::PROTOBUF_NAMESPACE_ID::Int64Value* optional_int64_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_int64_wrapper_);
  }
  if (optional_int64_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_int64_wrapper));
    if (message_arena != submessage_arena) {
      optional_int64_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_int64_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_int64_wrapper_ = optional_int64_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_int64_wrapper)
}

// .google.protobuf.UInt32Value optional_uint32_wrapper = 204;
inline bool TestAllTypesProto3::_internal_has_optional_uint32_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_uint32_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_uint32_wrapper() const {
  return _internal_has_optional_uint32_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& TestAllTypesProto3::_internal_optional_uint32_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt32Value* p = _impl_.optional_uint32_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt32Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt32Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& TestAllTypesProto3::optional_uint32_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
  return _internal_optional_uint32_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_uint32_wrapper(
    ::PROTOBUF_NAMESPACE_ID::UInt32Value* optional_uint32_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_uint32_wrapper_);
  }
  _impl_.optional_uint32_wrapper_ = optional_uint32_wrapper;
  if (optional_uint32_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::release_optional_uint32_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* temp = _impl_.optional_uint32_wrapper_;
  _impl_.optional_uint32_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::unsafe_arena_release_optional_uint32_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* temp = _impl_.optional_uint32_wrapper_;
  _impl_.optional_uint32_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::_internal_mutable_optional_uint32_wrapper() {
  
  if (_impl_.optional_uint32_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt32Value>(GetArenaForAllocation());
    _impl_.optional_uint32_wrapper_ = p;
  }
  return _impl_.optional_uint32_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::mutable_optional_uint32_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _msg = _internal_mutable_optional_uint32_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_uint32_wrapper(::PROTOBUF_NAMESPACE_ID::UInt32Value* optional_uint32_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_uint32_wrapper_);
  }
  if (optional_uint32_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_uint32_wrapper));
    if (message_arena != submessage_arena) {
      optional_uint32_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_uint32_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_uint32_wrapper_ = optional_uint32_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint32_wrapper)
}

// .google.protobuf.UInt64Value optional_uint64_wrapper = 205;
inline bool TestAllTypesProto3::_internal_has_optional_uint64_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_uint64_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_uint64_wrapper() const {
  return _internal_has_optional_uint64_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& TestAllTypesProto3::_internal_optional_uint64_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::UInt64Value* p = _impl_.optional_uint64_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::UInt64Value&>(
      ::PROTOBUF_NAMESPACE_ID::_UInt64Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& TestAllTypesProto3::optional_uint64_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
  return _internal_optional_uint64_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_uint64_wrapper(
    ::PROTOBUF_NAMESPACE_ID::UInt64Value* optional_uint64_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_uint64_wrapper_);
  }
  _impl_.optional_uint64_wrapper_ = optional_uint64_wrapper;
  if (optional_uint64_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::release_optional_uint64_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = _impl_.optional_uint64_wrapper_;
  _impl_.optional_uint64_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::unsafe_arena_release_optional_uint64_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* temp = _impl_.optional_uint64_wrapper_;
  _impl_.optional_uint64_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::_internal_mutable_optional_uint64_wrapper() {
  
  if (_impl_.optional_uint64_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::UInt64Value>(GetArenaForAllocation());
    _impl_.optional_uint64_wrapper_ = p;
  }
  return _impl_.optional_uint64_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::mutable_optional_uint64_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _msg = _internal_mutable_optional_uint64_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_uint64_wrapper(::PROTOBUF_NAMESPACE_ID::UInt64Value* optional_uint64_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_uint64_wrapper_);
  }
  if (optional_uint64_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_uint64_wrapper));
    if (message_arena != submessage_arena) {
      optional_uint64_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_uint64_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_uint64_wrapper_ = optional_uint64_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_uint64_wrapper)
}

// .google.protobuf.FloatValue optional_float_wrapper = 206;
inline bool TestAllTypesProto3::_internal_has_optional_float_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_float_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_float_wrapper() const {
  return _internal_has_optional_float_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& TestAllTypesProto3::_internal_optional_float_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.optional_float_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& TestAllTypesProto3::optional_float_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
  return _internal_optional_float_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_float_wrapper(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* optional_float_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_float_wrapper_);
  }
  _impl_.optional_float_wrapper_ = optional_float_wrapper;
  if (optional_float_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::release_optional_float_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.optional_float_wrapper_;
  _impl_.optional_float_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::unsafe_arena_release_optional_float_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.optional_float_wrapper_;
  _impl_.optional_float_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::_internal_mutable_optional_float_wrapper() {
  
  if (_impl_.optional_float_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.optional_float_wrapper_ = p;
  }
  return _impl_.optional_float_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::mutable_optional_float_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_optional_float_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_float_wrapper(::PROTOBUF_NAMESPACE_ID::FloatValue* optional_float_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_float_wrapper_);
  }
  if (optional_float_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_float_wrapper));
    if (message_arena != submessage_arena) {
      optional_float_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_float_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_float_wrapper_ = optional_float_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_float_wrapper)
}

// .google.protobuf.DoubleValue optional_double_wrapper = 207;
inline bool TestAllTypesProto3::_internal_has_optional_double_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_double_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_double_wrapper() const {
  return _internal_has_optional_double_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& TestAllTypesProto3::_internal_optional_double_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::DoubleValue* p = _impl_.optional_double_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::DoubleValue&>(
      ::PROTOBUF_NAMESPACE_ID::_DoubleValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& TestAllTypesProto3::optional_double_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
  return _internal_optional_double_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_double_wrapper(
    ::PROTOBUF_NAMESPACE_ID::DoubleValue* optional_double_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_double_wrapper_);
  }
  _impl_.optional_double_wrapper_ = optional_double_wrapper;
  if (optional_double_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::release_optional_double_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.optional_double_wrapper_;
  _impl_.optional_double_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::unsafe_arena_release_optional_double_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* temp = _impl_.optional_double_wrapper_;
  _impl_.optional_double_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::_internal_mutable_optional_double_wrapper() {
  
  if (_impl_.optional_double_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::DoubleValue>(GetArenaForAllocation());
    _impl_.optional_double_wrapper_ = p;
  }
  return _impl_.optional_double_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::mutable_optional_double_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _msg = _internal_mutable_optional_double_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_double_wrapper(::PROTOBUF_NAMESPACE_ID::DoubleValue* optional_double_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_double_wrapper_);
  }
  if (optional_double_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_double_wrapper));
    if (message_arena != submessage_arena) {
      optional_double_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_double_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_double_wrapper_ = optional_double_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_double_wrapper)
}

// .google.protobuf.StringValue optional_string_wrapper = 208;
inline bool TestAllTypesProto3::_internal_has_optional_string_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_string_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_string_wrapper() const {
  return _internal_has_optional_string_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& TestAllTypesProto3::_internal_optional_string_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::StringValue* p = _impl_.optional_string_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::StringValue&>(
      ::PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& TestAllTypesProto3::optional_string_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
  return _internal_optional_string_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_string_wrapper(
    ::PROTOBUF_NAMESPACE_ID::StringValue* optional_string_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_string_wrapper_);
  }
  _impl_.optional_string_wrapper_ = optional_string_wrapper;
  if (optional_string_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::release_optional_string_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = _impl_.optional_string_wrapper_;
  _impl_.optional_string_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::unsafe_arena_release_optional_string_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = _impl_.optional_string_wrapper_;
  _impl_.optional_string_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::_internal_mutable_optional_string_wrapper() {
  
  if (_impl_.optional_string_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaForAllocation());
    _impl_.optional_string_wrapper_ = p;
  }
  return _impl_.optional_string_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::mutable_optional_string_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::StringValue* _msg = _internal_mutable_optional_string_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_string_wrapper(::PROTOBUF_NAMESPACE_ID::StringValue* optional_string_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_string_wrapper_);
  }
  if (optional_string_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_string_wrapper));
    if (message_arena != submessage_arena) {
      optional_string_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_string_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_string_wrapper_ = optional_string_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_string_wrapper)
}

// .google.protobuf.BytesValue optional_bytes_wrapper = 209;
inline bool TestAllTypesProto3::_internal_has_optional_bytes_wrapper() const {
  return this != internal_default_instance() && _impl_.optional_bytes_wrapper_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_bytes_wrapper() const {
  return _internal_has_optional_bytes_wrapper();
}
inline const ::PROTOBUF_NAMESPACE_ID::BytesValue& TestAllTypesProto3::_internal_optional_bytes_wrapper() const {
  const ::PROTOBUF_NAMESPACE_ID::BytesValue* p = _impl_.optional_bytes_wrapper_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BytesValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BytesValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BytesValue& TestAllTypesProto3::optional_bytes_wrapper() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
  return _internal_optional_bytes_wrapper();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_bytes_wrapper(
    ::PROTOBUF_NAMESPACE_ID::BytesValue* optional_bytes_wrapper) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_bytes_wrapper_);
  }
  _impl_.optional_bytes_wrapper_ = optional_bytes_wrapper;
  if (optional_bytes_wrapper) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::release_optional_bytes_wrapper() {
  
  ::PROTOBUF_NAMESPACE_ID::BytesValue* temp = _impl_.optional_bytes_wrapper_;
  _impl_.optional_bytes_wrapper_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::unsafe_arena_release_optional_bytes_wrapper() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
  
  ::PROTOBUF_NAMESPACE_ID::BytesValue* temp = _impl_.optional_bytes_wrapper_;
  _impl_.optional_bytes_wrapper_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::_internal_mutable_optional_bytes_wrapper() {
  
  if (_impl_.optional_bytes_wrapper_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BytesValue>(GetArenaForAllocation());
    _impl_.optional_bytes_wrapper_ = p;
  }
  return _impl_.optional_bytes_wrapper_;
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::mutable_optional_bytes_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::BytesValue* _msg = _internal_mutable_optional_bytes_wrapper();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_bytes_wrapper(::PROTOBUF_NAMESPACE_ID::BytesValue* optional_bytes_wrapper) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_bytes_wrapper_);
  }
  if (optional_bytes_wrapper) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_bytes_wrapper));
    if (message_arena != submessage_arena) {
      optional_bytes_wrapper = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_bytes_wrapper, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_bytes_wrapper_ = optional_bytes_wrapper;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_bytes_wrapper)
}

// repeated .google.protobuf.BoolValue repeated_bool_wrapper = 211;
inline int TestAllTypesProto3::_internal_repeated_bool_wrapper_size() const {
  return _impl_.repeated_bool_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_bool_wrapper_size() const {
  return _internal_repeated_bool_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::mutable_repeated_bool_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool_wrapper)
  return _impl_.repeated_bool_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BoolValue >*
TestAllTypesProto3::mutable_repeated_bool_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool_wrapper)
  return &_impl_.repeated_bool_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& TestAllTypesProto3::_internal_repeated_bool_wrapper(int index) const {
  return _impl_.repeated_bool_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& TestAllTypesProto3::repeated_bool_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool_wrapper)
  return _internal_repeated_bool_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::_internal_add_repeated_bool_wrapper() {
  return _impl_.repeated_bool_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* TestAllTypesProto3::add_repeated_bool_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _add = _internal_add_repeated_bool_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BoolValue >&
TestAllTypesProto3::repeated_bool_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bool_wrapper)
  return _impl_.repeated_bool_wrapper_;
}

// repeated .google.protobuf.Int32Value repeated_int32_wrapper = 212;
inline int TestAllTypesProto3::_internal_repeated_int32_wrapper_size() const {
  return _impl_.repeated_int32_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_int32_wrapper_size() const {
  return _internal_repeated_int32_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::mutable_repeated_int32_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32_wrapper)
  return _impl_.repeated_int32_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int32Value >*
TestAllTypesProto3::mutable_repeated_int32_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32_wrapper)
  return &_impl_.repeated_int32_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& TestAllTypesProto3::_internal_repeated_int32_wrapper(int index) const {
  return _impl_.repeated_int32_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int32Value& TestAllTypesProto3::repeated_int32_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32_wrapper)
  return _internal_repeated_int32_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::_internal_add_repeated_int32_wrapper() {
  return _impl_.repeated_int32_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Int32Value* TestAllTypesProto3::add_repeated_int32_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::Int32Value* _add = _internal_add_repeated_int32_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int32Value >&
TestAllTypesProto3::repeated_int32_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int32_wrapper)
  return _impl_.repeated_int32_wrapper_;
}

// repeated .google.protobuf.Int64Value repeated_int64_wrapper = 213;
inline int TestAllTypesProto3::_internal_repeated_int64_wrapper_size() const {
  return _impl_.repeated_int64_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_int64_wrapper_size() const {
  return _internal_repeated_int64_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::mutable_repeated_int64_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64_wrapper)
  return _impl_.repeated_int64_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int64Value >*
TestAllTypesProto3::mutable_repeated_int64_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64_wrapper)
  return &_impl_.repeated_int64_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& TestAllTypesProto3::_internal_repeated_int64_wrapper(int index) const {
  return _impl_.repeated_int64_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Int64Value& TestAllTypesProto3::repeated_int64_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64_wrapper)
  return _internal_repeated_int64_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::_internal_add_repeated_int64_wrapper() {
  return _impl_.repeated_int64_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Int64Value* TestAllTypesProto3::add_repeated_int64_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::Int64Value* _add = _internal_add_repeated_int64_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Int64Value >&
TestAllTypesProto3::repeated_int64_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_int64_wrapper)
  return _impl_.repeated_int64_wrapper_;
}

// repeated .google.protobuf.UInt32Value repeated_uint32_wrapper = 214;
inline int TestAllTypesProto3::_internal_repeated_uint32_wrapper_size() const {
  return _impl_.repeated_uint32_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_uint32_wrapper_size() const {
  return _internal_repeated_uint32_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::mutable_repeated_uint32_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32_wrapper)
  return _impl_.repeated_uint32_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt32Value >*
TestAllTypesProto3::mutable_repeated_uint32_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32_wrapper)
  return &_impl_.repeated_uint32_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& TestAllTypesProto3::_internal_repeated_uint32_wrapper(int index) const {
  return _impl_.repeated_uint32_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt32Value& TestAllTypesProto3::repeated_uint32_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32_wrapper)
  return _internal_repeated_uint32_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::_internal_add_repeated_uint32_wrapper() {
  return _impl_.repeated_uint32_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::UInt32Value* TestAllTypesProto3::add_repeated_uint32_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::UInt32Value* _add = _internal_add_repeated_uint32_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt32Value >&
TestAllTypesProto3::repeated_uint32_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint32_wrapper)
  return _impl_.repeated_uint32_wrapper_;
}

// repeated .google.protobuf.UInt64Value repeated_uint64_wrapper = 215;
inline int TestAllTypesProto3::_internal_repeated_uint64_wrapper_size() const {
  return _impl_.repeated_uint64_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_uint64_wrapper_size() const {
  return _internal_repeated_uint64_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::mutable_repeated_uint64_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64_wrapper)
  return _impl_.repeated_uint64_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt64Value >*
TestAllTypesProto3::mutable_repeated_uint64_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64_wrapper)
  return &_impl_.repeated_uint64_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& TestAllTypesProto3::_internal_repeated_uint64_wrapper(int index) const {
  return _impl_.repeated_uint64_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::UInt64Value& TestAllTypesProto3::repeated_uint64_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64_wrapper)
  return _internal_repeated_uint64_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::_internal_add_repeated_uint64_wrapper() {
  return _impl_.repeated_uint64_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::UInt64Value* TestAllTypesProto3::add_repeated_uint64_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::UInt64Value* _add = _internal_add_repeated_uint64_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::UInt64Value >&
TestAllTypesProto3::repeated_uint64_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_uint64_wrapper)
  return _impl_.repeated_uint64_wrapper_;
}

// repeated .google.protobuf.FloatValue repeated_float_wrapper = 216;
inline int TestAllTypesProto3::_internal_repeated_float_wrapper_size() const {
  return _impl_.repeated_float_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_float_wrapper_size() const {
  return _internal_repeated_float_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::mutable_repeated_float_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float_wrapper)
  return _impl_.repeated_float_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FloatValue >*
TestAllTypesProto3::mutable_repeated_float_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float_wrapper)
  return &_impl_.repeated_float_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& TestAllTypesProto3::_internal_repeated_float_wrapper(int index) const {
  return _impl_.repeated_float_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& TestAllTypesProto3::repeated_float_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float_wrapper)
  return _internal_repeated_float_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::_internal_add_repeated_float_wrapper() {
  return _impl_.repeated_float_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* TestAllTypesProto3::add_repeated_float_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _add = _internal_add_repeated_float_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FloatValue >&
TestAllTypesProto3::repeated_float_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_float_wrapper)
  return _impl_.repeated_float_wrapper_;
}

// repeated .google.protobuf.DoubleValue repeated_double_wrapper = 217;
inline int TestAllTypesProto3::_internal_repeated_double_wrapper_size() const {
  return _impl_.repeated_double_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_double_wrapper_size() const {
  return _internal_repeated_double_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::mutable_repeated_double_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double_wrapper)
  return _impl_.repeated_double_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::DoubleValue >*
TestAllTypesProto3::mutable_repeated_double_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double_wrapper)
  return &_impl_.repeated_double_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& TestAllTypesProto3::_internal_repeated_double_wrapper(int index) const {
  return _impl_.repeated_double_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::DoubleValue& TestAllTypesProto3::repeated_double_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double_wrapper)
  return _internal_repeated_double_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::_internal_add_repeated_double_wrapper() {
  return _impl_.repeated_double_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::DoubleValue* TestAllTypesProto3::add_repeated_double_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::DoubleValue* _add = _internal_add_repeated_double_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::DoubleValue >&
TestAllTypesProto3::repeated_double_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_double_wrapper)
  return _impl_.repeated_double_wrapper_;
}

// repeated .google.protobuf.StringValue repeated_string_wrapper = 218;
inline int TestAllTypesProto3::_internal_repeated_string_wrapper_size() const {
  return _impl_.repeated_string_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_string_wrapper_size() const {
  return _internal_repeated_string_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::mutable_repeated_string_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_wrapper)
  return _impl_.repeated_string_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::StringValue >*
TestAllTypesProto3::mutable_repeated_string_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_wrapper)
  return &_impl_.repeated_string_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& TestAllTypesProto3::_internal_repeated_string_wrapper(int index) const {
  return _impl_.repeated_string_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& TestAllTypesProto3::repeated_string_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_wrapper)
  return _internal_repeated_string_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::_internal_add_repeated_string_wrapper() {
  return _impl_.repeated_string_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* TestAllTypesProto3::add_repeated_string_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::StringValue* _add = _internal_add_repeated_string_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::StringValue >&
TestAllTypesProto3::repeated_string_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_string_wrapper)
  return _impl_.repeated_string_wrapper_;
}

// repeated .google.protobuf.BytesValue repeated_bytes_wrapper = 219;
inline int TestAllTypesProto3::_internal_repeated_bytes_wrapper_size() const {
  return _impl_.repeated_bytes_wrapper_.size();
}
inline int TestAllTypesProto3::repeated_bytes_wrapper_size() const {
  return _internal_repeated_bytes_wrapper_size();
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::mutable_repeated_bytes_wrapper(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes_wrapper)
  return _impl_.repeated_bytes_wrapper_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BytesValue >*
TestAllTypesProto3::mutable_repeated_bytes_wrapper() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes_wrapper)
  return &_impl_.repeated_bytes_wrapper_;
}
inline const ::PROTOBUF_NAMESPACE_ID::BytesValue& TestAllTypesProto3::_internal_repeated_bytes_wrapper(int index) const {
  return _impl_.repeated_bytes_wrapper_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::BytesValue& TestAllTypesProto3::repeated_bytes_wrapper(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes_wrapper)
  return _internal_repeated_bytes_wrapper(index);
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::_internal_add_repeated_bytes_wrapper() {
  return _impl_.repeated_bytes_wrapper_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::BytesValue* TestAllTypesProto3::add_repeated_bytes_wrapper() {
  ::PROTOBUF_NAMESPACE_ID::BytesValue* _add = _internal_add_repeated_bytes_wrapper();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes_wrapper)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::BytesValue >&
TestAllTypesProto3::repeated_bytes_wrapper() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_bytes_wrapper)
  return _impl_.repeated_bytes_wrapper_;
}

// .google.protobuf.Duration optional_duration = 301;
inline bool TestAllTypesProto3::_internal_has_optional_duration() const {
  return this != internal_default_instance() && _impl_.optional_duration_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_duration() const {
  return _internal_has_optional_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& TestAllTypesProto3::_internal_optional_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.optional_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& TestAllTypesProto3::optional_duration() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
  return _internal_optional_duration();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* optional_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_duration_);
  }
  _impl_.optional_duration_ = optional_duration;
  if (optional_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::release_optional_duration() {
  
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.optional_duration_;
  _impl_.optional_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::unsafe_arena_release_optional_duration() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
  
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.optional_duration_;
  _impl_.optional_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::_internal_mutable_optional_duration() {
  
  if (_impl_.optional_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.optional_duration_ = p;
  }
  return _impl_.optional_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::mutable_optional_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_optional_duration();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_duration(::PROTOBUF_NAMESPACE_ID::Duration* optional_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_duration_);
  }
  if (optional_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_duration));
    if (message_arena != submessage_arena) {
      optional_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_duration, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_duration_ = optional_duration;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_duration)
}

// .google.protobuf.Timestamp optional_timestamp = 302;
inline bool TestAllTypesProto3::_internal_has_optional_timestamp() const {
  return this != internal_default_instance() && _impl_.optional_timestamp_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_timestamp() const {
  return _internal_has_optional_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& TestAllTypesProto3::_internal_optional_timestamp() const {
  const ::PROTOBUF_NAMESPACE_ID::Timestamp* p = _impl_.optional_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Timestamp&>(
      ::PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& TestAllTypesProto3::optional_timestamp() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
  return _internal_optional_timestamp();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_timestamp(
    ::PROTOBUF_NAMESPACE_ID::Timestamp* optional_timestamp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_timestamp_);
  }
  _impl_.optional_timestamp_ = optional_timestamp;
  if (optional_timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::release_optional_timestamp() {
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.optional_timestamp_;
  _impl_.optional_timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::unsafe_arena_release_optional_timestamp() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
  
  ::PROTOBUF_NAMESPACE_ID::Timestamp* temp = _impl_.optional_timestamp_;
  _impl_.optional_timestamp_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::_internal_mutable_optional_timestamp() {
  
  if (_impl_.optional_timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaForAllocation());
    _impl_.optional_timestamp_ = p;
  }
  return _impl_.optional_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::mutable_optional_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _msg = _internal_mutable_optional_timestamp();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* optional_timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_timestamp_);
  }
  if (optional_timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_timestamp));
    if (message_arena != submessage_arena) {
      optional_timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_timestamp_ = optional_timestamp;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_timestamp)
}

// .google.protobuf.FieldMask optional_field_mask = 303;
inline bool TestAllTypesProto3::_internal_has_optional_field_mask() const {
  return this != internal_default_instance() && _impl_.optional_field_mask_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_field_mask() const {
  return _internal_has_optional_field_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& TestAllTypesProto3::_internal_optional_field_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.optional_field_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& TestAllTypesProto3::optional_field_mask() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
  return _internal_optional_field_mask();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_field_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* optional_field_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_field_mask_);
  }
  _impl_.optional_field_mask_ = optional_field_mask;
  if (optional_field_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::release_optional_field_mask() {
  
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.optional_field_mask_;
  _impl_.optional_field_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::unsafe_arena_release_optional_field_mask() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
  
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.optional_field_mask_;
  _impl_.optional_field_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::_internal_mutable_optional_field_mask() {
  
  if (_impl_.optional_field_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.optional_field_mask_ = p;
  }
  return _impl_.optional_field_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::mutable_optional_field_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_optional_field_mask();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_field_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* optional_field_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_field_mask_);
  }
  if (optional_field_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_field_mask));
    if (message_arena != submessage_arena) {
      optional_field_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_field_mask, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_field_mask_ = optional_field_mask;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_field_mask)
}

// .google.protobuf.Struct optional_struct = 304;
inline bool TestAllTypesProto3::_internal_has_optional_struct() const {
  return this != internal_default_instance() && _impl_.optional_struct_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_struct() const {
  return _internal_has_optional_struct();
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& TestAllTypesProto3::_internal_optional_struct() const {
  const ::PROTOBUF_NAMESPACE_ID::Struct* p = _impl_.optional_struct_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Struct&>(
      ::PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& TestAllTypesProto3::optional_struct() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
  return _internal_optional_struct();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_struct(
    ::PROTOBUF_NAMESPACE_ID::Struct* optional_struct) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_struct_);
  }
  _impl_.optional_struct_ = optional_struct;
  if (optional_struct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::release_optional_struct() {
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = _impl_.optional_struct_;
  _impl_.optional_struct_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::unsafe_arena_release_optional_struct() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = _impl_.optional_struct_;
  _impl_.optional_struct_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::_internal_mutable_optional_struct() {
  
  if (_impl_.optional_struct_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Struct>(GetArenaForAllocation());
    _impl_.optional_struct_ = p;
  }
  return _impl_.optional_struct_;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::mutable_optional_struct() {
  ::PROTOBUF_NAMESPACE_ID::Struct* _msg = _internal_mutable_optional_struct();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_struct(::PROTOBUF_NAMESPACE_ID::Struct* optional_struct) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_struct_);
  }
  if (optional_struct) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_struct));
    if (message_arena != submessage_arena) {
      optional_struct = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_struct, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_struct_ = optional_struct;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_struct)
}

// .google.protobuf.Any optional_any = 305;
inline bool TestAllTypesProto3::_internal_has_optional_any() const {
  return this != internal_default_instance() && _impl_.optional_any_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_any() const {
  return _internal_has_optional_any();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& TestAllTypesProto3::_internal_optional_any() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.optional_any_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& TestAllTypesProto3::optional_any() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
  return _internal_optional_any();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_any(
    ::PROTOBUF_NAMESPACE_ID::Any* optional_any) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_any_);
  }
  _impl_.optional_any_ = optional_any;
  if (optional_any) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::release_optional_any() {
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.optional_any_;
  _impl_.optional_any_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::unsafe_arena_release_optional_any() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.optional_any_;
  _impl_.optional_any_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::_internal_mutable_optional_any() {
  
  if (_impl_.optional_any_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.optional_any_ = p;
  }
  return _impl_.optional_any_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::mutable_optional_any() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_optional_any();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_any(::PROTOBUF_NAMESPACE_ID::Any* optional_any) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_any_);
  }
  if (optional_any) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_any));
    if (message_arena != submessage_arena) {
      optional_any = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_any, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_any_ = optional_any;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_any)
}

// .google.protobuf.Value optional_value = 306;
inline bool TestAllTypesProto3::_internal_has_optional_value() const {
  return this != internal_default_instance() && _impl_.optional_value_ != nullptr;
}
inline bool TestAllTypesProto3::has_optional_value() const {
  return _internal_has_optional_value();
}
inline const ::PROTOBUF_NAMESPACE_ID::Value& TestAllTypesProto3::_internal_optional_value() const {
  const ::PROTOBUF_NAMESPACE_ID::Value* p = _impl_.optional_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Value&>(
      ::PROTOBUF_NAMESPACE_ID::_Value_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Value& TestAllTypesProto3::optional_value() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
  return _internal_optional_value();
}
inline void TestAllTypesProto3::unsafe_arena_set_allocated_optional_value(
    ::PROTOBUF_NAMESPACE_ID::Value* optional_value) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_value_);
  }
  _impl_.optional_value_ = optional_value;
  if (optional_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::release_optional_value() {
  
  ::PROTOBUF_NAMESPACE_ID::Value* temp = _impl_.optional_value_;
  _impl_.optional_value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::unsafe_arena_release_optional_value() {
  // @@protoc_insertion_point(field_release:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
  
  ::PROTOBUF_NAMESPACE_ID::Value* temp = _impl_.optional_value_;
  _impl_.optional_value_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::_internal_mutable_optional_value() {
  
  if (_impl_.optional_value_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Value>(GetArenaForAllocation());
    _impl_.optional_value_ = p;
  }
  return _impl_.optional_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::mutable_optional_value() {
  ::PROTOBUF_NAMESPACE_ID::Value* _msg = _internal_mutable_optional_value();
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
  return _msg;
}
inline void TestAllTypesProto3::set_allocated_optional_value(::PROTOBUF_NAMESPACE_ID::Value* optional_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.optional_value_);
  }
  if (optional_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_value));
    if (message_arena != submessage_arena) {
      optional_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_value, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.optional_value_ = optional_value;
  // @@protoc_insertion_point(field_set_allocated:protobuf_test_messages.proto3.TestAllTypesProto3.optional_value)
}

// .google.protobuf.NullValue optional_null_value = 307;
inline void TestAllTypesProto3::clear_optional_null_value() {
  _impl_.optional_null_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::NullValue TestAllTypesProto3::_internal_optional_null_value() const {
  return static_cast< ::PROTOBUF_NAMESPACE_ID::NullValue >(_impl_.optional_null_value_);
}
inline ::PROTOBUF_NAMESPACE_ID::NullValue TestAllTypesProto3::optional_null_value() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.optional_null_value)
  return _internal_optional_null_value();
}
inline void TestAllTypesProto3::_internal_set_optional_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value) {
  
  _impl_.optional_null_value_ = value;
}
inline void TestAllTypesProto3::set_optional_null_value(::PROTOBUF_NAMESPACE_ID::NullValue value) {
  _internal_set_optional_null_value(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.optional_null_value)
}

// repeated .google.protobuf.Duration repeated_duration = 311;
inline int TestAllTypesProto3::_internal_repeated_duration_size() const {
  return _impl_.repeated_duration_.size();
}
inline int TestAllTypesProto3::repeated_duration_size() const {
  return _internal_repeated_duration_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::mutable_repeated_duration(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_duration)
  return _impl_.repeated_duration_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Duration >*
TestAllTypesProto3::mutable_repeated_duration() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_duration)
  return &_impl_.repeated_duration_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& TestAllTypesProto3::_internal_repeated_duration(int index) const {
  return _impl_.repeated_duration_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& TestAllTypesProto3::repeated_duration(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_duration)
  return _internal_repeated_duration(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::_internal_add_repeated_duration() {
  return _impl_.repeated_duration_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* TestAllTypesProto3::add_repeated_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _add = _internal_add_repeated_duration();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_duration)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Duration >&
TestAllTypesProto3::repeated_duration() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_duration)
  return _impl_.repeated_duration_;
}

// repeated .google.protobuf.Timestamp repeated_timestamp = 312;
inline int TestAllTypesProto3::_internal_repeated_timestamp_size() const {
  return _impl_.repeated_timestamp_.size();
}
inline int TestAllTypesProto3::repeated_timestamp_size() const {
  return _internal_repeated_timestamp_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::mutable_repeated_timestamp(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_timestamp)
  return _impl_.repeated_timestamp_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Timestamp >*
TestAllTypesProto3::mutable_repeated_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_timestamp)
  return &_impl_.repeated_timestamp_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& TestAllTypesProto3::_internal_repeated_timestamp(int index) const {
  return _impl_.repeated_timestamp_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Timestamp& TestAllTypesProto3::repeated_timestamp(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_timestamp)
  return _internal_repeated_timestamp(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::_internal_add_repeated_timestamp() {
  return _impl_.repeated_timestamp_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Timestamp* TestAllTypesProto3::add_repeated_timestamp() {
  ::PROTOBUF_NAMESPACE_ID::Timestamp* _add = _internal_add_repeated_timestamp();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_timestamp)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Timestamp >&
TestAllTypesProto3::repeated_timestamp() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_timestamp)
  return _impl_.repeated_timestamp_;
}

// repeated .google.protobuf.FieldMask repeated_fieldmask = 313;
inline int TestAllTypesProto3::_internal_repeated_fieldmask_size() const {
  return _impl_.repeated_fieldmask_.size();
}
inline int TestAllTypesProto3::repeated_fieldmask_size() const {
  return _internal_repeated_fieldmask_size();
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::mutable_repeated_fieldmask(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fieldmask)
  return _impl_.repeated_fieldmask_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FieldMask >*
TestAllTypesProto3::mutable_repeated_fieldmask() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fieldmask)
  return &_impl_.repeated_fieldmask_;
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& TestAllTypesProto3::_internal_repeated_fieldmask(int index) const {
  return _impl_.repeated_fieldmask_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& TestAllTypesProto3::repeated_fieldmask(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fieldmask)
  return _internal_repeated_fieldmask(index);
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::_internal_add_repeated_fieldmask() {
  return _impl_.repeated_fieldmask_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* TestAllTypesProto3::add_repeated_fieldmask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _add = _internal_add_repeated_fieldmask();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fieldmask)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::FieldMask >&
TestAllTypesProto3::repeated_fieldmask() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_fieldmask)
  return _impl_.repeated_fieldmask_;
}

// repeated .google.protobuf.Struct repeated_struct = 324;
inline int TestAllTypesProto3::_internal_repeated_struct_size() const {
  return _impl_.repeated_struct_.size();
}
inline int TestAllTypesProto3::repeated_struct_size() const {
  return _internal_repeated_struct_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::mutable_repeated_struct(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_struct)
  return _impl_.repeated_struct_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Struct >*
TestAllTypesProto3::mutable_repeated_struct() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_struct)
  return &_impl_.repeated_struct_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& TestAllTypesProto3::_internal_repeated_struct(int index) const {
  return _impl_.repeated_struct_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& TestAllTypesProto3::repeated_struct(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_struct)
  return _internal_repeated_struct(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::_internal_add_repeated_struct() {
  return _impl_.repeated_struct_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* TestAllTypesProto3::add_repeated_struct() {
  ::PROTOBUF_NAMESPACE_ID::Struct* _add = _internal_add_repeated_struct();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_struct)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Struct >&
TestAllTypesProto3::repeated_struct() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_struct)
  return _impl_.repeated_struct_;
}

// repeated .google.protobuf.Any repeated_any = 315;
inline int TestAllTypesProto3::_internal_repeated_any_size() const {
  return _impl_.repeated_any_.size();
}
inline int TestAllTypesProto3::repeated_any_size() const {
  return _internal_repeated_any_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::mutable_repeated_any(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_any)
  return _impl_.repeated_any_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >*
TestAllTypesProto3::mutable_repeated_any() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_any)
  return &_impl_.repeated_any_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& TestAllTypesProto3::_internal_repeated_any(int index) const {
  return _impl_.repeated_any_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& TestAllTypesProto3::repeated_any(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_any)
  return _internal_repeated_any(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::_internal_add_repeated_any() {
  return _impl_.repeated_any_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Any* TestAllTypesProto3::add_repeated_any() {
  ::PROTOBUF_NAMESPACE_ID::Any* _add = _internal_add_repeated_any();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_any)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Any >&
TestAllTypesProto3::repeated_any() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_any)
  return _impl_.repeated_any_;
}

// repeated .google.protobuf.Value repeated_value = 316;
inline int TestAllTypesProto3::_internal_repeated_value_size() const {
  return _impl_.repeated_value_.size();
}
inline int TestAllTypesProto3::repeated_value_size() const {
  return _internal_repeated_value_size();
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::mutable_repeated_value(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_value)
  return _impl_.repeated_value_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Value >*
TestAllTypesProto3::mutable_repeated_value() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_value)
  return &_impl_.repeated_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::Value& TestAllTypesProto3::_internal_repeated_value(int index) const {
  return _impl_.repeated_value_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::Value& TestAllTypesProto3::repeated_value(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_value)
  return _internal_repeated_value(index);
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::_internal_add_repeated_value() {
  return _impl_.repeated_value_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::Value* TestAllTypesProto3::add_repeated_value() {
  ::PROTOBUF_NAMESPACE_ID::Value* _add = _internal_add_repeated_value();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_value)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::Value >&
TestAllTypesProto3::repeated_value() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_value)
  return _impl_.repeated_value_;
}

// repeated .google.protobuf.ListValue repeated_list_value = 317;
inline int TestAllTypesProto3::_internal_repeated_list_value_size() const {
  return _impl_.repeated_list_value_.size();
}
inline int TestAllTypesProto3::repeated_list_value_size() const {
  return _internal_repeated_list_value_size();
}
inline ::PROTOBUF_NAMESPACE_ID::ListValue* TestAllTypesProto3::mutable_repeated_list_value(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_list_value)
  return _impl_.repeated_list_value_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::ListValue >*
TestAllTypesProto3::mutable_repeated_list_value() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_list_value)
  return &_impl_.repeated_list_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::ListValue& TestAllTypesProto3::_internal_repeated_list_value(int index) const {
  return _impl_.repeated_list_value_.Get(index);
}
inline const ::PROTOBUF_NAMESPACE_ID::ListValue& TestAllTypesProto3::repeated_list_value(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_list_value)
  return _internal_repeated_list_value(index);
}
inline ::PROTOBUF_NAMESPACE_ID::ListValue* TestAllTypesProto3::_internal_add_repeated_list_value() {
  return _impl_.repeated_list_value_.Add();
}
inline ::PROTOBUF_NAMESPACE_ID::ListValue* TestAllTypesProto3::add_repeated_list_value() {
  ::PROTOBUF_NAMESPACE_ID::ListValue* _add = _internal_add_repeated_list_value();
  // @@protoc_insertion_point(field_add:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_list_value)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PROTOBUF_NAMESPACE_ID::ListValue >&
TestAllTypesProto3::repeated_list_value() const {
  // @@protoc_insertion_point(field_list:protobuf_test_messages.proto3.TestAllTypesProto3.repeated_list_value)
  return _impl_.repeated_list_value_;
}

// int32 fieldname1 = 401;
inline void TestAllTypesProto3::clear_fieldname1() {
  _impl_.fieldname1_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_fieldname1() const {
  return _impl_.fieldname1_;
}
inline int32_t TestAllTypesProto3::fieldname1() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.fieldname1)
  return _internal_fieldname1();
}
inline void TestAllTypesProto3::_internal_set_fieldname1(int32_t value) {
  
  _impl_.fieldname1_ = value;
}
inline void TestAllTypesProto3::set_fieldname1(int32_t value) {
  _internal_set_fieldname1(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.fieldname1)
}

// int32 field_name2 = 402;
inline void TestAllTypesProto3::clear_field_name2() {
  _impl_.field_name2_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name2() const {
  return _impl_.field_name2_;
}
inline int32_t TestAllTypesProto3::field_name2() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field_name2)
  return _internal_field_name2();
}
inline void TestAllTypesProto3::_internal_set_field_name2(int32_t value) {
  
  _impl_.field_name2_ = value;
}
inline void TestAllTypesProto3::set_field_name2(int32_t value) {
  _internal_set_field_name2(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field_name2)
}

// int32 _field_name3 = 403;
inline void TestAllTypesProto3::clear__field_name3() {
  _impl_._field_name3_ = 0;
}
inline int32_t TestAllTypesProto3::_internal__field_name3() const {
  return _impl_._field_name3_;
}
inline int32_t TestAllTypesProto3::_field_name3() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3._field_name3)
  return _internal__field_name3();
}
inline void TestAllTypesProto3::_internal_set__field_name3(int32_t value) {
  
  _impl_._field_name3_ = value;
}
inline void TestAllTypesProto3::set__field_name3(int32_t value) {
  _internal_set__field_name3(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3._field_name3)
}

// int32 field__name4_ = 404;
inline void TestAllTypesProto3::clear_field__name4_() {
  _impl_.field__name4__ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field__name4_() const {
  return _impl_.field__name4__;
}
inline int32_t TestAllTypesProto3::field__name4_() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field__name4_)
  return _internal_field__name4_();
}
inline void TestAllTypesProto3::_internal_set_field__name4_(int32_t value) {
  
  _impl_.field__name4__ = value;
}
inline void TestAllTypesProto3::set_field__name4_(int32_t value) {
  _internal_set_field__name4_(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field__name4_)
}

// int32 field0name5 = 405;
inline void TestAllTypesProto3::clear_field0name5() {
  _impl_.field0name5_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field0name5() const {
  return _impl_.field0name5_;
}
inline int32_t TestAllTypesProto3::field0name5() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field0name5)
  return _internal_field0name5();
}
inline void TestAllTypesProto3::_internal_set_field0name5(int32_t value) {
  
  _impl_.field0name5_ = value;
}
inline void TestAllTypesProto3::set_field0name5(int32_t value) {
  _internal_set_field0name5(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field0name5)
}

// int32 field_0_name6 = 406;
inline void TestAllTypesProto3::clear_field_0_name6() {
  _impl_.field_0_name6_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_0_name6() const {
  return _impl_.field_0_name6_;
}
inline int32_t TestAllTypesProto3::field_0_name6() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field_0_name6)
  return _internal_field_0_name6();
}
inline void TestAllTypesProto3::_internal_set_field_0_name6(int32_t value) {
  
  _impl_.field_0_name6_ = value;
}
inline void TestAllTypesProto3::set_field_0_name6(int32_t value) {
  _internal_set_field_0_name6(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field_0_name6)
}

// int32 fieldName7 = 407;
inline void TestAllTypesProto3::clear_fieldname7() {
  _impl_.fieldname7_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_fieldname7() const {
  return _impl_.fieldname7_;
}
inline int32_t TestAllTypesProto3::fieldname7() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.fieldName7)
  return _internal_fieldname7();
}
inline void TestAllTypesProto3::_internal_set_fieldname7(int32_t value) {
  
  _impl_.fieldname7_ = value;
}
inline void TestAllTypesProto3::set_fieldname7(int32_t value) {
  _internal_set_fieldname7(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.fieldName7)
}

// int32 FieldName8 = 408;
inline void TestAllTypesProto3::clear_fieldname8() {
  _impl_.fieldname8_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_fieldname8() const {
  return _impl_.fieldname8_;
}
inline int32_t TestAllTypesProto3::fieldname8() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.FieldName8)
  return _internal_fieldname8();
}
inline void TestAllTypesProto3::_internal_set_fieldname8(int32_t value) {
  
  _impl_.fieldname8_ = value;
}
inline void TestAllTypesProto3::set_fieldname8(int32_t value) {
  _internal_set_fieldname8(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.FieldName8)
}

// int32 field_Name9 = 409;
inline void TestAllTypesProto3::clear_field_name9() {
  _impl_.field_name9_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name9() const {
  return _impl_.field_name9_;
}
inline int32_t TestAllTypesProto3::field_name9() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field_Name9)
  return _internal_field_name9();
}
inline void TestAllTypesProto3::_internal_set_field_name9(int32_t value) {
  
  _impl_.field_name9_ = value;
}
inline void TestAllTypesProto3::set_field_name9(int32_t value) {
  _internal_set_field_name9(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field_Name9)
}

// int32 Field_Name10 = 410;
inline void TestAllTypesProto3::clear_field_name10() {
  _impl_.field_name10_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name10() const {
  return _impl_.field_name10_;
}
inline int32_t TestAllTypesProto3::field_name10() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.Field_Name10)
  return _internal_field_name10();
}
inline void TestAllTypesProto3::_internal_set_field_name10(int32_t value) {
  
  _impl_.field_name10_ = value;
}
inline void TestAllTypesProto3::set_field_name10(int32_t value) {
  _internal_set_field_name10(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.Field_Name10)
}

// int32 FIELD_NAME11 = 411;
inline void TestAllTypesProto3::clear_field_name11() {
  _impl_.field_name11_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name11() const {
  return _impl_.field_name11_;
}
inline int32_t TestAllTypesProto3::field_name11() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.FIELD_NAME11)
  return _internal_field_name11();
}
inline void TestAllTypesProto3::_internal_set_field_name11(int32_t value) {
  
  _impl_.field_name11_ = value;
}
inline void TestAllTypesProto3::set_field_name11(int32_t value) {
  _internal_set_field_name11(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.FIELD_NAME11)
}

// int32 FIELD_name12 = 412;
inline void TestAllTypesProto3::clear_field_name12() {
  _impl_.field_name12_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name12() const {
  return _impl_.field_name12_;
}
inline int32_t TestAllTypesProto3::field_name12() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.FIELD_name12)
  return _internal_field_name12();
}
inline void TestAllTypesProto3::_internal_set_field_name12(int32_t value) {
  
  _impl_.field_name12_ = value;
}
inline void TestAllTypesProto3::set_field_name12(int32_t value) {
  _internal_set_field_name12(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.FIELD_name12)
}

// int32 __field_name13 = 413;
inline void TestAllTypesProto3::clear___field_name13() {
  _impl_.__field_name13_ = 0;
}
inline int32_t TestAllTypesProto3::_internal___field_name13() const {
  return _impl_.__field_name13_;
}
inline int32_t TestAllTypesProto3::__field_name13() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.__field_name13)
  return _internal___field_name13();
}
inline void TestAllTypesProto3::_internal_set___field_name13(int32_t value) {
  
  _impl_.__field_name13_ = value;
}
inline void TestAllTypesProto3::set___field_name13(int32_t value) {
  _internal_set___field_name13(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.__field_name13)
}

// int32 __Field_name14 = 414;
inline void TestAllTypesProto3::clear___field_name14() {
  _impl_.__field_name14_ = 0;
}
inline int32_t TestAllTypesProto3::_internal___field_name14() const {
  return _impl_.__field_name14_;
}
inline int32_t TestAllTypesProto3::__field_name14() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.__Field_name14)
  return _internal___field_name14();
}
inline void TestAllTypesProto3::_internal_set___field_name14(int32_t value) {
  
  _impl_.__field_name14_ = value;
}
inline void TestAllTypesProto3::set___field_name14(int32_t value) {
  _internal_set___field_name14(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.__Field_name14)
}

// int32 field__name15 = 415;
inline void TestAllTypesProto3::clear_field__name15() {
  _impl_.field__name15_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field__name15() const {
  return _impl_.field__name15_;
}
inline int32_t TestAllTypesProto3::field__name15() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field__name15)
  return _internal_field__name15();
}
inline void TestAllTypesProto3::_internal_set_field__name15(int32_t value) {
  
  _impl_.field__name15_ = value;
}
inline void TestAllTypesProto3::set_field__name15(int32_t value) {
  _internal_set_field__name15(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field__name15)
}

// int32 field__Name16 = 416;
inline void TestAllTypesProto3::clear_field__name16() {
  _impl_.field__name16_ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field__name16() const {
  return _impl_.field__name16_;
}
inline int32_t TestAllTypesProto3::field__name16() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field__Name16)
  return _internal_field__name16();
}
inline void TestAllTypesProto3::_internal_set_field__name16(int32_t value) {
  
  _impl_.field__name16_ = value;
}
inline void TestAllTypesProto3::set_field__name16(int32_t value) {
  _internal_set_field__name16(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field__Name16)
}

// int32 field_name17__ = 417;
inline void TestAllTypesProto3::clear_field_name17__() {
  _impl_.field_name17___ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name17__() const {
  return _impl_.field_name17___;
}
inline int32_t TestAllTypesProto3::field_name17__() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.field_name17__)
  return _internal_field_name17__();
}
inline void TestAllTypesProto3::_internal_set_field_name17__(int32_t value) {
  
  _impl_.field_name17___ = value;
}
inline void TestAllTypesProto3::set_field_name17__(int32_t value) {
  _internal_set_field_name17__(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.field_name17__)
}

// int32 Field_name18__ = 418;
inline void TestAllTypesProto3::clear_field_name18__() {
  _impl_.field_name18___ = 0;
}
inline int32_t TestAllTypesProto3::_internal_field_name18__() const {
  return _impl_.field_name18___;
}
inline int32_t TestAllTypesProto3::field_name18__() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.TestAllTypesProto3.Field_name18__)
  return _internal_field_name18__();
}
inline void TestAllTypesProto3::_internal_set_field_name18__(int32_t value) {
  
  _impl_.field_name18___ = value;
}
inline void TestAllTypesProto3::set_field_name18__(int32_t value) {
  _internal_set_field_name18__(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.TestAllTypesProto3.Field_name18__)
}

inline bool TestAllTypesProto3::has_oneof_field() const {
  return oneof_field_case() != ONEOF_FIELD_NOT_SET;
}
inline void TestAllTypesProto3::clear_has_oneof_field() {
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}
inline TestAllTypesProto3::OneofFieldCase TestAllTypesProto3::oneof_field_case() const {
  return TestAllTypesProto3::OneofFieldCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ForeignMessage

// int32 c = 1;
inline void ForeignMessage::clear_c() {
  _impl_.c_ = 0;
}
inline int32_t ForeignMessage::_internal_c() const {
  return _impl_.c_;
}
inline int32_t ForeignMessage::c() const {
  // @@protoc_insertion_point(field_get:protobuf_test_messages.proto3.ForeignMessage.c)
  return _internal_c();
}
inline void ForeignMessage::_internal_set_c(int32_t value) {
  
  _impl_.c_ = value;
}
inline void ForeignMessage::set_c(int32_t value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:protobuf_test_messages.proto3.ForeignMessage.c)
}

// -------------------------------------------------------------------

// NullHypothesisProto3

// -------------------------------------------------------------------

// EnumOnlyProto3

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto3
}  // namespace protobuf_test_messages

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum>() {
  return ::protobuf_test_messages::proto3::TestAllTypesProto3_NestedEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum>() {
  return ::protobuf_test_messages::proto3::TestAllTypesProto3_AliasedEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_test_messages::proto3::EnumOnlyProto3_Bool> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_test_messages::proto3::EnumOnlyProto3_Bool>() {
  return ::protobuf_test_messages::proto3::EnumOnlyProto3_Bool_descriptor();
}
template <> struct is_proto_enum< ::protobuf_test_messages::proto3::ForeignEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_test_messages::proto3::ForeignEnum>() {
  return ::protobuf_test_messages::proto3::ForeignEnum_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2ftest_5fmessages_5fproto3_2eproto
